<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glGetTexLevelParameter">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glGetTexLevelParameter</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetTexLevelParameter</refname>
        <refpurpose>return texture parameter values for a specific level of detail</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetTexLevelParameterfv</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLint <parameter>level</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLfloat * <parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetTexLevelParameteriv</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLint <parameter>level</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint * <parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    Specifies the symbolic name of the target texture,
                    either <constant>GL_TEXTURE_1D</constant>, <constant>GL_TEXTURE_2D</constant>, <constant>GL_TEXTURE_3D</constant>,
                    <constant>GL_PROXY_TEXTURE_1D</constant>, <constant>GL_PROXY_TEXTURE_2D</constant>,
                    <constant>GL_PROXY_TEXTURE_3D</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_X</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_X</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Y</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Z</constant>,
                    <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</constant>, or
                    <constant>GL_PROXY_TEXTURE_CUBE_MAP</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>level</parameter></term>
            <listitem>
                <para>
                    Specifies the level-of-detail number of the desired image.
                    Level 0 is the base image level.
                    Level 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">n</mml:mi></mml:math></inlineequation>
                    is the 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">n</mml:mi></mml:math></inlineequation>th
                    mipmap reduction image.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>pname</parameter></term>
            <listitem>
                <para>
                    Specifies the symbolic name of a texture parameter.
                    <constant>GL_TEXTURE_WIDTH</constant>,
                    <constant>GL_TEXTURE_HEIGHT</constant>,
                    <constant>GL_TEXTURE_DEPTH</constant>,
                    <constant>GL_TEXTURE_INTERNAL_FORMAT</constant>,
                    <constant>GL_TEXTURE_BORDER</constant>,
                    <constant>GL_TEXTURE_RED_SIZE</constant>,
                    <constant>GL_TEXTURE_GREEN_SIZE</constant>,
                    <constant>GL_TEXTURE_BLUE_SIZE</constant>,
                    <constant>GL_TEXTURE_ALPHA_SIZE</constant>,
                    <constant>GL_TEXTURE_LUMINANCE_SIZE</constant>,
                    <constant>GL_TEXTURE_INTENSITY_SIZE</constant>,
                    <constant>GL_TEXTURE_DEPTH_SIZE</constant>,
                    <constant>GL_TEXTURE_COMPRESSED</constant>, and
                    <constant>GL_TEXTURE_COMPRESSED_IMAGE_SIZE</constant>
                     are accepted.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>params</parameter></term>
            <listitem>
                <para>
                    Returns the requested data.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            <function>glGetTexLevelParameter</function> returns in <parameter>params</parameter> texture parameter values for a specific
            level-of-detail value,
            specified as <parameter>level</parameter>.
            <parameter>target</parameter> defines the target texture,
            either <constant>GL_TEXTURE_1D</constant>, <constant>GL_TEXTURE_2D</constant>, <constant>GL_TEXTURE_3D</constant>,
            <constant>GL_PROXY_TEXTURE_1D</constant>,
            <constant>GL_PROXY_TEXTURE_2D</constant>,
            <constant>GL_PROXY_TEXTURE_3D</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_X</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_X</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Y</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Z</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</constant>, or
            <constant>GL_PROXY_TEXTURE_CUBE_MAP</constant>.
        </para>
        <para>
            <constant>GL_MAX_TEXTURE_SIZE</constant>, and <constant>GL_MAX_3D_TEXTURE_SIZE</constant> are not really
            descriptive enough.
            It has to report the largest square texture image that can be
            accommodated with mipmaps and borders,
            but a long skinny texture, or a texture without mipmaps and borders, may
            easily fit in texture memory.
            The proxy targets allow the user to more accurately query
            whether the GL can accommodate a texture of a given configuration.
            If the texture cannot be accommodated, the texture state variables, which
            may be queried with <function>glGetTexLevelParameter</function>, are set to 0.  If the texture can be accommodated,
            the texture state values will be set as they would be set for a
            non-proxy target.
        </para>
        <para>
            <parameter>pname</parameter> specifies the texture parameter whose value or values
            will be returned.
        </para>
        <para>
            The accepted parameter names are as follows:
        </para>
        <variablelist>
            <varlistentry>
                <term><constant>GL_TEXTURE_WIDTH</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single value,
                        the width of the texture image.
                        This value includes the border of the texture image. The initial value is
                        0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_HEIGHT</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single value,
                        the height of the texture image.
                        This value includes the border of the texture image. The initial value is
                        0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_DEPTH</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single value,
                        the depth of the texture image.
                        This value includes the border of the texture image. The initial value is
                        0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_INTERNAL_FORMAT</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single value,
                        the internal format of the texture image.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_BORDER</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single value,
                        the width in pixels of the border of the texture image. The initial value
                        is 0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_RED_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_GREEN_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_BLUE_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_ALPHA_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_LUMINANCE_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_INTENSITY_SIZE</constant>,</term>
                <listitem>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_DEPTH_SIZE</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        The internal storage resolution of an individual component.
                        The resolution chosen by the GL will be a close match for the resolution
                        requested by the user with the component argument of <citerefentry><refentrytitle>glTexImage1D</refentrytitle></citerefentry>,
                        <citerefentry><refentrytitle>glTexImage2D</refentrytitle></citerefentry>, <citerefentry><refentrytitle>glTexImage3D</refentrytitle></citerefentry>, <citerefentry><refentrytitle>glCopyTexImage1D</refentrytitle></citerefentry>, and
                        <citerefentry><refentrytitle>glCopyTexImage2D</refentrytitle></citerefentry>. The initial value is 0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_COMPRESSED</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single boolean value indicating if the texture image is
                        stored in a compressed internal format.  The initiali value is <constant>GL_FALSE</constant>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_TEXTURE_COMPRESSED_IMAGE_SIZE</constant></term>
                <listitem>
                    <para>
                    </para>
                    <para>
                        <parameter>params</parameter> returns a single integer value, the number of unsigned bytes of the
                        compressed texture image that would be returned from
                        <citerefentry><refentrytitle>glGetCompressedTexImage</refentrytitle></citerefentry>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="notes"><title>Notes</title>
        <para>
            If an error is generated,
            no change is made to the contents of <parameter>params</parameter>.
        </para>
        <para>
            <constant>GL_TEXTURE_INTERNAL_FORMAT</constant> is available only if the GL version is
            1.1 or greater. In version 1.0, use <constant>GL_TEXTURE_COMPONENTS</constant>
            instead.
        </para>
        <para>
            <constant>GL_PROXY_TEXTURE_1D</constant> and <constant>GL_PROXY_TEXTURE_2D</constant> are
            available only if the GL version is 1.1 or greater.
        </para>
        <para>
            <constant>GL_TEXTURE_3D</constant>, <constant>GL_PROXY_TEXTURE_3D</constant>, and <constant>GL_TEXTURE_DEPTH</constant>
            are available only if the GL version is 1.2 or greater.
        </para>
        <para>
            <constant>GL_TEXTURE_COMPRESSED</constant>,
            <constant>GL_TEXTURE_COMPRESSED_IMAGE_SIZE</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_X</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_X</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Y</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_POSITIVE_Z</constant>,
            <constant>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</constant>, and
            <constant>GL_PROXY_TEXTURE_CUBE_MAP</constant> are available only if the GL version is 1.3
            or greater.
        </para>
        <para>
            For OpenGL versions 1.3 and greater, or when the <code>ARB_multitexture</code> extension is supported, <function>glGetTexLevelParameter</function> returns
            the texture level parameters for the active texture unit.
        </para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> or <parameter>pname</parameter> is not an
            accepted value.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>level</parameter> is less than 0.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> may be generated if <parameter>level</parameter> is greater
            than 
            <inlineequation><mml:math>
                <!-- eqn: log sub 2:-->
                <mml:msub><mml:mi mathvariant="italic">log</mml:mi>
                <mml:mn>2</mml:mn>
                </mml:msub>
            </mml:math></inlineequation>
            <emphasis>max</emphasis>,
            where <emphasis>max</emphasis> is the returned value of <constant>GL_MAX_TEXTURE_SIZE</constant>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glGetTexLevelParameter</function>
            is executed between the execution of <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
            and the corresponding execution of <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if
            <constant>GL_TEXTURE_COMPRESSED_IMAGE_SIZE</constant> is queried on texture images with an
            uncompressed internal format or on proxy targets.
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glActiveTexture</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGetTexParameter</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCopyTexImage1D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCopyTexImage2D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCopyTexSubImage1D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCopyTexSubImage2D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCopyTexSubImage3D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexEnv</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexGen</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexImage1D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexImage2D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexImage3D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexSubImage1D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexSubImage2D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexSubImage3D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexParameter</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <ulink url="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</ulink>.
        </para>
    </refsect1>
</refentry>
