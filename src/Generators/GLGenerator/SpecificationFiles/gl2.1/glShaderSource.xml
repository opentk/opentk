<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
	      "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glShaderSource">
    <refmeta>
	<refentrytitle>glShaderSource</refentrytitle>
	<manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
	<refname>glShaderSource</refname>
	<refpurpose>Replaces the source code in a shader object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
	<funcsynopsis>
	    <funcprototype>
		<funcdef>void <function>glShaderSource</function></funcdef>
		<paramdef>GLuint <parameter>shader</parameter></paramdef>
		<paramdef>GLsizei <parameter>count</parameter></paramdef>
		<paramdef>const GLchar **<parameter>string</parameter></paramdef>
		<paramdef>const GLint *<parameter>length</parameter></paramdef>
	    </funcprototype>
	</funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
	<variablelist>
	    <varlistentry>
		<term><parameter>shader</parameter></term>
		<listitem>
		    <para>Specifies the handle of the shader object
		    whose source code is to be replaced.</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>count</parameter></term>
		<listitem>
		    <para>Specifies the number of elements in the
		    <parameter>string</parameter> and
		    <parameter>length</parameter>
		    arrays.</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>string</parameter></term>
		<listitem>
		    <para>Specifies an array of pointers to strings
		    containing the source code to be loaded into the
		    shader.</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>length</parameter></term>
		<listitem>
		    <para>Specifies an array of string lengths.</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
	<para><function>glShaderSource</function> sets the source code
	in <parameter>shader</parameter> to the source code in the array
	of strings specified by <parameter>string</parameter>. Any
	source code previously stored in the shader object is completely
	replaced. The number of strings in the array is specified by
	<parameter>count</parameter>. If <parameter>length</parameter>
	is <constant>NULL</constant>, each string is assumed to be null
	terminated. If <parameter>length</parameter> is a value other
	than <constant>NULL</constant>, it points to an array containing
	a string length for each of the corresponding elements of
	<parameter>string</parameter>. Each element in the
	<parameter>length</parameter> array may contain the length of
	the corresponding string (the null character is not counted as
	part of the string length) or a value less than 0 to indicate
	that the string is null terminated. The source code strings are
	not scanned or parsed at this time; they are simply copied into
	the specified shader object.</para>
    </refsect1>
    <refsect1 id="notes"><title>Notes</title>
	<para><function>glShaderSource</function> is available only if
	the GL version is 2.0 or greater.</para>

	<para>OpenGL copies the shader source code strings when
	<function>glShaderSource</function> is called, so an application
	may free its copy of the source code strings immediately after
	the function returns.</para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
	<para><constant>GL_INVALID_VALUE</constant> is generated if
	<parameter>shader</parameter> is not a value generated by
	OpenGL.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<parameter>shader</parameter> is not a shader object.</para>

	<para><constant>GL_INVALID_VALUE</constant> is generated if
	<parameter>count</parameter> is less than 0.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<function>glShaderSource</function> is executed between the
	execution of
	<citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
	and the corresponding execution of
	<citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.</para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
	<para><citerefentry><refentrytitle>glGetShader</refentrytitle></citerefentry>
	with arguments <parameter>shader</parameter> and
	<constant>GL_SHADER_SOURCE_LENGTH</constant></para>

	<para><citerefentry><refentrytitle>glGetShaderSource</refentrytitle></citerefentry>
	with argument <parameter>shader</parameter></para>

	<para><citerefentry><refentrytitle>glIsShader</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
	<para><citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glCreateShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glDeleteShader</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
