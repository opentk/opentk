<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
	      "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glAttachShader">
    <refmeta>
	<refentrytitle>glAttachShader</refentrytitle>
	<manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
	<refname>glAttachShader</refname>
	<refpurpose>Attaches a shader object to a program object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
	<funcsynopsis>
	    <funcprototype>
		<funcdef>void <function>glAttachShader</function></funcdef>
		<paramdef>GLuint <parameter>program</parameter></paramdef>
		<paramdef>GLuint <parameter>shader</parameter></paramdef>
	    </funcprototype>
	</funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
	<variablelist>
	    <varlistentry>
		<term><parameter>program</parameter></term>
		<listitem>
		    <para>Specifies the program object to which a shader
		    object will be attached.</para>
		</listitem>

	    </varlistentry>
	    <varlistentry>
		<term><parameter>shader</parameter></term>
		<listitem>
		    <para>Specifies the shader object that is to be attached.</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
	<para>In order to create an executable, there must be a way to
	specify the list of things that will be linked together. Program
	objects provide this mechanism. Shaders that are to be linked
	together in a program object must first be attached to that
	program object. <function>glAttachShader</function> attaches the
	shader object specified by <parameter>shader</parameter> to the
	program object specified by <parameter>program</parameter>. This
	indicates that <parameter>shader</parameter> will be included in
	link operations that will be performed on
	<parameter>program</parameter>.</para>

	<para>All operations that can be performed on a shader object
	are valid whether or not the shader object is attached to a
	program object. It is permissible to attach a shader object to a
	program object before source code has been loaded into the
	shader object or before the shader object has been compiled. It
	is permissible to attach multiple shader objects of the same
	type because each may contain a portion of the complete shader.
	It is also permissible to attach a shader object to more than
	one program object. If a shader object is deleted while it is
	attached to a program object, it will be flagged for deletion,
	and deletion will not occur until
	<citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry>
	is called to detach it from all program objects to which it is
	attached.</para>
    </refsect1>
    <refsect1 id="notes"><title>Notes</title>
	<para><function>glAttachShader</function>
	is available only if the GL version is 2.0 or greater.</para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
	<para><constant>GL_INVALID_VALUE</constant> is generated if either
	<parameter>program</parameter> or <parameter>shader</parameter>
	is not a value generated by OpenGL.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<parameter>program</parameter> is not a program object.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<parameter>shader</parameter> is not a shader object.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<parameter>shader</parameter> is already attached to
	<parameter>program</parameter>.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<function>glAttachShader</function> is executed between the
	execution of
	<citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
	and the corresponding execution of
	<citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.</para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
	<para><citerefentry><refentrytitle>glGetAttachedShaders</refentrytitle></citerefentry>
	with the handle of a valid program object</para>

	<para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>

	<para><citerefentry><refentrytitle>glIsShader</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
	<para><citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glShaderSource</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
