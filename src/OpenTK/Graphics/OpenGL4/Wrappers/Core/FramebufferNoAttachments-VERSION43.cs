//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL4
{
    public sealed partial class GL
    {
        /// <summary>
        /// [requires: v4.3 or ARB_framebuffer_no_attachments|VERSION_4_3]
        /// Set a named parameter of a framebuffer
        /// </summary>
        /// <param name="target">
        /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
        /// </param>
        /// <param name="pname">
        /// A token indicating the parameter to be modified.
        /// </param>
        /// <param name="param">
        /// The new value for the parameter named pname.
        /// </param>
        [AutoGenerated(Category = "ARB_framebuffer_no_attachments|VERSION_4_3", Version = "4.3", EntryPoint = "glFramebufferParameteri")]
        public static void FramebufferParameter(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, int param)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.3 or ARB_framebuffer_no_attachments|VERSION_4_3]
        /// Retrieve a named parameter from a framebuffer
        /// </summary>
        /// <param name="target">
        /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
        /// </param>
        /// <param name="pname">
        /// A token indicating the parameter to be retrieved.
        /// </param>
        /// <param name="params">
        /// [length: COMPSIZE(pname)]
        /// The address of a variable to receive the value of the parameter named pname.
        /// </param>
        [AutoGenerated(Category = "ARB_framebuffer_no_attachments|VERSION_4_3", Version = "4.3", EntryPoint = "glGetFramebufferParameteriv")]
        public static void GetFramebufferParameter(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, [OutAttribute, CountAttribute(Computed = "pname")] int[] @params)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.3 or ARB_framebuffer_no_attachments|VERSION_4_3]
        /// Retrieve a named parameter from a framebuffer
        /// </summary>
        /// <param name="target">
        /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
        /// </param>
        /// <param name="pname">
        /// A token indicating the parameter to be retrieved.
        /// </param>
        /// <param name="params">
        /// [length: COMPSIZE(pname)]
        /// The address of a variable to receive the value of the parameter named pname.
        /// </param>
        [AutoGenerated(Category = "ARB_framebuffer_no_attachments|VERSION_4_3", Version = "4.3", EntryPoint = "glGetFramebufferParameteriv")]
        public static void GetFramebufferParameter(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, [OutAttribute, CountAttribute(Computed = "pname")] out int @params)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.3 or ARB_framebuffer_no_attachments|VERSION_4_3]
        /// Retrieve a named parameter from a framebuffer
        /// </summary>
        /// <param name="target">
        /// The target of the operation, which must be ReadFramebuffer, DrawFramebuffer or Framebuffer.
        /// </param>
        /// <param name="pname">
        /// A token indicating the parameter to be retrieved.
        /// </param>
        /// <param name="params">
        /// [length: COMPSIZE(pname)]
        /// The address of a variable to receive the value of the parameter named pname.
        /// </param>
        [AutoGenerated(Category = "ARB_framebuffer_no_attachments|VERSION_4_3", Version = "4.3", EntryPoint = "glGetFramebufferParameteriv")]
        public static unsafe void GetFramebufferParameter(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, [OutAttribute, CountAttribute(Computed = "pname")] int* @params)
        {
            throw new BindingsNotRewrittenException();
        }

        #pragma warning disable SA1300 // Element should begin with an upper-case letter

        [Slot(287)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glFramebufferParameteri(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, int param);

        [Slot(367)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetFramebufferParameteriv(OpenTK.Graphics.OpenGL4.FramebufferTarget target, OpenTK.Graphics.OpenGL4.FramebufferDefaultParameter pname, [OutAttribute, CountAttribute(Computed = "pname")] int* @params);
    }
}
