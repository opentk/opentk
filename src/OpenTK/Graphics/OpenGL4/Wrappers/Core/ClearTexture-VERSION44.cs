//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL4
{
    public sealed partial class GL
    {
        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexImage")]
        public static void ClearTexImage(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [CountAttribute(Computed = "format,type")] IntPtr data)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexImage")]
        public static void ClearTexImage<T4>(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T4[] data)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexImage")]
        public static void ClearTexImage<T4>(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T4[,] data)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexImage")]
        public static void ClearTexImage<T4>(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T4[,,] data)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexImage")]
        public static void ClearTexImage<T4>(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] ref T4 data)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all or part of a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="xoffset">
        /// The coordinate of the left edge of the region to be cleared.
        /// </param>
        /// <param name="yoffset">
        /// The coordinate of the lower edge of the region to be cleared.
        /// </param>
        /// <param name="zoffset">
        /// The coordinate of the front of the region to be cleared.
        /// </param>
        /// <param name="width">
        /// The width of the region to be cleared.
        /// </param>
        /// <param name="height">
        /// The height of the region to be cleared.
        /// </param>
        /// <param name="depth">
        /// The depth of the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexSubImage")]
        public static void ClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [CountAttribute(Computed = "format,type")] IntPtr data)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all or part of a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="xoffset">
        /// The coordinate of the left edge of the region to be cleared.
        /// </param>
        /// <param name="yoffset">
        /// The coordinate of the lower edge of the region to be cleared.
        /// </param>
        /// <param name="zoffset">
        /// The coordinate of the front of the region to be cleared.
        /// </param>
        /// <param name="width">
        /// The width of the region to be cleared.
        /// </param>
        /// <param name="height">
        /// The height of the region to be cleared.
        /// </param>
        /// <param name="depth">
        /// The depth of the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T10"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexSubImage")]
        public static void ClearTexSubImage<T10>(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T10[] data)
            where T10 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all or part of a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="xoffset">
        /// The coordinate of the left edge of the region to be cleared.
        /// </param>
        /// <param name="yoffset">
        /// The coordinate of the lower edge of the region to be cleared.
        /// </param>
        /// <param name="zoffset">
        /// The coordinate of the front of the region to be cleared.
        /// </param>
        /// <param name="width">
        /// The width of the region to be cleared.
        /// </param>
        /// <param name="height">
        /// The height of the region to be cleared.
        /// </param>
        /// <param name="depth">
        /// The depth of the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T10"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexSubImage")]
        public static void ClearTexSubImage<T10>(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T10[,] data)
            where T10 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all or part of a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="xoffset">
        /// The coordinate of the left edge of the region to be cleared.
        /// </param>
        /// <param name="yoffset">
        /// The coordinate of the lower edge of the region to be cleared.
        /// </param>
        /// <param name="zoffset">
        /// The coordinate of the front of the region to be cleared.
        /// </param>
        /// <param name="width">
        /// The width of the region to be cleared.
        /// </param>
        /// <param name="height">
        /// The height of the region to be cleared.
        /// </param>
        /// <param name="depth">
        /// The depth of the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T10"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexSubImage")]
        public static void ClearTexSubImage<T10>(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] T10[,,] data)
            where T10 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.4 or ARB_clear_texture|VERSION_4_4]
        /// Fills all or part of a texture image with a constant value
        /// </summary>
        /// <param name="texture">
        /// The name of an existing texture object containing the image to be cleared.
        /// </param>
        /// <param name="level">
        /// The level of texture containing the region to be cleared.
        /// </param>
        /// <param name="xoffset">
        /// The coordinate of the left edge of the region to be cleared.
        /// </param>
        /// <param name="yoffset">
        /// The coordinate of the lower edge of the region to be cleared.
        /// </param>
        /// <param name="zoffset">
        /// The coordinate of the front of the region to be cleared.
        /// </param>
        /// <param name="width">
        /// The width of the region to be cleared.
        /// </param>
        /// <param name="height">
        /// The height of the region to be cleared.
        /// </param>
        /// <param name="depth">
        /// The depth of the region to be cleared.
        /// </param>
        /// <param name="format">
        /// The format of the data whose address in memory is given by data.
        /// </param>
        /// <param name="type">
        /// The type of the data whose address in memory is given by data.
        /// </param>
        /// <param name="data">
        /// [length: COMPSIZE(format,type)]
        /// The address in memory of the data to be used to clear the specified region.
        /// </param>
        /// <typeparam name="T10"></typeparam>
        [AutoGenerated(Category = "ARB_clear_texture|VERSION_4_4", Version = "4.4", EntryPoint = "glClearTexSubImage")]
        public static void ClearTexSubImage<T10>(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [InAttribute, OutAttribute, CountAttribute(Computed = "format,type")] ref T10 data)
            where T10 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        #pragma warning disable SA1300 // Element should begin with an upper-case letter

        [Slot(84)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glClearTexImage(uint texture, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [CountAttribute(Computed = "format,type")] IntPtr data);

        [Slot(85)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glClearTexSubImage(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, [CountAttribute(Computed = "format,type")] IntPtr data);
    }
}
