//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL4
{
    public sealed partial class GL
    {
        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="table">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnColorTable")]
        public static void GetnColorTable(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr table)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="table">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnColorTable")]
        public static void GetnColorTable<T4>(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[] table)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="table">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnColorTable")]
        public static void GetnColorTable<T4>(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[,] table)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="table">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnColorTable")]
        public static void GetnColorTable<T4>(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[,,] table)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="table">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnColorTable")]
        public static void GetnColorTable<T4>(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] ref T4 table)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="lod">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnCompressedTexImage")]
        public static void GetnCompressedTexImage(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [OutAttribute] IntPtr pixels)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="lod">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T3"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnCompressedTexImage")]
        public static void GetnCompressedTexImage<T3>(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [InAttribute, OutAttribute] T3[] pixels)
            where T3 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="lod">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T3"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnCompressedTexImage")]
        public static void GetnCompressedTexImage<T3>(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [InAttribute, OutAttribute] T3[,] pixels)
            where T3 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="lod">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T3"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnCompressedTexImage")]
        public static void GetnCompressedTexImage<T3>(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [InAttribute, OutAttribute] T3[,,] pixels)
            where T3 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="lod">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T3"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnCompressedTexImage")]
        public static void GetnCompressedTexImage<T3>(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [InAttribute, OutAttribute] ref T3 pixels)
            where T3 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="image">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnConvolutionFilter")]
        public static void GetnConvolutionFilter(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr image)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="image">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnConvolutionFilter")]
        public static void GetnConvolutionFilter<T4>(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[] image)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="image">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnConvolutionFilter")]
        public static void GetnConvolutionFilter<T4>(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[,] image)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="image">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnConvolutionFilter")]
        public static void GetnConvolutionFilter<T4>(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T4[,,] image)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="image">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnConvolutionFilter")]
        public static void GetnConvolutionFilter<T4>(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] ref T4 image)
            where T4 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnHistogram")]
        public static void GetnHistogram(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnHistogram")]
        public static void GetnHistogram<T5>(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnHistogram")]
        public static void GetnHistogram<T5>(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnHistogram")]
        public static void GetnHistogram<T5>(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,,] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnHistogram")]
        public static void GetnHistogram<T5>(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] ref T5 values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapdv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] double[] v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapdv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] out double v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapdv")]
        public static unsafe void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] double* v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapfv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] float[] v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapfv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] out float v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapfv")]
        public static unsafe void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] float* v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapiv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] int[] v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapiv")]
        public static void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] out int v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="query">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="v">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMapiv")]
        public static unsafe void GetnMap(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] int* v)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMinmax")]
        public static void GetnMinmax(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMinmax")]
        public static void GetnMinmax<T5>(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMinmax")]
        public static void GetnMinmax<T5>(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMinmax")]
        public static void GetnMinmax<T5>(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,,] values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="reset">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnMinmax")]
        public static void GetnMinmax<T5>(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] ref T5 values)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapfv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] float[] values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapfv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] out float values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapfv")]
        public static unsafe void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] float* values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapuiv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] uint[] values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapuiv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] out uint values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapuiv")]
        public static unsafe void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] uint* values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapusv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] ushort[] values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapusv")]
        public static void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] out ushort values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="map">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="values">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPixelMapusv")]
        public static unsafe void GetnPixelMap(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] ushort* values)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPolygonStipple")]
        public static byte GetnPolygonStipple()
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pattern">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPolygonStipple")]
        public static void GetnPolygonStipple(int bufSize, [OutAttribute] byte[] pattern)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pattern">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPolygonStipple")]
        public static void GetnPolygonStipple(int bufSize, [OutAttribute] out byte pattern)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pattern">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnPolygonStipple")]
        public static unsafe void GetnPolygonStipple(int bufSize, [OutAttribute] byte* pattern)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="rowBufSize">
        /// </param>
        /// <param name="row">
        /// </param>
        /// <param name="columnBufSize">
        /// </param>
        /// <param name="column">
        /// </param>
        /// <param name="span">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnSeparableFilter")]
        public static void GetnSeparableFilter(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [OutAttribute] IntPtr row, int columnBufSize, [OutAttribute] IntPtr column, [OutAttribute] IntPtr span)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="rowBufSize">
        /// </param>
        /// <param name="row">
        /// </param>
        /// <param name="columnBufSize">
        /// </param>
        /// <param name="column">
        /// </param>
        /// <param name="span">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        /// <typeparam name="T6"></typeparam>
        /// <typeparam name="T7"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnSeparableFilter")]
        public static void GetnSeparableFilter<T4, T6, T7>(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [InAttribute, OutAttribute] T4[] row, int columnBufSize, [InAttribute, OutAttribute] T6[] column, [InAttribute, OutAttribute] T7[] span)
            where T4 : struct
            where T6 : struct
            where T7 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="rowBufSize">
        /// </param>
        /// <param name="row">
        /// </param>
        /// <param name="columnBufSize">
        /// </param>
        /// <param name="column">
        /// </param>
        /// <param name="span">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        /// <typeparam name="T6"></typeparam>
        /// <typeparam name="T7"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnSeparableFilter")]
        public static void GetnSeparableFilter<T4, T6, T7>(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [InAttribute, OutAttribute] T4[,] row, int columnBufSize, [InAttribute, OutAttribute] T6[,] column, [InAttribute, OutAttribute] T7[,] span)
            where T4 : struct
            where T6 : struct
            where T7 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="rowBufSize">
        /// </param>
        /// <param name="row">
        /// </param>
        /// <param name="columnBufSize">
        /// </param>
        /// <param name="column">
        /// </param>
        /// <param name="span">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        /// <typeparam name="T6"></typeparam>
        /// <typeparam name="T7"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnSeparableFilter")]
        public static void GetnSeparableFilter<T4, T6, T7>(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [InAttribute, OutAttribute] T4[,,] row, int columnBufSize, [InAttribute, OutAttribute] T6[,,] column, [InAttribute, OutAttribute] T7[,,] span)
            where T4 : struct
            where T6 : struct
            where T7 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="rowBufSize">
        /// </param>
        /// <param name="row">
        /// </param>
        /// <param name="columnBufSize">
        /// </param>
        /// <param name="column">
        /// </param>
        /// <param name="span">
        /// </param>
        /// <typeparam name="T4"></typeparam>
        /// <typeparam name="T6"></typeparam>
        /// <typeparam name="T7"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnSeparableFilter")]
        public static void GetnSeparableFilter<T4, T6, T7>(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [InAttribute, OutAttribute] ref T4 row, int columnBufSize, [InAttribute, OutAttribute] ref T6 column, [InAttribute, OutAttribute] ref T7 span)
            where T4 : struct
            where T6 : struct
            where T7 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="level">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnTexImage")]
        public static void GetnTexImage(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr pixels)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="level">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnTexImage")]
        public static void GetnTexImage<T5>(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[] pixels)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="level">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnTexImage")]
        public static void GetnTexImage<T5>(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,] pixels)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="level">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnTexImage")]
        public static void GetnTexImage<T5>(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] T5[,,] pixels)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="target">
        /// </param>
        /// <param name="level">
        /// </param>
        /// <param name="format">
        /// </param>
        /// <param name="type">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="pixels">
        /// </param>
        /// <typeparam name="T5"></typeparam>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnTexImage")]
        public static void GetnTexImage<T5>(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [InAttribute, OutAttribute] ref T5 pixels)
            where T5 : struct
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="program">
        /// </param>
        /// <param name="location">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="params">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnUniformdv")]
        public static void GetnUniform(uint program, int location, int bufSize, [OutAttribute] double[] @params)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="program">
        /// </param>
        /// <param name="location">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="params">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnUniformdv")]
        public static void GetnUniform(uint program, int location, int bufSize, [OutAttribute] out double @params)
        {
            throw new BindingsNotRewrittenException();
        }

        /// <summary>
        /// [requires: v4.5]
        /// </summary>
        /// <param name="program">
        /// </param>
        /// <param name="location">
        /// </param>
        /// <param name="bufSize">
        /// </param>
        /// <param name="params">
        /// </param>
        [AutoGenerated(Category = "VERSION_4_5", Version = "4.5", EntryPoint = "glGetnUniformdv")]
        public static unsafe void GetnUniform(uint program, int location, int bufSize, [OutAttribute] double* @params)
        {
            throw new BindingsNotRewrittenException();
        }

        #pragma warning disable SA1300 // Element should begin with an upper-case letter

        [Slot(425)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnColorTable(OpenTK.Graphics.OpenGL4.ColorTableTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr table);

        [Slot(427)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnCompressedTexImage(OpenTK.Graphics.OpenGL4.TextureTarget target, int lod, int bufSize, [OutAttribute] IntPtr pixels);

        [Slot(429)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnConvolutionFilter(OpenTK.Graphics.OpenGL4.ConvolutionTarget target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr image);

        [Slot(432)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnHistogram(OpenTK.Graphics.OpenGL4.HistogramTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr values);

        [Slot(434)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnMapdv(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] double* v);

        [Slot(436)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnMapfv(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] float* v);

        [Slot(438)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnMapiv(OpenTK.Graphics.OpenGL4.MapTarget target, OpenTK.Graphics.OpenGL4.MapQuery query, int bufSize, [OutAttribute] int* v);

        [Slot(440)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnMinmax(OpenTK.Graphics.OpenGL4.MinmaxTargetExt target, bool reset, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr values);

        [Slot(442)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnPixelMapfv(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] float* values);

        [Slot(444)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnPixelMapuiv(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] uint* values);

        [Slot(446)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnPixelMapusv(OpenTK.Graphics.OpenGL4.PixelMap map, int bufSize, [OutAttribute] ushort* values);

        [Slot(448)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnPolygonStipple(int bufSize, [OutAttribute] byte* pattern);

        [Slot(450)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnSeparableFilter(OpenTK.Graphics.OpenGL4.SeparableTargetExt target, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int rowBufSize, [OutAttribute] IntPtr row, int columnBufSize, [OutAttribute] IntPtr column, [OutAttribute] IntPtr span);

        [Slot(452)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern void glGetnTexImage(OpenTK.Graphics.OpenGL4.TextureTarget target, int level, OpenTK.Graphics.OpenGL4.PixelFormat format, OpenTK.Graphics.OpenGL4.PixelType type, int bufSize, [OutAttribute] IntPtr pixels);

        [Slot(454)]
        [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
        private static extern unsafe void glGetnUniformdv(uint program, int location, int bufSize, [OutAttribute] double* @params);
    }
}
