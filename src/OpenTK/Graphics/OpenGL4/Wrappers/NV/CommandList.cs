//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2015 Stefanos Apostolopoulos for the Open Toolkit Library
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Text;
using System.Runtime.InteropServices;

namespace OpenTK.Graphics.OpenGL4
{
    public sealed partial class GL
    {
        /// <summary>
        /// Contains native bindings to functions in the category "CommandList" in the extension "NV".
        /// </summary>
        public static partial class NV
        {
            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCallCommandListNV")]
            public static void CallCommandList(uint list)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segments">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCommandListSegmentsNV")]
            public static void CommandListSegments(uint list, uint segments)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCompileCommandListNV")]
            public static void CompileCommandList(uint list)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateCommandListsNV")]
            public static void CreateCommandLists(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint[] lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateCommandListsNV")]
            public static void CreateCommandLists(int n, [OutAttribute, CountAttribute(Parameter = "n")] out uint lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateCommandListsNV")]
            public static unsafe void CreateCommandLists(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateStatesNV")]
            public static void CreateStates(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint[] states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateStatesNV")]
            public static void CreateStates(int n, [OutAttribute, CountAttribute(Parameter = "n")] out uint states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glCreateStatesNV")]
            public static unsafe void CreateStates(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteCommandListsNV")]
            public static void DeleteCommandList([CountAttribute(Parameter = "n")] uint lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteCommandListsNV")]
            public static void DeleteCommandLists(int n, [CountAttribute(Parameter = "n")] uint[] lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteCommandListsNV")]
            public static void DeleteCommandLists(int n, [CountAttribute(Parameter = "n")] ref uint lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="lists">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteCommandListsNV")]
            public static unsafe void DeleteCommandLists(int n, [CountAttribute(Parameter = "n")] uint* lists)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteStatesNV")]
            public static void DeleteState([CountAttribute(Parameter = "n")] uint states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteStatesNV")]
            public static void DeleteStates(int n, [CountAttribute(Parameter = "n")] uint[] states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteStatesNV")]
            public static void DeleteStates(int n, [CountAttribute(Parameter = "n")] ref uint states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="n">
            /// </param>
            /// <param name="states">
            /// [length: n]
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDeleteStatesNV")]
            public static unsafe void DeleteStates(int n, [CountAttribute(Parameter = "n")] uint* states)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsAddressNV")]
            public static void DrawCommandsAddres(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, ulong[] indirects, int[] sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsAddressNV")]
            public static void DrawCommandsAddres(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, ref ulong indirects, ref int sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsAddressNV")]
            public static unsafe void DrawCommandsAddres(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, ulong* indirects, int* sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsNV")]
            public static void DrawCommands(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, uint buffer, IntPtr[] indirects, int[] sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsNV")]
            public static void DrawCommands(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, uint buffer, ref IntPtr indirects, ref int sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="primitiveMode">
            /// </param>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsNV")]
            public static unsafe void DrawCommands(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, uint buffer, IntPtr* indirects, int* sizes, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesAddressNV")]
            public static void DrawCommandsStatesAddres(ulong[] indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesAddressNV")]
            public static void DrawCommandsStatesAddres(ref ulong indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesAddressNV")]
            public static unsafe void DrawCommandsStatesAddres(ulong* indirects, int* sizes, uint* states, uint* fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesNV")]
            public static void DrawCommandsStates(uint buffer, IntPtr[] indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesNV")]
            public static void DrawCommandsStates(uint buffer, ref IntPtr indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="buffer">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glDrawCommandsStatesNV")]
            public static unsafe void DrawCommandsStates(uint buffer, IntPtr* indirects, int* sizes, uint* states, uint* fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="tokenID">
            /// </param>
            /// <param name="size">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glGetCommandHeaderNV")]
            public static uint GetCommandHeader(OpenTK.Graphics.OpenGL4.NvCommandList tokenID, uint size)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="shadertype">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glGetStageIndexNV")]
            public static ushort GetStageIndex(OpenTK.Graphics.OpenGL4.ShaderType shadertype)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glIsCommandListNV")]
            public static bool IsCommandList(uint list)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="state">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glIsStateNV")]
            public static bool IsState(uint state)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient(uint list, uint segment, IntPtr indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient(uint list, uint segment, IntPtr indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static unsafe void ListDrawCommandsStatesClient(uint list, uint segment, IntPtr indirects, int* sizes, uint* states, uint* fbos, uint count)
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[] indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[] indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static unsafe void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[] indirects, int* sizes, uint* states, uint* fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,] indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,] indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static unsafe void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,] indirects, int* sizes, uint* states, uint* fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,,] indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,,] indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static unsafe void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] T2[,,] indirects, int* sizes, uint* states, uint* fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] ref T2 indirects, int[] sizes, uint[] states, uint[] fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] ref T2 indirects, ref int sizes, ref uint states, ref uint fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="list">
            /// </param>
            /// <param name="segment">
            /// </param>
            /// <param name="indirects">
            /// </param>
            /// <param name="sizes">
            /// </param>
            /// <param name="states">
            /// </param>
            /// <param name="fbos">
            /// </param>
            /// <param name="count">
            /// </param>
            /// <typeparam name="T2"></typeparam>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glListDrawCommandsStatesClientNV")]
            public static unsafe void ListDrawCommandsStatesClient<T2>(uint list, uint segment, [InAttribute, OutAttribute] ref T2 indirects, int* sizes, uint* states, uint* fbos, uint count)
                where T2 : struct
            {
                throw new BindingsNotRewrittenException();
            }

            /// <summary>
            /// [requires: NV_command_list]
            /// </summary>
            /// <param name="state">
            /// </param>
            /// <param name="mode">
            /// </param>
            [AutoGenerated(Category = "NV_command_list", Version = "", EntryPoint = "glStateCaptureNV")]
            public static void StateCapture(uint state, OpenTK.Graphics.OpenGL4.NvCommandList mode)
            {
                throw new BindingsNotRewrittenException();
            }

            #pragma warning disable SA1300 // Element should begin with an upper-case letter

            [Slot(60)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCallCommandListNV(uint list);

            [Slot(100)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCommandListSegmentsNV(uint list, uint segments);

            [Slot(101)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glCompileCommandListNV(uint list);

            [Slot(166)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glCreateCommandListsNV(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* lists);

            [Slot(178)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glCreateStatesNV(int n, [OutAttribute, CountAttribute(Parameter = "n")] uint* states);

            [Slot(194)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeleteCommandListsNV(int n, [CountAttribute(Parameter = "n")] uint* lists);

            [Slot(207)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDeleteStatesNV(int n, [CountAttribute(Parameter = "n")] uint* states);

            [Slot(239)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDrawCommandsAddressNV(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, ulong* indirects, int* sizes, uint count);

            [Slot(240)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDrawCommandsNV(OpenTK.Graphics.OpenGL4.BasicPrimitiveType primitiveMode, uint buffer, IntPtr* indirects, int* sizes, uint count);

            [Slot(241)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDrawCommandsStatesAddressNV(ulong* indirects, int* sizes, uint* states, uint* fbos, uint count);

            [Slot(242)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glDrawCommandsStatesNV(uint buffer, IntPtr* indirects, int* sizes, uint* states, uint* fbos, uint count);

            [Slot(341)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern uint glGetCommandHeaderNV(OpenTK.Graphics.OpenGL4.NvCommandList tokenID, uint size);

            [Slot(534)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern ushort glGetStageIndexNV(OpenTK.Graphics.OpenGL4.ShaderType shadertype);

            [Slot(615)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsCommandListNV(uint list);

            [Slot(634)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern byte glIsStateNV(uint state);

            [Slot(644)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern unsafe void glListDrawCommandsStatesClientNV(uint list, uint segment, IntPtr indirects, int* sizes, uint* states, uint* fbos, uint count);

            [Slot(1021)]
            [DllImport(Library, ExactSpelling = true, CallingConvention = CallingConvention.Winapi)]
            private static extern void glStateCaptureNV(uint state, OpenTK.Graphics.OpenGL4.NvCommandList mode);
        }
    }
}
