<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
	      "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glCreateProgram">
    <refmeta>
	<refentrytitle>glCreateProgram</refentrytitle>
	<manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
	<refname>glCreateProgram</refname>
	<refpurpose>Creates a program object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
	<funcsynopsis>
	    <funcprototype>
		<funcdef>GLuint <function>glCreateProgram</function></funcdef>
		<paramdef><parameter>void</parameter></paramdef>
	    </funcprototype>
	</funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="description"><title>Description</title>
	<para><function>glCreateProgram</function> creates an empty
	program object and returns a non-zero value by which it can be
	referenced. A program object is an object to which shader
	objects can be attached. This provides a mechanism to specify
	the shader objects that will be linked to create a program. It
	also provides a means for checking the compatibility of the
	shaders that will be used to create a program (for instance,
	checking the compatibility between a vertex shader and a
	fragment shader). When no longer needed as part of a program
	object, shader objects can be detached.</para>

	<para>One or more executables are created in a program object by
	successfully attaching shader objects to it with
	<citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
	successfully compiling the shader objects with
	<citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
	and successfully linking the program object with
	<citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>.
	These executables are made part of current state when
	<citerefentry><refentrytitle>glUseProgram</refentrytitle></citerefentry>
	is called. Program objects can be deleted by calling
	<citerefentry><refentrytitle>glDeleteProgram</refentrytitle></citerefentry>.
	The memory associated with the program object will be deleted
	when it is no longer part of current rendering state for any
	context.</para>
    </refsect1>
    <refsect1 id="notes"><title>Notes</title>
	<para><function>glCreateProgram</function> is available only if
	the GL version is 2.0 or greater.</para>

	<para>Like display lists and texture objects, the name space for
	program objects may be shared across a set of contexts, as long
	as the server sides of the contexts share the same address
	space. If the name space is shared across contexts, any attached
	objects and the data associated with those attached objects are
	shared as well.</para>

	<para>Applications are responsible for providing the
	synchronization across API calls when objects are accessed from
	different execution threads.</para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
	<para>This function returns 0 if an error occurs creating the program object.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<function>glCreateProgram</function> is executed between the
	execution of
	<citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
	and the corresponding execution of
	<citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.</para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
	<para><citerefentry><refentrytitle>glGet</refentrytitle></citerefentry>
	with the argument <constant>GL_CURRENT_PROGRAM</constant></para>

	<para><citerefentry><refentrytitle>glGetActiveAttrib</refentrytitle></citerefentry>
	with a valid program object and the index of an active attribute
	variable</para>

	<para><citerefentry><refentrytitle>glGetActiveUniform</refentrytitle></citerefentry>
	with a valid program object and the index of an active uniform
	variable</para>

	<para><citerefentry><refentrytitle>glGetAttachedShaders</refentrytitle></citerefentry>
	with a valid program object</para>

	<para><citerefentry><refentrytitle>glGetAttribLocation</refentrytitle></citerefentry>
	with a valid program object and the name of an attribute
	variable</para>

	<para><citerefentry><refentrytitle>glGetProgram</refentrytitle></citerefentry>
	with a valid program object and the parameter to be queried</para>

	<para><citerefentry><refentrytitle>glGetProgramInfoLog</refentrytitle></citerefentry>
	with a valid program object</para>

	<para><citerefentry><refentrytitle>glGetUniform</refentrytitle></citerefentry>
	with a valid program object and the location of a uniform
	variable</para>

	<para><citerefentry><refentrytitle>glGetUniformLocation</refentrytitle></citerefentry>
	with a valid program object and the name of a uniform
	variable</para>

	<para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
	<para><citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glBindAttribLocation</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glCreateShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glDeleteProgram</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glUniform</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glUseProgram</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glValidateProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
