<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
                            "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry xml:base="" id="glBufferData">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>2003-2004</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glBufferData</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>

    <refnamediv>
        <refname>glBufferData</refname>
        <refpurpose>creates and initializes a buffer object's data store.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
        <title>C Specification</title>

        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glBufferData</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLsizeiptr <parameter>size</parameter></paramdef>
                <paramdef>const void * <parameter>data</parameter></paramdef>
                <paramdef>GLenum <parameter>usage</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>

    <refsect1 id="parameters"><title>Parameters</title>

        <variablelist>

            <varlistentry>
                <term>
                    <parameter>target</parameter>
                </term>
                <listitem>
                    <para>
                    Specifies the target buffer object. The symbolic constant must be
                    <constant>GL_ARRAY_BUFFER</constant>
                    or <constant>GL_ELEMENT_ARRAY_BUFFER</constant>.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <parameter>size</parameter>
                </term>
                <listitem>
                    <para>Specifies the size in bytes of the buffer object's new data store.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <parameter>data</parameter>
                </term>
                <listitem>
                    <para>Specifies a pointer to data that will be copied into the data store for
                    initialization, or <constant>NULL</constant> if no data is to be copied.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <parameter>usage</parameter>
                </term>
                <listitem>
                    <para>
                    Specifies the expected usage pattern of the data store. The symbolic constant
                    must be
                    <constant>GL_STATIC_DRAW</constant> or
                    <constant>GL_DYNAMIC_DRAW</constant>.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>

    </refsect1>

    <refsect1 id="description"><title>Description</title>

        <para>
            <function>glBufferData</function> creates a new data store for the buffer object currently bound to
            <parameter>target</parameter>. Any pre-existing data store is deleted. The new data store is created with the
            specified <parameter>size</parameter> in bytes and <parameter>usage</parameter>. If <parameter>data</parameter>
            is not <constant>NULL</constant>, the data store is initialized with data from this pointer.
        </para>
        <para>
            <parameter>usage</parameter> is a hint to the GL implementation as to how a buffer object's data store will be 
            accessed. This enables the GL implementation to make more intelligent decisions that may significantly 
            impact buffer object performance. It does not, however, constrain the actual usage of the data store.
        </para>

        <para>
        <parameter>usage</parameter> may be one of these:
        <variablelist>

            <varlistentry>
                <term><constant>GL_STATIC_DRAW</constant></term>
                <listitem>
                    <para>
                    The data store contents will be modified once
                    and used many times as the source for GL drawing commands.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><constant>GL_DYNAMIC_DRAW</constant></term>
                <listitem>
                    <para>
                    The data store contents will be modified repeatedly
                    and used many times as the source for GL drawing commands.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
        </para>

    </refsect1>

    <refsect1 id="notes"><title>Notes</title>

        <para>
            If <parameter>data</parameter> is <constant>NULL</constant>, a data store of the specified size is still created,
            but its contents remain uninitialized and thus undefined.
        </para>

        <para>
            Clients must align data elements consistent with the requirements of the client
            platform, with an additional base-level requirement that an offset within a buffer to
            a datum comprising <inlineequation><mml:math><mml:mi mathvariant="italic">N</mml:mi> bytes be a 
            multiple of <mml:mi mathvariant="italic">N</mml:mi></mml:math></inlineequation>.
        </para>

    </refsect1>

    <refsect1 id="errors"><title>Errors</title>

        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not 
            <constant>GL_ARRAY_BUFFER</constant> or <constant>GL_ELEMENT_ARRAY_BUFFER</constant>.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>usage</parameter> is not 
            <constant>GL_STATIC_DRAW</constant> or
            <constant>GL_DYNAMIC_DRAW</constant>.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>size</parameter> is negative.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if the reserved buffer object name 0 is bound to <parameter>target</parameter>.
        </para>
        <para>
            <constant>GL_OUT_OF_MEMORY</constant> is generated if the GL is unable to create a data store with the specified <parameter>size</parameter>.
        </para>

    </refsect1>

    <refsect1 id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGetBufferParameteriv</refentrytitle></citerefentry> with argument <constant>GL_BUFFER_SIZE</constant> or <constant>GL_BUFFER_USAGE</constant>
        </para>
    </refsect1>

    <refsect1 id="seealso"><title>See Also</title>

        <para>
        <citerefentry><refentrytitle>glBufferSubData</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glBindBuffer</refentrytitle></citerefentry>
        </para>
    </refsect1>

    <refsect1 id="copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <ulink url="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</ulink>.
        </para>
    </refsect1>
</refentry>
