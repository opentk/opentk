<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetShaderiv">
    <info>
        <copyright>
            <year>2003-2005</year>
            <holder>3Dlabs Inc. Ltd.</holder>
        </copyright>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glGetShaderiv</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetShaderiv</refname>
        <refpurpose>Returns a parameter from a shader object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetShaderiv</function></funcdef>
                <paramdef>GLuint <parameter>shader</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint *<parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term><parameter>shader</parameter></term>
                <listitem>
                    <para>Specifies the shader object to be
                    queried.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>pname</parameter></term>
                <listitem>
                    <para>Specifies the object parameter. Accepted
                    symbolic names are
                    <constant>GL_SHADER_TYPE</constant>,
                    <constant>GL_DELETE_STATUS</constant>,
                    <constant>GL_COMPILE_STATUS</constant>,
                    <constant>GL_INFO_LOG_LENGTH</constant>,
                    <constant>GL_SHADER_SOURCE_LENGTH</constant>.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>params</parameter></term>
                <listitem>
                    <para>Returns the requested object parameter.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>

        <para><function>glGetShaderiv</function>
        returns in <parameter>params</parameter>
        the value of a parameter for a specific shader object. The
        following parameters are defined:</para>

        <variablelist>
            <varlistentry>
                <term><constant>GL_SHADER_TYPE</constant></term>
                <listitem>
                    <para> <parameter>params</parameter> returns
                    <constant>GL_VERTEX_SHADER</constant> if
                    <parameter>shader</parameter> is a vertex shader
                    object, and <constant>GL_FRAGMENT_SHADER</constant>
                    if <parameter>shader</parameter> is a fragment
                    shader object.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><constant>GL_DELETE_STATUS</constant></term>
                <listitem>
                    <para> <parameter>params</parameter> returns
                    <constant>GL_TRUE</constant> if
                    <parameter>shader</parameter> is currently flagged
                    for deletion, and <constant>GL_FALSE</constant>
                    otherwise.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><constant>GL_COMPILE_STATUS</constant></term>
                <listitem>
                    <para> <parameter>params</parameter> returns
                    <constant>GL_TRUE</constant> if the last compile
                    operation on <parameter>shader</parameter> was
                    successful, and <constant>GL_FALSE</constant>
                    otherwise.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><constant>GL_INFO_LOG_LENGTH</constant></term>
                <listitem>
                    <para> <parameter>params</parameter> returns the
                    number of characters in the information log for
                    <parameter>shader</parameter> including the null
                    termination character (i.e., the size of the
                    character buffer required to store the information
                    log). If <parameter>shader</parameter> has no
                    information log, a value of 0 is returned.</para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term><constant>GL_SHADER_SOURCE_LENGTH</constant></term>
                <listitem>
                    <para> <parameter>params</parameter> returns the
                    length of the concatenation of the source strings
                    that make up the shader source for the
                    <parameter>shader</parameter>, including the null
                    termination character. (i.e., the size of the
                    character buffer required to store the shader
                    source). If no source code exists, 0 is
                    returned.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="notes"><title>Notes</title>

        <para>If an error is generated, no change is made to the
        contents of <parameter>params</parameter>.</para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para><constant>GL_INVALID_VALUE</constant> is generated if
        <parameter>shader</parameter> is not a value generated by
        OpenGL.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        <parameter>shader</parameter> does not refer to a shader
        object.</para>

        <para><constant>GL_INVALID_ENUM</constant> is generated if
        <parameter>pname</parameter> is not an accepted value.</para>

    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para><citerefentry><refentrytitle>glGetShaderInfoLog</refentrytitle></citerefentry>
        with argument <parameter>shader</parameter></para>

        <para><citerefentry><refentrytitle>glGetShaderSource</refentrytitle></citerefentry>
        with argument <parameter>shader</parameter></para>

        <para><citerefentry><refentrytitle>glIsShader</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="versions">
        <title>API Version Support</title>
        <informaltable>
            <tgroup cols="3" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry>glGetShaderiv</entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='es20']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para><citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glCreateShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glDeleteShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glGetProgramiv</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glShaderSource</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd.
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
