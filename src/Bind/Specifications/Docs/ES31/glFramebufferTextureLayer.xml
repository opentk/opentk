<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glFramebufferTextureLayer">
    <info>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glFramebufferTextureLayer</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glFramebufferTextureLayer</refname>
        <refpurpose>attach a single layer of a texture to a framebuffer</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glFramebufferTextureLayer</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>attachment</parameter></paramdef>
                <paramdef>GLuint <parameter>texture</parameter></paramdef>
                <paramdef>GLint <parameter>level</parameter></paramdef>
                <paramdef>GLint <parameter>layer</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    Specifies the framebuffer target. <parameter>target</parameter> must be <constant>GL_DRAW_FRAMEBUFFER</constant>,
                    <constant>GL_READ_FRAMEBUFFER</constant>, or <constant>GL_FRAMEBUFFER</constant>. <constant>GL_FRAMEBUFFER</constant>
                    is equivalent to <constant>GL_DRAW_FRAMEBUFFER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>attachment</parameter></term>
            <listitem>
                <para>
                    Specifies the attachment point of the framebuffer. <parameter>attachment</parameter> must be
                    <constant>GL_COLOR_ATTACHMENT</constant><emphasis>i</emphasis>, <constant>GL_DEPTH_ATTACHMENT</constant>,
                    <constant>GL_STENCIL_ATTACHMENT</constant> or <constant>GL_DEPTH_STENCIL_ATTACHMMENT</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>texture</parameter></term>
            <listitem>
                <para>
                    Specifies the texture object to attach to the framebuffer attachment point named by <parameter>attachment</parameter>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>level</parameter></term>
            <listitem>
                <para>
                    Specifies the mipmap level of <parameter>texture</parameter> to attach.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>layer</parameter></term>
            <listitem>
                <para>
                    Specifies the layer of <parameter>texture</parameter> to attach.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glFramebufferTextureLayer</function> operates like <citerefentry><refentrytitle>glFramebufferTexture2D</refentrytitle></citerefentry>,
            except that only a single layer of the texture level, given by <parameter>layer</parameter>, is attached to the attachment point.
            If <parameter>texture</parameter> is not zero, <parameter>layer</parameter> must be greater than or equal to zero.
            <parameter>texture</parameter> must either be zero or the name of an existing three-dimensional texture, or a two-dimensional
                        array texture.
        </para>
        <para>
                        If <parameter>texture</parameter> is a 3D texture, then <parameter>level</parameter> must be greater
            than or equal to zero and less than or equal to log<subscript>2</subscript> of the value of
                        <constant>GL_MAX_3D_TEXTURE_SIZE</constant>. If <parameter>texture</parameter> is a 2D array texture,
                        <parameter>level</parameter> must be greater than or equal to zero and no larger than log<subscript>2</subscript>
            of the value of <constant>GL_MAX_TEXTURE_SIZE</constant>.
        </para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the accepted tokens.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>attachment</parameter> is not one of the accepted tokens.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>texture</parameter> is not zero or the name of an existing
            texture object.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>texture</parameter> is not zero and <parameter>layer</parameter>
            is negative.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if
            <parameter>texture</parameter> is not zero and
            <parameter>layer</parameter> is greater than the value of
            <constant>GL_MAX_3D_TEXTURE_SIZE</constant> minus one for a 3D
            texture or greater than the value of
            <constant>GL_MAX_ARRAY_TEXTURE_LAYERS</constant> minus one for a
            2D array texture.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if zero is bound to <parameter>target</parameter>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <parameter>texture</parameter> is not zero or the name of an existing
                        three-dimensional texture, or a two-dimensional array texture.
        </para>
    </refsect1>
    <refsect1 xml:id="versions">
        <title>API Version Support</title>
        <informaltable>
            <tgroup cols="4" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry>glFramebufferTextureLayer</entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='es30']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGenFramebuffers</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glBindFramebuffer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGenRenderbuffers</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFramebufferRenderbuffer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFramebufferTexture2D</refentrytitle></citerefentry>,
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
