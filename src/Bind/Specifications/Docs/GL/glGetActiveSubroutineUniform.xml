<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetActiveSubroutineUniform">
    <info>
        <copyright>
            <year>2010-2013</year>
            <holder>Khronos Group.</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glGetActiveSubroutineUniform</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetActiveSubroutineUniform</refname>
        <refpurpose>query a property of an active shader subroutine uniform</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetActiveSubroutineUniformiv</function></funcdef>
                <paramdef>GLuint <parameter>program</parameter></paramdef>
                <paramdef>GLenum <parameter>shadertype</parameter></paramdef>
                <paramdef>GLuint <parameter>index</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint *<parameter>values</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>program</parameter></term>
            <listitem>
                <para>
                    Specifies the name of the program containing the subroutine.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>shadertype</parameter></term>
            <listitem>
                <para>
                    Specifies the shader stage from which to query for the subroutine parameter. <parameter>shadertype</parameter>
                    must be one of <constant>GL_VERTEX_SHADER</constant>, <constant>GL_TESS_CONTROL_SHADER</constant>,
                    <constant>GL_TESS_EVALUATION_SHADER</constant>, <constant>GL_GEOMETRY_SHADER</constant> or
                    <constant>GL_FRAGMENT_SHADER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>index</parameter></term>
            <listitem>
                <para>
                    Specifies the index of the shader subroutine uniform.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>pname</parameter></term>
            <listitem>
                <para>
                    Specifies the parameter of the shader subroutine uniform to query. <parameter>pname</parameter>
                    must be <constant>GL_NUM_COMPATIBLE_SUBROUTINES</constant>, <constant>GL_COMPATIBLE_SUBROUTINES</constant>,
                    <constant>GL_UNIFORM_SIZE</constant> or <constant>GL_UNIFORM_NAME_LENGTH</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>values</parameter></term>
            <listitem>
                <para>
                    Specifies the address of a into which the queried value or values will be placed.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glGetActiveSubroutineUniform</function> queries a parameter of an active shader subroutine uniform.
            <parameter>program</parameter> contains the name of the program containing the uniform. <parameter>shadertype</parameter>
            specifies the stage which which the uniform location, given by <parameter>index</parameter>, is valid. <parameter>index</parameter>
            must be between zero and the value of <constant>GL_ACTIVE_SUBROUTINE_UNIFORMS</constant> minus one for the
            shader stage.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_NUM_COMPATIBLE_SUBROUTINES</constant>, a single integer indicating the number
            of subroutines that can be assigned to the uniform is returned in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_COMPATIBLE_SUBROUTINES</constant>, an array of integers is returned in
            <parameter>values</parameter>, with each integer specifying the index of an active subroutine that can be assigned to
            the selected subroutine uniform. The number of integers returned is the same as the value returned for
            <constant>GL_NUM_COMPATIBLE_SUBROUTINES</constant>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_UNIFORM_SIZE</constant>, a single integer is returned in <parameter>values</parameter>.
            If the selected subroutine uniform is an array, the  declared size of the array is returned; otherwise, one is returned.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_UNIFORM_NAME_LENGTH</constant>, a single integer specifying the length of
            the subroutine uniform name (including the terminating null character) is returned in <parameter>values</parameter>.
        </para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>shadertype</parameter> or <parameter>pname</parameter>
            is not one of the accepted values.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>index</parameter> is greater than or equal to
            the value of <constant>GL_ACTIVE_SUBROUTINES</constant>.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>program</parameter> is not the name of an
            existing program object.
        </para>
    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGetProgramStage</refentrytitle></citerefentry> with argument <constant>GL_ACTIVE_SUBROUTINE_UNIFORMS</constant>
        </para>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGetSubroutineIndex</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGetActiveSubroutineUniformName</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGetProgramStage</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2010-2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
