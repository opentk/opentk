//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2010 the Open Toolkit library.
// Copyright 2013 Xamarin Inc
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to 
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//



namespace OpenTK.Graphics.ES10
{
    using System;
    using System.Text;
    using System.Runtime.InteropServices;
    #pragma warning disable 3019
    #pragma warning disable 1591
    #pragma warning disable 1572
    #pragma warning disable 1573

    partial class GL
    {
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanefIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ClipPlanefIMG(OpenTK.Graphics.ES10.All p, Single[] eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Single* eqn_ptr = eqn)
                {
                    Core.ClipPlanefIMG((OpenTK.Graphics.ES10.All)p, (Single*)eqn_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanefIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ClipPlanefIMG(OpenTK.Graphics.ES10.All p, ref Single eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Single* eqn_ptr = &eqn)
                {
                    Core.ClipPlanefIMG((OpenTK.Graphics.ES10.All)p, (Single*)eqn_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanefIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ClipPlanefIMG(OpenTK.Graphics.ES10.All p, Single* eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ClipPlanefIMG((OpenTK.Graphics.ES10.All)p, (Single*)eqn);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanexIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ClipPlanexIMG(OpenTK.Graphics.ES10.All p, int[] eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (int* eqn_ptr = eqn)
                {
                    Core.ClipPlanexIMG((OpenTK.Graphics.ES10.All)p, (int*)eqn_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanexIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ClipPlanexIMG(OpenTK.Graphics.ES10.All p, ref int eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (int* eqn_ptr = &eqn)
                {
                    Core.ClipPlanexIMG((OpenTK.Graphics.ES10.All)p, (int*)eqn_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glClipPlanexIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ClipPlanexIMG(OpenTK.Graphics.ES10.All p, int* eqn)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ClipPlanexIMG((OpenTK.Graphics.ES10.All)p, (int*)eqn);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glDisableDriverControlQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void DisableDriverControlQCOM(Int32 driverControl)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.DisableDriverControlQCOM((UInt32)driverControl);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glDisableDriverControlQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void DisableDriverControlQCOM(UInt32 driverControl)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.DisableDriverControlQCOM((UInt32)driverControl);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glEnableDriverControlQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void EnableDriverControlQCOM(Int32 driverControl)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.EnableDriverControlQCOM((UInt32)driverControl);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glEnableDriverControlQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void EnableDriverControlQCOM(UInt32 driverControl)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.EnableDriverControlQCOM((UInt32)driverControl);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glEndTilingQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void EndTilingQCOM(Int32 preserveMask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.EndTilingQCOM((UInt32)preserveMask);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glEndTilingQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void EndTilingQCOM(UInt32 preserveMask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.EndTilingQCOM((UInt32)preserveMask);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBufferPointervQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBufferPointervQCOM(OpenTK.Graphics.ES10.All target, IntPtr @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetBufferPointervQCOM((OpenTK.Graphics.ES10.All)target, (IntPtr)@params);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBufferPointervQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBufferPointervQCOM<T1>(OpenTK.Graphics.ES10.All target, [InAttribute, OutAttribute] T1[] @params)
            where T1 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle @params_ptr = GCHandle.Alloc(@params, GCHandleType.Pinned);
            try
            {
                Core.ExtGetBufferPointervQCOM((OpenTK.Graphics.ES10.All)target, (IntPtr)@params_ptr.AddrOfPinnedObject());
            }
            finally
            {
                @params_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBufferPointervQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBufferPointervQCOM<T1>(OpenTK.Graphics.ES10.All target, [InAttribute, OutAttribute] T1[,] @params)
            where T1 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle @params_ptr = GCHandle.Alloc(@params, GCHandleType.Pinned);
            try
            {
                Core.ExtGetBufferPointervQCOM((OpenTK.Graphics.ES10.All)target, (IntPtr)@params_ptr.AddrOfPinnedObject());
            }
            finally
            {
                @params_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBufferPointervQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBufferPointervQCOM<T1>(OpenTK.Graphics.ES10.All target, [InAttribute, OutAttribute] T1[,,] @params)
            where T1 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle @params_ptr = GCHandle.Alloc(@params, GCHandleType.Pinned);
            try
            {
                Core.ExtGetBufferPointervQCOM((OpenTK.Graphics.ES10.All)target, (IntPtr)@params_ptr.AddrOfPinnedObject());
            }
            finally
            {
                @params_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBufferPointervQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBufferPointervQCOM<T1>(OpenTK.Graphics.ES10.All target, [InAttribute, OutAttribute] ref T1 @params)
            where T1 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle @params_ptr = GCHandle.Alloc(@params, GCHandleType.Pinned);
            try
            {
                Core.ExtGetBufferPointervQCOM((OpenTK.Graphics.ES10.All)target, (IntPtr)@params_ptr.AddrOfPinnedObject());
                @params = (T1)@params_ptr.Target;
            }
            finally
            {
                @params_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBuffersQCOM(Int32[] buffers, Int32 maxBuffers, Int32[] numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* buffers_ptr = buffers)
                fixed (Int32* numBuffers_ptr = numBuffers)
                {
                    Core.ExtGetBuffersQCOM((UInt32*)buffers_ptr, (Int32)maxBuffers, (Int32*)numBuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBuffersQCOM(ref Int32 buffers, Int32 maxBuffers, ref Int32 numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* buffers_ptr = &buffers)
                fixed (Int32* numBuffers_ptr = &numBuffers)
                {
                    Core.ExtGetBuffersQCOM((UInt32*)buffers_ptr, (Int32)maxBuffers, (Int32*)numBuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetBuffersQCOM(Int32* buffers, Int32 maxBuffers, Int32* numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetBuffersQCOM((UInt32*)buffers, (Int32)maxBuffers, (Int32*)numBuffers);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBuffersQCOM(UInt32[] buffers, Int32 maxBuffers, Int32[] numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* buffers_ptr = buffers)
                fixed (Int32* numBuffers_ptr = numBuffers)
                {
                    Core.ExtGetBuffersQCOM((UInt32*)buffers_ptr, (Int32)maxBuffers, (Int32*)numBuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetBuffersQCOM(ref UInt32 buffers, Int32 maxBuffers, ref Int32 numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* buffers_ptr = &buffers)
                fixed (Int32* numBuffers_ptr = &numBuffers)
                {
                    Core.ExtGetBuffersQCOM((UInt32*)buffers_ptr, (Int32)maxBuffers, (Int32*)numBuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetBuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetBuffersQCOM(UInt32* buffers, Int32 maxBuffers, Int32* numBuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetBuffersQCOM((UInt32*)buffers, (Int32)maxBuffers, (Int32*)numBuffers);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetFramebuffersQCOM(Int32[] framebuffers, Int32 maxFramebuffers, Int32[] numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* framebuffers_ptr = framebuffers)
                fixed (Int32* numFramebuffers_ptr = numFramebuffers)
                {
                    Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers_ptr, (Int32)maxFramebuffers, (Int32*)numFramebuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetFramebuffersQCOM(ref Int32 framebuffers, Int32 maxFramebuffers, ref Int32 numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* framebuffers_ptr = &framebuffers)
                fixed (Int32* numFramebuffers_ptr = &numFramebuffers)
                {
                    Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers_ptr, (Int32)maxFramebuffers, (Int32*)numFramebuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetFramebuffersQCOM(Int32* framebuffers, Int32 maxFramebuffers, Int32* numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers, (Int32)maxFramebuffers, (Int32*)numFramebuffers);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetFramebuffersQCOM(UInt32[] framebuffers, Int32 maxFramebuffers, Int32[] numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* framebuffers_ptr = framebuffers)
                fixed (Int32* numFramebuffers_ptr = numFramebuffers)
                {
                    Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers_ptr, (Int32)maxFramebuffers, (Int32*)numFramebuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetFramebuffersQCOM(ref UInt32 framebuffers, Int32 maxFramebuffers, ref Int32 numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* framebuffers_ptr = &framebuffers)
                fixed (Int32* numFramebuffers_ptr = &numFramebuffers)
                {
                    Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers_ptr, (Int32)maxFramebuffers, (Int32*)numFramebuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetFramebuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetFramebuffersQCOM(UInt32* framebuffers, Int32 maxFramebuffers, Int32* numFramebuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetFramebuffersQCOM((UInt32*)framebuffers, (Int32)maxFramebuffers, (Int32*)numFramebuffers);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramBinarySourceQCOM(Int32 program, OpenTK.Graphics.ES10.All shadertype, String source, Int32[] length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = length)
                {
                    Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramBinarySourceQCOM(Int32 program, OpenTK.Graphics.ES10.All shadertype, String source, ref Int32 length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = &length)
                {
                    Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetProgramBinarySourceQCOM(Int32 program, OpenTK.Graphics.ES10.All shadertype, String source, Int32* length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramBinarySourceQCOM(UInt32 program, OpenTK.Graphics.ES10.All shadertype, String source, Int32[] length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = length)
                {
                    Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramBinarySourceQCOM(UInt32 program, OpenTK.Graphics.ES10.All shadertype, String source, ref Int32 length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = &length)
                {
                    Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramBinarySourceQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetProgramBinarySourceQCOM(UInt32 program, OpenTK.Graphics.ES10.All shadertype, String source, Int32* length)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetProgramBinarySourceQCOM((UInt32)program, (OpenTK.Graphics.ES10.All)shadertype, (String)source, (Int32*)length);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramsQCOM(Int32[] programs, Int32 maxPrograms, Int32[] numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* programs_ptr = programs)
                fixed (Int32* numPrograms_ptr = numPrograms)
                {
                    Core.ExtGetProgramsQCOM((UInt32*)programs_ptr, (Int32)maxPrograms, (Int32*)numPrograms_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramsQCOM(ref Int32 programs, Int32 maxPrograms, ref Int32 numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* programs_ptr = &programs)
                fixed (Int32* numPrograms_ptr = &numPrograms)
                {
                    Core.ExtGetProgramsQCOM((UInt32*)programs_ptr, (Int32)maxPrograms, (Int32*)numPrograms_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetProgramsQCOM(Int32* programs, Int32 maxPrograms, Int32* numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetProgramsQCOM((UInt32*)programs, (Int32)maxPrograms, (Int32*)numPrograms);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramsQCOM(UInt32[] programs, Int32 maxPrograms, Int32[] numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* programs_ptr = programs)
                fixed (Int32* numPrograms_ptr = numPrograms)
                {
                    Core.ExtGetProgramsQCOM((UInt32*)programs_ptr, (Int32)maxPrograms, (Int32*)numPrograms_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetProgramsQCOM(ref UInt32 programs, Int32 maxPrograms, ref Int32 numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* programs_ptr = &programs)
                fixed (Int32* numPrograms_ptr = &numPrograms)
                {
                    Core.ExtGetProgramsQCOM((UInt32*)programs_ptr, (Int32)maxPrograms, (Int32*)numPrograms_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetProgramsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetProgramsQCOM(UInt32* programs, Int32 maxPrograms, Int32* numPrograms)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetProgramsQCOM((UInt32*)programs, (Int32)maxPrograms, (Int32*)numPrograms);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetRenderbuffersQCOM(Int32[] renderbuffers, Int32 maxRenderbuffers, Int32[] numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* renderbuffers_ptr = renderbuffers)
                fixed (Int32* numRenderbuffers_ptr = numRenderbuffers)
                {
                    Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers_ptr, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetRenderbuffersQCOM(ref Int32 renderbuffers, Int32 maxRenderbuffers, ref Int32 numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* renderbuffers_ptr = &renderbuffers)
                fixed (Int32* numRenderbuffers_ptr = &numRenderbuffers)
                {
                    Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers_ptr, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetRenderbuffersQCOM(Int32* renderbuffers, Int32 maxRenderbuffers, Int32* numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetRenderbuffersQCOM(UInt32[] renderbuffers, Int32 maxRenderbuffers, Int32[] numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* renderbuffers_ptr = renderbuffers)
                fixed (Int32* numRenderbuffers_ptr = numRenderbuffers)
                {
                    Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers_ptr, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetRenderbuffersQCOM(ref UInt32 renderbuffers, Int32 maxRenderbuffers, ref Int32 numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* renderbuffers_ptr = &renderbuffers)
                fixed (Int32* numRenderbuffers_ptr = &numRenderbuffers)
                {
                    Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers_ptr, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetRenderbuffersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetRenderbuffersQCOM(UInt32* renderbuffers, Int32 maxRenderbuffers, Int32* numRenderbuffers)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetRenderbuffersQCOM((UInt32*)renderbuffers, (Int32)maxRenderbuffers, (Int32*)numRenderbuffers);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetShadersQCOM(Int32[] shaders, Int32 maxShaders, Int32[] numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* shaders_ptr = shaders)
                fixed (Int32* numShaders_ptr = numShaders)
                {
                    Core.ExtGetShadersQCOM((UInt32*)shaders_ptr, (Int32)maxShaders, (Int32*)numShaders_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetShadersQCOM(ref Int32 shaders, Int32 maxShaders, ref Int32 numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* shaders_ptr = &shaders)
                fixed (Int32* numShaders_ptr = &numShaders)
                {
                    Core.ExtGetShadersQCOM((UInt32*)shaders_ptr, (Int32)maxShaders, (Int32*)numShaders_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetShadersQCOM(Int32* shaders, Int32 maxShaders, Int32* numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetShadersQCOM((UInt32*)shaders, (Int32)maxShaders, (Int32*)numShaders);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetShadersQCOM(UInt32[] shaders, Int32 maxShaders, Int32[] numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* shaders_ptr = shaders)
                fixed (Int32* numShaders_ptr = numShaders)
                {
                    Core.ExtGetShadersQCOM((UInt32*)shaders_ptr, (Int32)maxShaders, (Int32*)numShaders_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetShadersQCOM(ref UInt32 shaders, Int32 maxShaders, ref Int32 numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* shaders_ptr = &shaders)
                fixed (Int32* numShaders_ptr = &numShaders)
                {
                    Core.ExtGetShadersQCOM((UInt32*)shaders_ptr, (Int32)maxShaders, (Int32*)numShaders_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetShadersQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetShadersQCOM(UInt32* shaders, Int32 maxShaders, Int32* numShaders)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetShadersQCOM((UInt32*)shaders, (Int32)maxShaders, (Int32*)numShaders);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexLevelParameterivQCOM(Int32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, Int32[] @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* @params_ptr = @params)
                {
                    Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexLevelParameterivQCOM(Int32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, ref Int32 @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* @params_ptr = &@params)
                {
                    Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetTexLevelParameterivQCOM(Int32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, Int32* @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexLevelParameterivQCOM(UInt32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, Int32[] @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* @params_ptr = @params)
                {
                    Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexLevelParameterivQCOM(UInt32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, ref Int32 @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* @params_ptr = &@params)
                {
                    Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexLevelParameterivQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetTexLevelParameterivQCOM(UInt32 texture, OpenTK.Graphics.ES10.All face, Int32 level, OpenTK.Graphics.ES10.All pname, Int32* @params)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetTexLevelParameterivQCOM((UInt32)texture, (OpenTK.Graphics.ES10.All)face, (Int32)level, (OpenTK.Graphics.ES10.All)pname, (Int32*)@params);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexSubImageQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexSubImageQCOM(OpenTK.Graphics.ES10.All target, Int32 level, Int32 xoffset, Int32 yoffset, Int32 zoffset, Int32 width, Int32 height, Int32 depth, OpenTK.Graphics.ES10.All format, OpenTK.Graphics.ES10.All type, IntPtr texels)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetTexSubImageQCOM((OpenTK.Graphics.ES10.All)target, (Int32)level, (Int32)xoffset, (Int32)yoffset, (Int32)zoffset, (Int32)width, (Int32)height, (Int32)depth, (OpenTK.Graphics.ES10.All)format, (OpenTK.Graphics.ES10.All)type, (IntPtr)texels);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexSubImageQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexSubImageQCOM<T10>(OpenTK.Graphics.ES10.All target, Int32 level, Int32 xoffset, Int32 yoffset, Int32 zoffset, Int32 width, Int32 height, Int32 depth, OpenTK.Graphics.ES10.All format, OpenTK.Graphics.ES10.All type, [InAttribute, OutAttribute] T10[] texels)
            where T10 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle texels_ptr = GCHandle.Alloc(texels, GCHandleType.Pinned);
            try
            {
                Core.ExtGetTexSubImageQCOM((OpenTK.Graphics.ES10.All)target, (Int32)level, (Int32)xoffset, (Int32)yoffset, (Int32)zoffset, (Int32)width, (Int32)height, (Int32)depth, (OpenTK.Graphics.ES10.All)format, (OpenTK.Graphics.ES10.All)type, (IntPtr)texels_ptr.AddrOfPinnedObject());
            }
            finally
            {
                texels_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexSubImageQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexSubImageQCOM<T10>(OpenTK.Graphics.ES10.All target, Int32 level, Int32 xoffset, Int32 yoffset, Int32 zoffset, Int32 width, Int32 height, Int32 depth, OpenTK.Graphics.ES10.All format, OpenTK.Graphics.ES10.All type, [InAttribute, OutAttribute] T10[,] texels)
            where T10 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle texels_ptr = GCHandle.Alloc(texels, GCHandleType.Pinned);
            try
            {
                Core.ExtGetTexSubImageQCOM((OpenTK.Graphics.ES10.All)target, (Int32)level, (Int32)xoffset, (Int32)yoffset, (Int32)zoffset, (Int32)width, (Int32)height, (Int32)depth, (OpenTK.Graphics.ES10.All)format, (OpenTK.Graphics.ES10.All)type, (IntPtr)texels_ptr.AddrOfPinnedObject());
            }
            finally
            {
                texels_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexSubImageQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexSubImageQCOM<T10>(OpenTK.Graphics.ES10.All target, Int32 level, Int32 xoffset, Int32 yoffset, Int32 zoffset, Int32 width, Int32 height, Int32 depth, OpenTK.Graphics.ES10.All format, OpenTK.Graphics.ES10.All type, [InAttribute, OutAttribute] T10[,,] texels)
            where T10 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle texels_ptr = GCHandle.Alloc(texels, GCHandleType.Pinned);
            try
            {
                Core.ExtGetTexSubImageQCOM((OpenTK.Graphics.ES10.All)target, (Int32)level, (Int32)xoffset, (Int32)yoffset, (Int32)zoffset, (Int32)width, (Int32)height, (Int32)depth, (OpenTK.Graphics.ES10.All)format, (OpenTK.Graphics.ES10.All)type, (IntPtr)texels_ptr.AddrOfPinnedObject());
            }
            finally
            {
                texels_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexSubImageQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexSubImageQCOM<T10>(OpenTK.Graphics.ES10.All target, Int32 level, Int32 xoffset, Int32 yoffset, Int32 zoffset, Int32 width, Int32 height, Int32 depth, OpenTK.Graphics.ES10.All format, OpenTK.Graphics.ES10.All type, [InAttribute, OutAttribute] ref T10 texels)
            where T10 : struct
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            GCHandle texels_ptr = GCHandle.Alloc(texels, GCHandleType.Pinned);
            try
            {
                Core.ExtGetTexSubImageQCOM((OpenTK.Graphics.ES10.All)target, (Int32)level, (Int32)xoffset, (Int32)yoffset, (Int32)zoffset, (Int32)width, (Int32)height, (Int32)depth, (OpenTK.Graphics.ES10.All)format, (OpenTK.Graphics.ES10.All)type, (IntPtr)texels_ptr.AddrOfPinnedObject());
                texels = (T10)texels_ptr.Target;
            }
            finally
            {
                texels_ptr.Free();
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexturesQCOM(Int32[] textures, Int32 maxTextures, Int32[] numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* textures_ptr = textures)
                fixed (Int32* numTextures_ptr = numTextures)
                {
                    Core.ExtGetTexturesQCOM((UInt32*)textures_ptr, (Int32)maxTextures, (Int32*)numTextures_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexturesQCOM(ref Int32 textures, Int32 maxTextures, ref Int32 numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* textures_ptr = &textures)
                fixed (Int32* numTextures_ptr = &numTextures)
                {
                    Core.ExtGetTexturesQCOM((UInt32*)textures_ptr, (Int32)maxTextures, (Int32*)numTextures_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetTexturesQCOM(Int32* textures, Int32 maxTextures, Int32* numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetTexturesQCOM((UInt32*)textures, (Int32)maxTextures, (Int32*)numTextures);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexturesQCOM(UInt32[] textures, Int32 maxTextures, Int32[] numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* textures_ptr = textures)
                fixed (Int32* numTextures_ptr = numTextures)
                {
                    Core.ExtGetTexturesQCOM((UInt32*)textures_ptr, (Int32)maxTextures, (Int32*)numTextures_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtGetTexturesQCOM(ref UInt32 textures, Int32 maxTextures, ref Int32 numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (UInt32* textures_ptr = &textures)
                fixed (Int32* numTextures_ptr = &numTextures)
                {
                    Core.ExtGetTexturesQCOM((UInt32*)textures_ptr, (Int32)maxTextures, (Int32*)numTextures_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtGetTexturesQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void ExtGetTexturesQCOM(UInt32* textures, Int32 maxTextures, Int32* numTextures)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtGetTexturesQCOM((UInt32*)textures, (Int32)maxTextures, (Int32*)numTextures);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtIsProgramBinaryQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        bool ExtIsProgramBinaryQCOM(Int32 program)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            return Core.ExtIsProgramBinaryQCOM((UInt32)program);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtIsProgramBinaryQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        bool ExtIsProgramBinaryQCOM(UInt32 program)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            return Core.ExtIsProgramBinaryQCOM((UInt32)program);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glExtTexObjectStateOverrideiQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void ExtTexObjectStateOverrideiQCOM(OpenTK.Graphics.ES10.All target, OpenTK.Graphics.ES10.All pname, Int32 param)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.ExtTexObjectStateOverrideiQCOM((OpenTK.Graphics.ES10.All)target, (OpenTK.Graphics.ES10.All)pname, (Int32)param);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glFramebufferTexture2DMultisampleIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void FramebufferTexture2DMultisampleIMG(OpenTK.Graphics.ES10.All target, OpenTK.Graphics.ES10.All attachment, OpenTK.Graphics.ES10.All textarget, Int32 texture, Int32 level, Int32 samples)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.FramebufferTexture2DMultisampleIMG((OpenTK.Graphics.ES10.All)target, (OpenTK.Graphics.ES10.All)attachment, (OpenTK.Graphics.ES10.All)textarget, (UInt32)texture, (Int32)level, (Int32)samples);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glFramebufferTexture2DMultisampleIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void FramebufferTexture2DMultisampleIMG(OpenTK.Graphics.ES10.All target, OpenTK.Graphics.ES10.All attachment, OpenTK.Graphics.ES10.All textarget, UInt32 texture, Int32 level, Int32 samples)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.FramebufferTexture2DMultisampleIMG((OpenTK.Graphics.ES10.All)target, (OpenTK.Graphics.ES10.All)attachment, (OpenTK.Graphics.ES10.All)textarget, (UInt32)texture, (Int32)level, (Int32)samples);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlsQCOM([OutAttribute] Int32[] num, Int32 size, [OutAttribute] Int32[] driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* num_ptr = num)
                fixed (Int32* driverControls_ptr = driverControls)
                {
                    Core.GetDriverControlsQCOM((Int32*)num_ptr, (Int32)size, (UInt32*)driverControls_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlsQCOM([OutAttribute] Int32[] num, Int32 size, [OutAttribute] UInt32[] driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* num_ptr = num)
                fixed (UInt32* driverControls_ptr = driverControls)
                {
                    Core.GetDriverControlsQCOM((Int32*)num_ptr, (Int32)size, (UInt32*)driverControls_ptr);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlsQCOM([OutAttribute] out Int32 num, Int32 size, [OutAttribute] out Int32 driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* num_ptr = &num)
                fixed (Int32* driverControls_ptr = &driverControls)
                {
                    Core.GetDriverControlsQCOM((Int32*)num_ptr, (Int32)size, (UInt32*)driverControls_ptr);
                    num = *num_ptr;
                    driverControls = *driverControls_ptr;
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlsQCOM([OutAttribute] out Int32 num, Int32 size, [OutAttribute] out UInt32 driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* num_ptr = &num)
                fixed (UInt32* driverControls_ptr = &driverControls)
                {
                    Core.GetDriverControlsQCOM((Int32*)num_ptr, (Int32)size, (UInt32*)driverControls_ptr);
                    num = *num_ptr;
                    driverControls = *driverControls_ptr;
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void GetDriverControlsQCOM([OutAttribute] Int32* num, Int32 size, [OutAttribute] Int32* driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.GetDriverControlsQCOM((Int32*)num, (Int32)size, (UInt32*)driverControls);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlsQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void GetDriverControlsQCOM([OutAttribute] Int32* num, Int32 size, [OutAttribute] UInt32* driverControls)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.GetDriverControlsQCOM((Int32*)num, (Int32)size, (UInt32*)driverControls);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlStringQCOM(Int32 driverControl, Int32 bufSize, [OutAttribute] Int32[] length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = length)
                {
                    Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length_ptr, (StringBuilder)driverControlString);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlStringQCOM(Int32 driverControl, Int32 bufSize, [OutAttribute] out Int32 length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = &length)
                {
                    Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length_ptr, (StringBuilder)driverControlString);
                    length = *length_ptr;
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void GetDriverControlStringQCOM(Int32 driverControl, Int32 bufSize, [OutAttribute] Int32* length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length, (StringBuilder)driverControlString);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlStringQCOM(UInt32 driverControl, Int32 bufSize, [OutAttribute] Int32[] length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = length)
                {
                    Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length_ptr, (StringBuilder)driverControlString);
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void GetDriverControlStringQCOM(UInt32 driverControl, Int32 bufSize, [OutAttribute] out Int32 length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            unsafe
            {
                fixed (Int32* length_ptr = &length)
                {
                    Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length_ptr, (StringBuilder)driverControlString);
                    length = *length_ptr;
                }
            }
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glGetDriverControlStringQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        unsafe void GetDriverControlStringQCOM(UInt32 driverControl, Int32 bufSize, [OutAttribute] Int32* length, [OutAttribute] StringBuilder driverControlString)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.GetDriverControlStringQCOM((UInt32)driverControl, (Int32)bufSize, (Int32*)length, (StringBuilder)driverControlString);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glRenderbufferStorageMultisampleIMG")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void RenderbufferStorageMultisampleIMG(OpenTK.Graphics.ES10.All target, Int32 samples, OpenTK.Graphics.ES10.All internalformat, Int32 width, Int32 height)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.RenderbufferStorageMultisampleIMG((OpenTK.Graphics.ES10.All)target, (Int32)samples, (OpenTK.Graphics.ES10.All)internalformat, (Int32)width, (Int32)height);
            #if DEBUG
            }
            #endif
        }

        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glStartTilingQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void StartTilingQCOM(Int32 x, Int32 y, Int32 width, Int32 height, Int32 preserveMask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.StartTilingQCOM((UInt32)x, (UInt32)y, (UInt32)width, (UInt32)height, (UInt32)preserveMask);
            #if DEBUG
            }
            #endif
        }

        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.0", Version = "1.0", EntryPoint = "glStartTilingQCOM")]
        [Obsolete ("Use the method in an extension subclass")]
        public static
        void StartTilingQCOM(UInt32 x, UInt32 y, UInt32 width, UInt32 height, UInt32 preserveMask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.StartTilingQCOM((UInt32)x, (UInt32)y, (UInt32)width, (UInt32)height, (UInt32)preserveMask);
            #if DEBUG
            }
            #endif
        }
    }
}
