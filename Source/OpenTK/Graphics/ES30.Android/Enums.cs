//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2010 the Open Toolkit library.
// Copyright 2013 Xamarin Inc
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to 
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//



using System;

namespace OpenTK.Graphics.ES30
{
    public enum ActiveAttribType : int
    {
        Int = ((int)0x1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0X1406),
        FloatVec2 = ((int)0X8b50),
        FloatVec3 = ((int)0X8b51),
        FloatVec4 = ((int)0X8b52),
        IntVec2 = ((int)0x8B53),
        IntVec3 = ((int)0x8B54),
        IntVec4 = ((int)0x8B55),
        FloatMat2 = ((int)0X8b5a),
        FloatMat3 = ((int)0X8b5b),
        FloatMat4 = ((int)0X8b5c),
        FloatMat2x3 = ((int)0x8B65),
        FloatMat2x4 = ((int)0x8B66),
        FloatMat3x2 = ((int)0x8B67),
        FloatMat3x4 = ((int)0x8B68),
        FloatMat4x2 = ((int)0x8B69),
        FloatMat4x3 = ((int)0x8B6A),
        UnsignedIntVec2 = ((int)0x8DC6),
        UnsignedIntVec3 = ((int)0x8DC7),
        UnsignedIntVec4 = ((int)0x8DC8),
    }

    public enum ActiveUniformBlockParameter : int
    {
        UniformBlockBinding = ((int)0x8A3F),
        UniformBlockDataSize = ((int)0x8A40),
        UniformBlockNameLength = ((int)0x8A41),
        UniformBlockActiveUniforms = ((int)0x8A42),
        UniformBlockActiveUniformIndices = ((int)0x8A43),
        UniformBlockReferencedByVertexShader = ((int)0x8A44),
        UniformBlockReferencedByFragmentShader = ((int)0x8A46),
    }

    public enum ActiveUniformParameter : int
    {
        UniformType = ((int)0x8A37),
        UniformSize = ((int)0x8A38),
        UniformNameLength = ((int)0x8A39),
        UniformBlockIndex = ((int)0x8A3A),
        UniformOffset = ((int)0x8A3B),
        UniformArrayStride = ((int)0x8A3C),
        UniformMatrixStride = ((int)0x8A3D),
        UniformIsRowMajor = ((int)0x8A3E),
    }

    public enum ActiveUniformType : int
    {
        Int = ((int)0X1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0X1406),
        SamplerBinding = ((int)0x8919),
        FloatVec2 = ((int)0X8b50),
        FloatVec3 = ((int)0X8b51),
        FloatVec4 = ((int)0X8b52),
        IntVec2 = ((int)0X8b53),
        IntVec3 = ((int)0X8b54),
        IntVec4 = ((int)0X8b55),
        Bool = ((int)0X8b56),
        BoolVec2 = ((int)0X8b57),
        BoolVec3 = ((int)0X8b58),
        BoolVec4 = ((int)0X8b59),
        FloatMat2 = ((int)0X8b5a),
        FloatMat3 = ((int)0X8b5b),
        FloatMat4 = ((int)0X8b5c),
        Sampler2D = ((int)0X8b5e),
        Sampler3D = ((int)0x8B5F),
        SamplerCube = ((int)0X8b60),
        Sampler2DShadow = ((int)0x8B62),
        FloatMat2x3 = ((int)0x8B65),
        FloatMat2x4 = ((int)0x8B66),
        FloatMat3x2 = ((int)0x8B67),
        FloatMat3x4 = ((int)0x8B68),
        FloatMat4x2 = ((int)0x8B69),
        FloatMat4x3 = ((int)0x8B6A),
        Sampler2DArray = ((int)0x8DC1),
        Sampler2DArrayShadow = ((int)0x8DC4),
        SamplerCubeShadow = ((int)0x8DC5),
        UnsignedIntVec2 = ((int)0x8DC6),
        UnsignedIntVec3 = ((int)0x8DC7),
        UnsignedIntVec4 = ((int)0x8DC8),
        IntSampler2D = ((int)0x8DCA),
        IntSampler3D = ((int)0x8DCB),
        IntSamplerCube = ((int)0x8DCC),
        IntSampler2DArray = ((int)0x8DCF),
        UnsignedIntSampler2D = ((int)0x8DD2),
        UnsignedIntSampler3D = ((int)0x8DD3),
        UnsignedIntSamplerCube = ((int)0x8DD4),
        UnsignedIntSampler2DArray = ((int)0x8DD7),
    }

    public enum All : int
    {
        False = ((int)0),
        NoError = ((int)0),
        None = ((int)0),
        Zero = ((int)0),
        Points = ((int)0x0000),
        SyncFlushCommandsBit = ((int)0x00000001),
        DepthBufferBit = ((int)0x00000100),
        StencilBufferBit = ((int)0x00000400),
        ColorBufferBit = ((int)0x00004000),
        Lines = ((int)0x0001),
        MapReadBit = ((int)0x0001),
        ImgTextureFormatBgra8888 = ((int)0X0001),
        LineLoop = ((int)0x0002),
        MapWriteBit = ((int)0x0002),
        LineStrip = ((int)0x0003),
        MapInvalidateRangeBit = ((int)0x0004),
        Triangles = ((int)0x0004),
        TriangleStrip = ((int)0x0005),
        TriangleFan = ((int)0x0006),
        MapInvalidateBufferBit = ((int)0x0008),
        MapFlushExplicitBit = ((int)0x0010),
        MapUnsynchronizedBit = ((int)0x0020),
        Never = ((int)0x0200),
        Less = ((int)0x0201),
        Equal = ((int)0x0202),
        Lequal = ((int)0x0203),
        Greater = ((int)0x0204),
        Notequal = ((int)0x0205),
        Gequal = ((int)0x0206),
        Always = ((int)0x0207),
        SrcColor = ((int)0x0300),
        OneMinusSrcColor = ((int)0x0301),
        SrcAlpha = ((int)0x0302),
        OneMinusSrcAlpha = ((int)0x0303),
        DstAlpha = ((int)0x0304),
        OneMinusDstAlpha = ((int)0x0305),
        DstColor = ((int)0x0306),
        OneMinusDstColor = ((int)0x0307),
        SrcAlphaSaturate = ((int)0x0308),
        Front = ((int)0x0404),
        Back = ((int)0x0405),
        FrontAndBack = ((int)0x0408),
        InvalidEnum = ((int)0x0500),
        InvalidValue = ((int)0x0501),
        InvalidOperation = ((int)0x0502),
        OutOfMemory = ((int)0x0505),
        InvalidFramebufferOperation = ((int)0x0506),
        Cw = ((int)0x0900),
        Ccw = ((int)0x0901),
        LineWidth = ((int)0x0B21),
        CullFace = ((int)0x0B44),
        CullFaceMode = ((int)0x0B45),
        FrontFace = ((int)0x0B46),
        DepthRange = ((int)0x0B70),
        DepthTest = ((int)0x0B71),
        DepthWritemask = ((int)0x0B72),
        DepthClearValue = ((int)0x0B73),
        DepthFunc = ((int)0x0B74),
        StencilTest = ((int)0x0B90),
        StencilClearValue = ((int)0x0B91),
        StencilFunc = ((int)0x0B92),
        StencilValueMask = ((int)0x0B93),
        StencilFail = ((int)0x0B94),
        StencilPassDepthFail = ((int)0x0B95),
        StencilPassDepthPass = ((int)0x0B96),
        StencilRef = ((int)0x0B97),
        StencilWritemask = ((int)0x0B98),
        Viewport = ((int)0x0BA2),
        Dither = ((int)0x0BD0),
        Blend = ((int)0x0BE2),
        ReadBuffer = ((int)0x0C02),
        ScissorBox = ((int)0x0C10),
        ScissorTest = ((int)0x0C11),
        ColorClearValue = ((int)0x0C22),
        ColorWritemask = ((int)0x0C23),
        UnpackRowLength = ((int)0x0CF2),
        UnpackSkipRows = ((int)0x0CF3),
        UnpackSkipPixels = ((int)0x0CF4),
        UnpackAlignment = ((int)0x0CF5),
        PackRowLength = ((int)0x0D02),
        PackSkipRows = ((int)0x0D03),
        PackSkipPixels = ((int)0x0D04),
        PackAlignment = ((int)0x0D05),
        MaxTextureSize = ((int)0x0D33),
        MaxViewportDims = ((int)0x0D3A),
        SubpixelBits = ((int)0x0D50),
        RedBits = ((int)0x0D52),
        GreenBits = ((int)0x0D53),
        BlueBits = ((int)0x0D54),
        AlphaBits = ((int)0x0D55),
        DepthBits = ((int)0x0D56),
        StencilBits = ((int)0x0D57),
        Texture2D = ((int)0x0DE1),
        DontCare = ((int)0x1100),
        Fastest = ((int)0x1101),
        Nicest = ((int)0x1102),
        Byte = ((int)0x1400),
        UnsignedByte = ((int)0x1401),
        Short = ((int)0x1402),
        UnsignedShort = ((int)0x1403),
        Int = ((int)0x1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0x1406),
        HalfFloat = ((int)0x140B),
        Fixed = ((int)0x140C),
        Invert = ((int)0x150A),
        Texture = ((int)0x1702),
        Color = ((int)0x1800),
        Depth = ((int)0x1801),
        Stencil = ((int)0x1802),
        StencilIndex = ((int)0x1901),
        DepthComponent = ((int)0x1902),
        Red = ((int)0x1903),
        Green = ((int)0x1904),
        Blue = ((int)0x1905),
        Alpha = ((int)0x1906),
        Rgb = ((int)0x1907),
        Rgba = ((int)0x1908),
        Luminance = ((int)0x1909),
        LuminanceAlpha = ((int)0x190A),
        Keep = ((int)0x1E00),
        Replace = ((int)0x1E01),
        Incr = ((int)0x1E02),
        Decr = ((int)0x1E03),
        Vendor = ((int)0x1F00),
        Renderer = ((int)0x1F01),
        Version = ((int)0x1F02),
        Extensions = ((int)0x1F03),
        Nearest = ((int)0x2600),
        Linear = ((int)0x2601),
        NearestMipmapNearest = ((int)0x2700),
        LinearMipmapNearest = ((int)0x2701),
        NearestMipmapLinear = ((int)0x2702),
        LinearMipmapLinear = ((int)0x2703),
        TextureMagFilter = ((int)0x2800),
        TextureMinFilter = ((int)0x2801),
        TextureWrapS = ((int)0x2802),
        TextureWrapT = ((int)0x2803),
        Repeat = ((int)0x2901),
        PolygonOffsetUnits = ((int)0x2A00),
        ConstantColor = ((int)0x8001),
        OneMinusConstantColor = ((int)0x8002),
        ConstantAlpha = ((int)0x8003),
        OneMinusConstantAlpha = ((int)0x8004),
        BlendColor = ((int)0x8005),
        FuncAdd = ((int)0x8006),
        Min = ((int)0x8007),
        Max = ((int)0x8008),
        BlendEquation = ((int)0x8009),
        BlendEquationRgb = ((int)0X8009),
        FuncSubtract = ((int)0x800A),
        FuncReverseSubtract = ((int)0x800B),
        UnsignedShort4444 = ((int)0x8033),
        UnsignedShort5551 = ((int)0x8034),
        PolygonOffsetFill = ((int)0x8037),
        PolygonOffsetFactor = ((int)0x8038),
        Rgb8 = ((int)0x8051),
        Rgba4 = ((int)0x8056),
        Rgb5A1 = ((int)0x8057),
        Rgba8 = ((int)0x8058),
        Rgb10A2 = ((int)0x8059),
        TextureBinding2D = ((int)0x8069),
        TextureBinding3D = ((int)0x806A),
        UnpackSkipImages = ((int)0x806D),
        UnpackImageHeight = ((int)0x806E),
        Texture3D = ((int)0x806F),
        TextureWrapR = ((int)0x8072),
        Max3DTextureSize = ((int)0x8073),
        SampleAlphaToCoverage = ((int)0x809E),
        SampleCoverage = ((int)0x80A0),
        SampleBuffers = ((int)0x80A8),
        Samples = ((int)0x80A9),
        SampleCoverageValue = ((int)0x80AA),
        SampleCoverageInvert = ((int)0x80AB),
        BlendDstRgb = ((int)0x80C8),
        BlendSrcRgb = ((int)0x80C9),
        BlendDstAlpha = ((int)0x80CA),
        BlendSrcAlpha = ((int)0x80CB),
        MaxElementsVertices = ((int)0x80E8),
        MaxElementsIndices = ((int)0x80E9),
        ClampToEdge = ((int)0x812F),
        TextureMinLod = ((int)0x813A),
        TextureMaxLod = ((int)0x813B),
        TextureBaseLevel = ((int)0x813C),
        TextureMaxLevel = ((int)0x813D),
        GenerateMipmapHint = ((int)0x8192),
        DepthComponent16 = ((int)0x81A5),
        DepthComponent24 = ((int)0x81A6),
        FramebufferAttachmentColorEncoding = ((int)0x8210),
        FramebufferAttachmentComponentType = ((int)0x8211),
        FramebufferAttachmentRedSize = ((int)0x8212),
        FramebufferAttachmentGreenSize = ((int)0x8213),
        FramebufferAttachmentBlueSize = ((int)0x8214),
        FramebufferAttachmentAlphaSize = ((int)0x8215),
        FramebufferAttachmentDepthSize = ((int)0x8216),
        FramebufferAttachmentStencilSize = ((int)0x8217),
        FramebufferDefault = ((int)0x8218),
        FramebufferUndefined = ((int)0x8219),
        DepthStencilAttachment = ((int)0x821A),
        MajorVersion = ((int)0x821B),
        MinorVersion = ((int)0x821C),
        NumExtensions = ((int)0x821D),
        Rg = ((int)0x8227),
        RgInteger = ((int)0x8228),
        R8 = ((int)0x8229),
        Rg8 = ((int)0x822B),
        R16f = ((int)0x822D),
        R32f = ((int)0x822E),
        Rg16f = ((int)0x822F),
        Rg32f = ((int)0x8230),
        R8i = ((int)0x8231),
        R8ui = ((int)0x8232),
        R16i = ((int)0x8233),
        R16ui = ((int)0x8234),
        R32i = ((int)0x8235),
        R32ui = ((int)0x8236),
        Rg8i = ((int)0x8237),
        Rg8ui = ((int)0x8238),
        Rg16i = ((int)0x8239),
        Rg16ui = ((int)0x823A),
        Rg32i = ((int)0x823B),
        Rg32ui = ((int)0x823C),
        ProgramBinaryRetrievableHint = ((int)0x8257),
        TextureImmutableLevels = ((int)0x82DF),
        UnsignedShort565 = ((int)0x8363),
        UnsignedInt2101010Rev = ((int)0x8368),
        MirroredRepeat = ((int)0x8370),
        AliasedPointSizeRange = ((int)0x846D),
        AliasedLineWidthRange = ((int)0x846E),
        Texture0 = ((int)0x84C0),
        Texture1 = ((int)0x84C1),
        Texture2 = ((int)0x84C2),
        Texture3 = ((int)0x84C3),
        Texture4 = ((int)0x84C4),
        Texture5 = ((int)0x84C5),
        Texture6 = ((int)0x84C6),
        Texture7 = ((int)0x84C7),
        Texture8 = ((int)0x84C8),
        Texture9 = ((int)0x84C9),
        Texture10 = ((int)0x84CA),
        Texture11 = ((int)0x84CB),
        Texture12 = ((int)0x84CC),
        Texture13 = ((int)0x84CD),
        Texture14 = ((int)0x84CE),
        Texture15 = ((int)0x84CF),
        Texture16 = ((int)0x84D0),
        Texture17 = ((int)0x84D1),
        Texture18 = ((int)0x84D2),
        Texture19 = ((int)0x84D3),
        Texture20 = ((int)0x84D4),
        Texture21 = ((int)0x84D5),
        Texture22 = ((int)0x84D6),
        Texture23 = ((int)0x84D7),
        Texture24 = ((int)0x84D8),
        Texture25 = ((int)0x84D9),
        Texture26 = ((int)0x84DA),
        Texture27 = ((int)0x84DB),
        Texture28 = ((int)0x84DC),
        Texture29 = ((int)0x84DD),
        Texture30 = ((int)0x84DE),
        Texture31 = ((int)0x84DF),
        ActiveTexture = ((int)0x84E0),
        MaxRenderbufferSize = ((int)0x84E8),
        DepthStencil = ((int)0x84F9),
        UnsignedInt248 = ((int)0x84FA),
        MaxTextureLodBias = ((int)0x84FD),
        IncrWrap = ((int)0x8507),
        DecrWrap = ((int)0x8508),
        TextureCubeMap = ((int)0x8513),
        TextureBindingCubeMap = ((int)0x8514),
        TextureCubeMapPositiveX = ((int)0x8515),
        TextureCubeMapNegativeX = ((int)0x8516),
        TextureCubeMapPositiveY = ((int)0x8517),
        TextureCubeMapNegativeY = ((int)0x8518),
        TextureCubeMapPositiveZ = ((int)0x8519),
        TextureCubeMapNegativeZ = ((int)0x851A),
        MaxCubeMapTextureSize = ((int)0x851C),
        VertexArrayBinding = ((int)0x85B5),
        VertexAttribArrayEnabled = ((int)0x8622),
        VertexAttribArraySize = ((int)0x8623),
        VertexAttribArrayStride = ((int)0x8624),
        VertexAttribArrayType = ((int)0x8625),
        CurrentVertexAttrib = ((int)0x8626),
        VertexAttribArrayPointer = ((int)0x8645),
        NumCompressedTextureFormats = ((int)0x86A2),
        CompressedTextureFormats = ((int)0x86A3),
        ProgramBinaryLength = ((int)0x8741),
        BufferSize = ((int)0x8764),
        BufferUsage = ((int)0x8765),
        NumProgramBinaryFormats = ((int)0x87FE),
        ProgramBinaryFormats = ((int)0x87FF),
        StencilBackFunc = ((int)0x8800),
        StencilBackFail = ((int)0x8801),
        StencilBackPassDepthFail = ((int)0x8802),
        StencilBackPassDepthPass = ((int)0x8803),
        Rgba32f = ((int)0x8814),
        Rgb32f = ((int)0x8815),
        Rgba16f = ((int)0x881A),
        Rgb16f = ((int)0x881B),
        MaxDrawBuffers = ((int)0x8824),
        DrawBuffer0 = ((int)0x8825),
        DrawBuffer1 = ((int)0x8826),
        DrawBuffer2 = ((int)0x8827),
        DrawBuffer3 = ((int)0x8828),
        DrawBuffer4 = ((int)0x8829),
        DrawBuffer5 = ((int)0x882A),
        DrawBuffer6 = ((int)0x882B),
        DrawBuffer7 = ((int)0x882C),
        DrawBuffer8 = ((int)0x882D),
        DrawBuffer9 = ((int)0x882E),
        DrawBuffer10 = ((int)0x882F),
        DrawBuffer11 = ((int)0x8830),
        DrawBuffer12 = ((int)0x8831),
        DrawBuffer13 = ((int)0x8832),
        DrawBuffer14 = ((int)0x8833),
        DrawBuffer15 = ((int)0x8834),
        BlendEquationAlpha = ((int)0x883D),
        TextureCompareMode = ((int)0x884C),
        TextureCompareFunc = ((int)0x884D),
        CompareRefToTexture = ((int)0x884E),
        CurrentQuery = ((int)0x8865),
        QueryResult = ((int)0x8866),
        QueryResultAvailable = ((int)0x8867),
        MaxVertexAttribs = ((int)0x8869),
        VertexAttribArrayNormalized = ((int)0x886A),
        MaxTextureImageUnits = ((int)0x8872),
        ArrayBuffer = ((int)0x8892),
        ElementArrayBuffer = ((int)0x8893),
        ArrayBufferBinding = ((int)0x8894),
        ElementArrayBufferBinding = ((int)0x8895),
        VertexAttribArrayBufferBinding = ((int)0x889F),
        BufferMapped = ((int)0x88BC),
        BufferMapPointer = ((int)0x88BD),
        StreamDraw = ((int)0x88E0),
        StreamRead = ((int)0x88E1),
        StreamCopy = ((int)0x88E2),
        StaticDraw = ((int)0x88E4),
        StaticRead = ((int)0x88E5),
        StaticCopy = ((int)0x88E6),
        DynamicDraw = ((int)0x88E8),
        DynamicRead = ((int)0x88E9),
        DynamicCopy = ((int)0x88EA),
        PixelPackBuffer = ((int)0x88EB),
        PixelUnpackBuffer = ((int)0x88EC),
        PixelPackBufferBinding = ((int)0x88ED),
        PixelUnpackBufferBinding = ((int)0x88EF),
        Depth24Stencil8 = ((int)0x88F0),
        VertexAttribArrayInteger = ((int)0x88FD),
        VertexAttribArrayDivisor = ((int)0x88FE),
        MaxArrayTextureLayers = ((int)0x88FF),
        MinProgramTexelOffset = ((int)0x8904),
        MaxProgramTexelOffset = ((int)0x8905),
        SamplerBinding = ((int)0x8919),
        UniformBuffer = ((int)0x8A11),
        UniformBufferBinding = ((int)0x8A28),
        UniformBufferStart = ((int)0x8A29),
        UniformBufferSize = ((int)0x8A2A),
        MaxVertexUniformBlocks = ((int)0x8A2B),
        MaxFragmentUniformBlocks = ((int)0x8A2D),
        MaxCombinedUniformBlocks = ((int)0x8A2E),
        MaxUniformBufferBindings = ((int)0x8A2F),
        MaxUniformBlockSize = ((int)0x8A30),
        MaxCombinedVertexUniformComponents = ((int)0x8A31),
        MaxCombinedFragmentUniformComponents = ((int)0x8A33),
        UniformBufferOffsetAlignment = ((int)0x8A34),
        ActiveUniformBlockMaxNameLength = ((int)0x8A35),
        ActiveUniformBlocks = ((int)0x8A36),
        UniformType = ((int)0x8A37),
        UniformSize = ((int)0x8A38),
        UniformNameLength = ((int)0x8A39),
        UniformBlockIndex = ((int)0x8A3A),
        UniformOffset = ((int)0x8A3B),
        UniformArrayStride = ((int)0x8A3C),
        UniformMatrixStride = ((int)0x8A3D),
        UniformIsRowMajor = ((int)0x8A3E),
        UniformBlockBinding = ((int)0x8A3F),
        UniformBlockDataSize = ((int)0x8A40),
        UniformBlockNameLength = ((int)0x8A41),
        UniformBlockActiveUniforms = ((int)0x8A42),
        UniformBlockActiveUniformIndices = ((int)0x8A43),
        UniformBlockReferencedByVertexShader = ((int)0x8A44),
        UniformBlockReferencedByFragmentShader = ((int)0x8A46),
        FragmentShader = ((int)0x8B30),
        VertexShader = ((int)0x8B31),
        MaxFragmentUniformComponents = ((int)0x8B49),
        MaxVertexUniformComponents = ((int)0x8B4A),
        MaxVaryingComponents = ((int)0x8B4B),
        MaxVertexTextureImageUnits = ((int)0x8B4C),
        MaxCombinedTextureImageUnits = ((int)0x8B4D),
        ShaderType = ((int)0x8B4F),
        FloatVec2 = ((int)0x8B50),
        FloatVec3 = ((int)0x8B51),
        FloatVec4 = ((int)0x8B52),
        IntVec2 = ((int)0x8B53),
        IntVec3 = ((int)0x8B54),
        IntVec4 = ((int)0x8B55),
        Bool = ((int)0x8B56),
        BoolVec2 = ((int)0x8B57),
        BoolVec3 = ((int)0x8B58),
        BoolVec4 = ((int)0x8B59),
        FloatMat2 = ((int)0x8B5A),
        FloatMat3 = ((int)0x8B5B),
        FloatMat4 = ((int)0x8B5C),
        Sampler2D = ((int)0x8B5E),
        Sampler3D = ((int)0x8B5F),
        SamplerCube = ((int)0x8B60),
        Sampler2DShadow = ((int)0x8B62),
        FloatMat2x3 = ((int)0x8B65),
        FloatMat2x4 = ((int)0x8B66),
        FloatMat3x2 = ((int)0x8B67),
        FloatMat3x4 = ((int)0x8B68),
        FloatMat4x2 = ((int)0x8B69),
        FloatMat4x3 = ((int)0x8B6A),
        DeleteStatus = ((int)0x8B80),
        CompileStatus = ((int)0x8B81),
        LinkStatus = ((int)0x8B82),
        ValidateStatus = ((int)0x8B83),
        InfoLogLength = ((int)0x8B84),
        AttachedShaders = ((int)0x8B85),
        ActiveUniforms = ((int)0x8B86),
        ActiveUniformMaxLength = ((int)0x8B87),
        ShaderSourceLength = ((int)0x8B88),
        ActiveAttributes = ((int)0x8B89),
        ActiveAttributeMaxLength = ((int)0x8B8A),
        FragmentShaderDerivativeHint = ((int)0x8B8B),
        ShadingLanguageVersion = ((int)0x8B8C),
        CurrentProgram = ((int)0x8B8D),
        ImplementationColorReadType = ((int)0x8B9A),
        ImplementationColorReadFormat = ((int)0x8B9B),
        UnsignedNormalized = ((int)0x8C17),
        Texture2DArray = ((int)0x8C1A),
        TextureBinding2DArray = ((int)0x8C1D),
        AnySamplesPassed = ((int)0x8C2F),
        R11fG11fB10f = ((int)0x8C3A),
        UnsignedInt10F11F11FRev = ((int)0x8C3B),
        Rgb9E5 = ((int)0x8C3D),
        UnsignedInt5999Rev = ((int)0x8C3E),
        Srgb = ((int)0x8C40),
        Srgb8 = ((int)0x8C41),
        Srgb8Alpha8 = ((int)0x8C43),
        TransformFeedbackVaryingMaxLength = ((int)0x8C76),
        TransformFeedbackBufferMode = ((int)0x8C7F),
        MaxTransformFeedbackSeparateComponents = ((int)0x8C80),
        TransformFeedbackVaryings = ((int)0x8C83),
        TransformFeedbackBufferStart = ((int)0x8C84),
        TransformFeedbackBufferSize = ((int)0x8C85),
        TransformFeedbackPrimitivesWritten = ((int)0x8C88),
        RasterizerDiscard = ((int)0x8C89),
        MaxTransformFeedbackInterleavedComponents = ((int)0x8C8A),
        MaxTransformFeedbackSeparateAttribs = ((int)0x8C8B),
        InterleavedAttribs = ((int)0x8C8C),
        SeparateAttribs = ((int)0x8C8D),
        TransformFeedbackBuffer = ((int)0x8C8E),
        TransformFeedbackBufferBinding = ((int)0x8C8F),
        StencilBackRef = ((int)0x8CA3),
        StencilBackValueMask = ((int)0x8CA4),
        StencilBackWritemask = ((int)0x8CA5),
        DrawFramebufferBinding = ((int)0x8CA6),
        FramebufferBinding = ((int)0x8CA6),
        RenderbufferBinding = ((int)0x8CA7),
        ReadFramebuffer = ((int)0x8CA8),
        DrawFramebuffer = ((int)0x8CA9),
        ReadFramebufferBinding = ((int)0x8CAA),
        RenderbufferSamples = ((int)0x8CAB),
        DepthComponent32f = ((int)0x8CAC),
        DepthComponent32F = ((int)0x8CAC),
        Depth32fStencil8 = ((int)0x8CAD),
        Depth32FStencil8 = ((int)0x8CAD),
        FramebufferAttachmentObjectType = ((int)0x8CD0),
        FramebufferAttachmentObjectName = ((int)0x8CD1),
        FramebufferAttachmentTextureLevel = ((int)0x8CD2),
        FramebufferAttachmentTextureCubeMapFace = ((int)0x8CD3),
        FramebufferAttachmentTextureLayer = ((int)0x8CD4),
        FramebufferComplete = ((int)0x8CD5),
        FramebufferIncompleteAttachment = ((int)0x8CD6),
        FramebufferIncompleteMissingAttachment = ((int)0x8CD7),
        FramebufferIncompleteDimensions = ((int)0x8CD9),
        FramebufferUnsupported = ((int)0x8CDD),
        MaxColorAttachments = ((int)0x8CDF),
        ColorAttachment0 = ((int)0x8CE0),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
        DepthAttachment = ((int)0x8D00),
        StencilAttachment = ((int)0x8D20),
        Framebuffer = ((int)0x8D40),
        Renderbuffer = ((int)0x8D41),
        RenderbufferWidth = ((int)0x8D42),
        RenderbufferHeight = ((int)0x8D43),
        RenderbufferInternalFormat = ((int)0x8D44),
        StencilIndex8 = ((int)0x8D48),
        RenderbufferRedSize = ((int)0x8D50),
        RenderbufferGreenSize = ((int)0x8D51),
        RenderbufferBlueSize = ((int)0x8D52),
        RenderbufferAlphaSize = ((int)0x8D53),
        RenderbufferDepthSize = ((int)0x8D54),
        RenderbufferStencilSize = ((int)0x8D55),
        FramebufferIncompleteMultisample = ((int)0x8D56),
        MaxSamples = ((int)0x8D57),
        Rgb565 = ((int)0x8D62),
        PrimitiveRestartFixedIndex = ((int)0x8D69),
        AnySamplesPassedConservative = ((int)0x8D6A),
        MaxElementIndex = ((int)0x8D6B),
        Rgba32ui = ((int)0x8D70),
        Rgb32ui = ((int)0x8D71),
        Rgba16ui = ((int)0x8D76),
        Rgb16ui = ((int)0x8D77),
        Rgba8ui = ((int)0x8D7C),
        Rgb8ui = ((int)0x8D7D),
        Rgba32i = ((int)0x8D82),
        Rgb32i = ((int)0x8D83),
        Rgba16i = ((int)0x8D88),
        Rgb16i = ((int)0x8D89),
        Rgba8i = ((int)0x8D8E),
        Rgb8i = ((int)0x8D8F),
        RedInteger = ((int)0x8D94),
        RgbInteger = ((int)0x8D98),
        RgbaInteger = ((int)0x8D99),
        Int2101010Rev = ((int)0x8D9F),
        Float32UnsignedInt248Rev = ((int)0x8DAD),
        Sampler2DArray = ((int)0x8DC1),
        Sampler2DArrayShadow = ((int)0x8DC4),
        SamplerCubeShadow = ((int)0x8DC5),
        UnsignedIntVec2 = ((int)0x8DC6),
        UnsignedIntVec3 = ((int)0x8DC7),
        UnsignedIntVec4 = ((int)0x8DC8),
        IntSampler2D = ((int)0x8DCA),
        IntSampler3D = ((int)0x8DCB),
        IntSamplerCube = ((int)0x8DCC),
        IntSampler2DArray = ((int)0x8DCF),
        UnsignedIntSampler2D = ((int)0x8DD2),
        UnsignedIntSampler3D = ((int)0x8DD3),
        UnsignedIntSamplerCube = ((int)0x8DD4),
        UnsignedIntSampler2DArray = ((int)0x8DD7),
        LowFloat = ((int)0x8DF0),
        MediumFloat = ((int)0x8DF1),
        HighFloat = ((int)0x8DF2),
        LowInt = ((int)0x8DF3),
        MediumInt = ((int)0x8DF4),
        HighInt = ((int)0x8DF5),
        ShaderBinaryFormats = ((int)0x8DF8),
        NumShaderBinaryFormats = ((int)0x8DF9),
        ShaderCompiler = ((int)0x8DFA),
        MaxVertexUniformVectors = ((int)0x8DFB),
        MaxVaryingVectors = ((int)0x8DFC),
        MaxFragmentUniformVectors = ((int)0x8DFD),
        TransformFeedback = ((int)0x8E22),
        TransformFeedbackPaused = ((int)0x8E23),
        TransformFeedbackActive = ((int)0x8E24),
        TransformFeedbackBinding = ((int)0x8E25),
        TextureSwizzleR = ((int)0x8E42),
        TextureSwizzleG = ((int)0x8E43),
        TextureSwizzleB = ((int)0x8E44),
        TextureSwizzleA = ((int)0x8E45),
        CopyReadBuffer = ((int)0x8F36),
        CopyReadBufferBinding = ((int)0x8F36),
        CopyWriteBuffer = ((int)0x8F37),
        CopyWriteBufferBinding = ((int)0x8F37),
        R8Snorm = ((int)0x8F94),
        Rg8Snorm = ((int)0x8F95),
        Rgb8Snorm = ((int)0x8F96),
        Rgba8Snorm = ((int)0x8F97),
        SignedNormalized = ((int)0x8F9C),
        Rgb10A2ui = ((int)0x906F),
        MaxServerWaitTimeout = ((int)0x9111),
        ObjectType = ((int)0x9112),
        SyncCondition = ((int)0x9113),
        SyncStatus = ((int)0x9114),
        SyncFlags = ((int)0x9115),
        SyncFence = ((int)0x9116),
        SyncGpuCommandsComplete = ((int)0x9117),
        Unsignaled = ((int)0x9118),
        Signaled = ((int)0x9119),
        AlreadySignaled = ((int)0x911A),
        TimeoutExpired = ((int)0x911B),
        ConditionSatisfied = ((int)0x911C),
        WaitFailed = ((int)0x911D),
        BufferAccessFlags = ((int)0x911F),
        BufferMapLength = ((int)0x9120),
        BufferMapOffset = ((int)0x9121),
        MaxVertexOutputComponents = ((int)0x9122),
        MaxFragmentInputComponents = ((int)0x9125),
        TextureImmutableFormat = ((int)0x912F),
        CompressedR11Eac = ((int)0x9270),
        CompressedSignedR11Eac = ((int)0x9271),
        CompressedRg11Eac = ((int)0x9272),
        CompressedSignedRg11Eac = ((int)0x9273),
        CompressedRgb8Etc2 = ((int)0x9274),
        CompressedSrgb8Etc2 = ((int)0x9275),
        CompressedRgb8PunchthroughAlpha1Etc2 = ((int)0x9276),
        CompressedSrgb8PunchthroughAlpha1Etc2 = ((int)0x9277),
        CompressedRgba8Etc2Eac = ((int)0x9278),
        CompressedSrgb8Alpha8Etc2Eac = ((int)0x9279),
        NumSampleCounts = ((int)0x9380),
        InvalidIndex = unchecked((int)0xFFFFFFFF),
        TimeoutIgnored = unchecked((int)0xFFFFFFFFFFFFFFFF),
        EsVersion20 = ((int)1),
        EsVersion30 = ((int)1),
        One = ((int)1),
        True = ((int)1),
    }

    public enum BeginMode : int
    {
        Points = ((int)0x0000),
        Lines = ((int)0x0001),
        LineLoop = ((int)0x0002),
        LineStrip = ((int)0x0003),
        Triangles = ((int)0x0004),
        TriangleStrip = ((int)0x0005),
        TriangleFan = ((int)0x0006),
    }

    public enum BlendEquationMode : int
    {
        FuncAdd = ((int)0X8006),
        Min = ((int)0x8007),
        Max = ((int)0x8008),
        FuncSubtract = ((int)0X800a),
        FuncReverseSubtract = ((int)0X800b),
    }

    public enum BlendEquationSeparate : int
    {
        FuncAdd = ((int)0x8006),
        BlendEquation = ((int)0x8009),
        BlendEquationAlpha = ((int)0x883D),
    }

    public enum BlendingFactorDest : int
    {
        Zero = ((int)0),
        SrcColor = ((int)0x0300),
        OneMinusSrcColor = ((int)0x0301),
        SrcAlpha = ((int)0x0302),
        OneMinusSrcAlpha = ((int)0x0303),
        DstAlpha = ((int)0x0304),
        OneMinusDstAlpha = ((int)0x0305),
        DstColor = ((int)0X0306),
        OneMinusDstColor = ((int)0X0307),
        SrcAlphaSaturate = ((int)0X0308),
        ConstantColor = ((int)0X8001),
        OneMinusConstantColor = ((int)0X8002),
        ConstantAlpha = ((int)0X8003),
        OneMinusConstantAlpha = ((int)0X8004),
        One = ((int)1),
    }

    public enum BlendingFactorSrc : int
    {
        Zero = ((int)0),
        SrcColor = ((int)0X0300),
        OneMinusSrcColor = ((int)0X0301),
        SrcAlpha = ((int)0X0302),
        OneMinusSrcAlpha = ((int)0X0303),
        DstAlpha = ((int)0X0304),
        OneMinusDstAlpha = ((int)0X0305),
        DstColor = ((int)0x0306),
        OneMinusDstColor = ((int)0x0307),
        SrcAlphaSaturate = ((int)0x0308),
        ConstantColor = ((int)0X8001),
        OneMinusConstantColor = ((int)0X8002),
        ConstantAlpha = ((int)0X8003),
        OneMinusConstantAlpha = ((int)0X8004),
        One = ((int)1),
    }

    public enum BlendSubtract : int
    {
        FuncSubtract = ((int)0x800A),
        FuncReverseSubtract = ((int)0x800B),
    }

    public enum BlitFramebufferFilter : int
    {
        Nearest = ((int)0X2600),
        Linear = ((int)0X2601),
    }

    public enum Boolean : int
    {
        False = ((int)0),
        True = ((int)1),
    }

    [Flags]
    public enum BufferAccessMask : int
    {
        MapReadBit = ((int)0x0001),
        MapWriteBit = ((int)0x0002),
        MapInvalidateRangeBit = ((int)0x0004),
        MapInvalidateBufferBit = ((int)0x0008),
        MapFlushExplicitBit = ((int)0x0010),
        MapUnsynchronizedBit = ((int)0x0020),
    }

    public enum BufferObjects : int
    {
        CurrentVertexAttrib = ((int)0x8626),
        BufferSize = ((int)0x8764),
        BufferUsage = ((int)0x8765),
        ArrayBuffer = ((int)0x8892),
        ElementArrayBuffer = ((int)0x8893),
        ArrayBufferBinding = ((int)0x8894),
        ElementArrayBufferBinding = ((int)0x8895),
        StreamDraw = ((int)0x88E0),
        StaticDraw = ((int)0x88E4),
        DynamicDraw = ((int)0x88E8),
    }

    public enum BufferParameterName : int
    {
        BufferSize = ((int)0X8764),
        BufferUsage = ((int)0X8765),
        BufferMapped = ((int)0x88BC),
        BufferMapPointer = ((int)0x88BD),
        BufferAccessFlags = ((int)0x911F),
        BufferMapLength = ((int)0x9120),
        BufferMapOffset = ((int)0x9121),
    }

    public enum BufferPointer : int
    {
        BufferMapPointer = ((int)0x88BD),
    }

    public enum BufferRangeTarget : int
    {
        UniformBuffer = ((int)0x8A11),
        TransformFeedbackBuffer = ((int)0x8C8E),
    }

    public enum BufferTarget : int
    {
        ArrayBuffer = ((int)0X8892),
        ElementArrayBuffer = ((int)0X8893),
        PixelPackBuffer = ((int)0x88EB),
        PixelUnpackBuffer = ((int)0x88EC),
        UniformBuffer = ((int)0x8A11),
        TransformFeedbackBuffer = ((int)0x8C8E),
        CopyReadBuffer = ((int)0x8F36),
        CopyWriteBuffer = ((int)0x8F37),
    }

    public enum BufferUsage : int
    {
        StreamDraw = ((int)0X88e0),
        StaticDraw = ((int)0X88e4),
        DynamicDraw = ((int)0X88e8),
    }

    public enum ClearBuffer : int
    {
        Front = ((int)0X0404),
        Back = ((int)0X0405),
        FrontAndBack = ((int)0X0408),
        Color = ((int)0x1800),
        Depth = ((int)0x1801),
        Stencil = ((int)0x1802),
    }

    public enum ClearBufferCombined : int
    {
        DepthStencil = ((int)0x84F9),
    }

    [Flags]
    public enum ClearBufferMask : int
    {
        DepthBufferBit = ((int)0x00000100),
        StencilBufferBit = ((int)0x00000400),
        ColorBufferBit = ((int)0x00004000),
    }

    public enum CompressedInternalFormat : int
    {
        CompressedR11Eac = ((int)0x9270),
        CompressedSignedR11Eac = ((int)0x9271),
        CompressedRg11Eac = ((int)0x9272),
        CompressedSignedRg11Eac = ((int)0x9273),
        CompressedRgb8Etc2 = ((int)0x9274),
        CompressedSrgb8Etc2 = ((int)0x9275),
        CompressedRgb8PunchthroughAlpha1Etc2 = ((int)0x9276),
        CompressedSrgb8PunchthroughAlpha1Etc2 = ((int)0x9277),
        CompressedRgba8Etc2Eac = ((int)0x9278),
        CompressedSrgb8Alpha8Etc2Eac = ((int)0x9279),
    }

    public enum CullFaceMode : int
    {
        Front = ((int)0x0404),
        Back = ((int)0x0405),
        FrontAndBack = ((int)0x0408),
    }

    public enum DataType : int
    {
        Byte = ((int)0x1400),
        UnsignedByte = ((int)0x1401),
        Short = ((int)0x1402),
        UnsignedShort = ((int)0x1403),
        Int = ((int)0x1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0x1406),
        Fixed = ((int)0x140C),
    }

    public enum DepthFunction : int
    {
        Never = ((int)0X0200),
        Less = ((int)0X0201),
        Equal = ((int)0X0202),
        Lequal = ((int)0X0203),
        Greater = ((int)0X0204),
        Notequal = ((int)0X0205),
        Gequal = ((int)0X0206),
        Always = ((int)0X0207),
    }

    public enum DrawBufferMode : int
    {
        None = ((int)0),
        Back = ((int)0X0405),
        ColorAttachment0 = ((int)0X8ce0),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
    }

    public enum DrawElementsType : int
    {
        UnsignedByte = ((int)0X1401),
        UnsignedShort = ((int)0X1403),
        UnsignedInt = ((int)0X1405),
    }

    public enum EnableCap : int
    {
        CullFace = ((int)0x0B44),
        DepthTest = ((int)0x0B71),
        StencilTest = ((int)0x0B90),
        Dither = ((int)0x0BD0),
        Blend = ((int)0x0BE2),
        ScissorTest = ((int)0x0C11),
        Texture2D = ((int)0x0DE1),
        PolygonOffsetFill = ((int)0x8037),
        SampleAlphaToCoverage = ((int)0x809E),
        SampleCoverage = ((int)0x80A0),
        RasterizerDiscard = ((int)0x8C89),
        PrimitiveRestartFixedIndex = ((int)0x8D69),
    }

    public enum ErrorCode : int
    {
        NoError = ((int)0),
        InvalidEnum = ((int)0x0500),
        InvalidValue = ((int)0x0501),
        InvalidOperation = ((int)0x0502),
        OutOfMemory = ((int)0x0505),
        InvalidFramebufferOperation = ((int)0X0506),
    }

    public enum FramebufferAttachment : int
    {
        DepthStencilAttachment = ((int)0x821A),
        ColorAttachment0 = ((int)0X8ce0),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
        DepthAttachment = ((int)0X8d00),
        StencilAttachment = ((int)0X8d20),
    }

    public enum FramebufferErrorCode : int
    {
        FramebufferComplete = ((int)0X8cd5),
        FramebufferIncompleteAttachment = ((int)0X8cd6),
        FramebufferIncompleteMissingAttachment = ((int)0X8cd7),
        FramebufferIncompleteDimensions = ((int)0X8cd9),
        FramebufferUnsupported = ((int)0X8cdd),
    }

    public enum FramebufferObject : int
    {
        None = ((int)0),
        InvalidFramebufferOperation = ((int)0x0506),
        StencilIndex = ((int)0x1901),
        Rgba4 = ((int)0x8056),
        Rgb5A1 = ((int)0x8057),
        DepthComponent16 = ((int)0x81A5),
        MaxRenderbufferSize = ((int)0x84E8),
        FramebufferBinding = ((int)0x8CA6),
        RenderbufferBinding = ((int)0x8CA7),
        FramebufferAttachmentObjectType = ((int)0x8CD0),
        FramebufferAttachmentObjectName = ((int)0x8CD1),
        FramebufferAttachmentTextureLevel = ((int)0x8CD2),
        FramebufferAttachmentTextureCubeMapFace = ((int)0x8CD3),
        FramebufferComplete = ((int)0x8CD5),
        FramebufferIncompleteAttachment = ((int)0x8CD6),
        FramebufferIncompleteMissingAttachment = ((int)0x8CD7),
        FramebufferIncompleteDimensions = ((int)0x8CD9),
        FramebufferUnsupported = ((int)0x8CDD),
        ColorAttachment0 = ((int)0x8CE0),
        DepthAttachment = ((int)0x8D00),
        StencilAttachment = ((int)0x8D20),
        Framebuffer = ((int)0x8D40),
        Renderbuffer = ((int)0x8D41),
        RenderbufferWidth = ((int)0x8D42),
        RenderbufferHeight = ((int)0x8D43),
        RenderbufferInternalFormat = ((int)0x8D44),
        StencilIndex8 = ((int)0x8D48),
        RenderbufferRedSize = ((int)0x8D50),
        RenderbufferGreenSize = ((int)0x8D51),
        RenderbufferBlueSize = ((int)0x8D52),
        RenderbufferAlphaSize = ((int)0x8D53),
        RenderbufferDepthSize = ((int)0x8D54),
        RenderbufferStencilSize = ((int)0x8D55),
        Rgb565 = ((int)0x8D62),
    }

    public enum FramebufferParameterName : int
    {
        FramebufferAttachmentColorEncoding = ((int)0x8210),
        FramebufferAttachmentComponentType = ((int)0x8211),
        FramebufferAttachmentRedSize = ((int)0x8212),
        FramebufferAttachmentGreenSize = ((int)0x8213),
        FramebufferAttachmentBlueSize = ((int)0x8214),
        FramebufferAttachmentAlphaSize = ((int)0x8215),
        FramebufferAttachmentDepthSize = ((int)0x8216),
        FramebufferAttachmentStencilSize = ((int)0x8217),
        FramebufferAttachmentObjectType = ((int)0X8cd0),
        FramebufferAttachmentObjectName = ((int)0X8cd1),
        FramebufferAttachmentTextureLevel = ((int)0X8cd2),
        FramebufferAttachmentTextureCubeMapFace = ((int)0X8cd3),
        FramebufferAttachmentTextureLayer = ((int)0x8CD4),
    }

    public enum FramebufferSlot : int
    {
        DepthStencilAttachment = ((int)0x821A),
        ColorAttachment0 = ((int)0X8ce0),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
        DepthAttachment = ((int)0X8d00),
        StencilAttachment = ((int)0X8d20),
    }

    public enum FramebufferTarget : int
    {
        ReadFramebuffer = ((int)0x8CA8),
        DrawFramebuffer = ((int)0x8CA9),
        Framebuffer = ((int)0X8d40),
    }

    public enum FrontFaceDirection : int
    {
        Cw = ((int)0x0900),
        Ccw = ((int)0x0901),
    }

    public enum GetIndexedPName : int
    {
        UniformBufferBinding = ((int)0x8A28),
        UniformBufferStart = ((int)0x8A29),
        UniformBufferSize = ((int)0x8A2A),
        TransformFeedbackBufferStart = ((int)0x8C84),
        TransformFeedbackBufferSize = ((int)0x8C85),
        TransformFeedbackBufferBinding = ((int)0x8C8F),
    }

    public enum GetPName : int
    {
        LineWidth = ((int)0x0B21),
        CullFace = ((int)0X0b44),
        CullFaceMode = ((int)0x0B45),
        FrontFace = ((int)0x0B46),
        DepthRange = ((int)0x0B70),
        DepthTest = ((int)0X0b71),
        DepthWritemask = ((int)0x0B72),
        DepthClearValue = ((int)0x0B73),
        DepthFunc = ((int)0x0B74),
        StencilTest = ((int)0X0b90),
        StencilClearValue = ((int)0x0B91),
        StencilFunc = ((int)0x0B92),
        StencilValueMask = ((int)0x0B93),
        StencilFail = ((int)0x0B94),
        StencilPassDepthFail = ((int)0x0B95),
        StencilPassDepthPass = ((int)0x0B96),
        StencilRef = ((int)0x0B97),
        StencilWritemask = ((int)0x0B98),
        Viewport = ((int)0x0BA2),
        Dither = ((int)0X0bd0),
        Blend = ((int)0X0be2),
        ReadBuffer = ((int)0x0C02),
        ScissorBox = ((int)0x0C10),
        ScissorTest = ((int)0X0c11),
        ColorClearValue = ((int)0x0C22),
        ColorWritemask = ((int)0x0C23),
        UnpackRowLength = ((int)0x0CF2),
        UnpackSkipRows = ((int)0x0CF3),
        UnpackSkipPixels = ((int)0x0CF4),
        UnpackAlignment = ((int)0x0CF5),
        PackRowLength = ((int)0x0D02),
        PackSkipRows = ((int)0x0D03),
        PackSkipPixels = ((int)0x0D04),
        PackAlignment = ((int)0x0D05),
        MaxTextureSize = ((int)0x0D33),
        MaxViewportDims = ((int)0x0D3A),
        SubpixelBits = ((int)0x0D50),
        RedBits = ((int)0x0D52),
        GreenBits = ((int)0x0D53),
        BlueBits = ((int)0x0D54),
        AlphaBits = ((int)0x0D55),
        DepthBits = ((int)0x0D56),
        StencilBits = ((int)0x0D57),
        Texture2D = ((int)0X0de1),
        PolygonOffsetUnits = ((int)0x2A00),
        BlendColor = ((int)0X8005),
        BlendEquation = ((int)0X8009),
        BlendEquationRgb = ((int)0X8009),
        PolygonOffsetFill = ((int)0X8037),
        PolygonOffsetFactor = ((int)0x8038),
        TextureBinding2D = ((int)0x8069),
        TextureBinding3D = ((int)0x806A),
        UnpackSkipImages = ((int)0x806D),
        UnpackImageHeight = ((int)0x806E),
        Texture3D = ((int)0x806F),
        Max3DTextureSize = ((int)0x8073),
        SampleAlphaToCoverage = ((int)0X809e),
        SampleCoverage = ((int)0X80a0),
        SampleBuffers = ((int)0x80A8),
        Samples = ((int)0x80A9),
        SampleCoverageValue = ((int)0x80AA),
        SampleCoverageInvert = ((int)0x80AB),
        BlendDstRgb = ((int)0X80c8),
        BlendSrcRgb = ((int)0X80c9),
        BlendDstAlpha = ((int)0X80ca),
        BlendSrcAlpha = ((int)0X80cb),
        MaxElementsVertices = ((int)0x80E8),
        MaxElementsIndices = ((int)0x80E9),
        GenerateMipmapHint = ((int)0X8192),
        MajorVersion = ((int)0x821B),
        MinorVersion = ((int)0x821C),
        NumExtensions = ((int)0x821D),
        AliasedPointSizeRange = ((int)0x846D),
        AliasedLineWidthRange = ((int)0x846E),
        ActiveTexture = ((int)0X84e0),
        MaxRenderbufferSize = ((int)0X84e8),
        MaxTextureLodBias = ((int)0x84FD),
        TextureBindingCubeMap = ((int)0X8514),
        MaxCubeMapTextureSize = ((int)0X851c),
        VertexArrayBinding = ((int)0x85B5),
        NumCompressedTextureFormats = ((int)0X86a2),
        CompressedTextureFormats = ((int)0X86a3),
        NumProgramBinaryFormats = ((int)0x87FE),
        ProgramBinaryFormats = ((int)0x87FF),
        StencilBackFunc = ((int)0x8800),
        StencilBackFail = ((int)0x8801),
        StencilBackPassDepthFail = ((int)0x8802),
        StencilBackPassDepthPass = ((int)0x8803),
        MaxDrawBuffers = ((int)0x8824),
        DrawBuffer0 = ((int)0x8825),
        DrawBuffer1 = ((int)0x8826),
        DrawBuffer2 = ((int)0x8827),
        DrawBuffer3 = ((int)0x8828),
        DrawBuffer4 = ((int)0x8829),
        DrawBuffer5 = ((int)0x882A),
        DrawBuffer6 = ((int)0x882B),
        DrawBuffer7 = ((int)0x882C),
        DrawBuffer8 = ((int)0x882D),
        DrawBuffer9 = ((int)0x882E),
        DrawBuffer10 = ((int)0x882F),
        DrawBuffer11 = ((int)0x8830),
        DrawBuffer12 = ((int)0x8831),
        DrawBuffer13 = ((int)0x8832),
        DrawBuffer14 = ((int)0x8833),
        DrawBuffer15 = ((int)0x8834),
        BlendEquationAlpha = ((int)0X883d),
        MaxVertexAttribs = ((int)0X8869),
        MaxTextureImageUnits = ((int)0X8872),
        ArrayBufferBinding = ((int)0X8894),
        ElementArrayBufferBinding = ((int)0X8895),
        PixelPackBufferBinding = ((int)0x88ED),
        PixelUnpackBufferBinding = ((int)0x88EF),
        MaxArrayTextureLayers = ((int)0x88FF),
        MinProgramTexelOffset = ((int)0x8904),
        MaxProgramTexelOffset = ((int)0x8905),
        UniformBufferBinding = ((int)0x8A28),
        UniformBufferStart = ((int)0x8A29),
        UniformBufferSize = ((int)0x8A2A),
        MaxVertexUniformBlocks = ((int)0x8A2B),
        MaxFragmentUniformBlocks = ((int)0x8A2D),
        MaxCombinedUniformBlocks = ((int)0x8A2E),
        MaxUniformBufferBindings = ((int)0x8A2F),
        MaxUniformBlockSize = ((int)0x8A30),
        MaxCombinedVertexUniformComponents = ((int)0x8A31),
        MaxCombinedFragmentUniformComponents = ((int)0x8A33),
        UniformBufferOffsetAlignment = ((int)0x8A34),
        MaxFragmentUniformComponents = ((int)0x8B49),
        MaxVertexUniformComponents = ((int)0x8B4A),
        MaxVaryingComponents = ((int)0x8B4B),
        MaxVertexTextureImageUnits = ((int)0X8b4c),
        MaxCombinedTextureImageUnits = ((int)0X8b4d),
        FragmentShaderDerivativeHint = ((int)0x8B8B),
        CurrentProgram = ((int)0X8b8d),
        ImplementationColorReadType = ((int)0X8b9a),
        ImplementationColorReadFormat = ((int)0X8b9b),
        TextureBinding2DArray = ((int)0x8C1D),
        MaxTransformFeedbackSeparateComponents = ((int)0x8C80),
        TransformFeedbackBufferStart = ((int)0x8C84),
        TransformFeedbackBufferSize = ((int)0x8C85),
        MaxTransformFeedbackInterleavedComponents = ((int)0x8C8A),
        MaxTransformFeedbackSeparateAttribs = ((int)0x8C8B),
        TransformFeedbackBufferBinding = ((int)0x8C8F),
        StencilBackRef = ((int)0x8CA3),
        StencilBackValueMask = ((int)0x8CA4),
        StencilBackWritemask = ((int)0x8CA5),
        DrawFramebufferBinding = ((int)0x8CA6),
        FramebufferBinding = ((int)0X8ca6),
        RenderbufferBinding = ((int)0X8ca7),
        ReadFramebufferBinding = ((int)0x8CAA),
        MaxColorAttachments = ((int)0x8CDF),
        MaxSamples = ((int)0x8D57),
        PrimitiveRestartFixedIndex = ((int)0x8D69),
        MaxElementIndex = ((int)0x8D6B),
        ShaderBinaryFormats = ((int)0X8df8),
        NumShaderBinaryFormats = ((int)0X8df9),
        ShaderCompiler = ((int)0X8dfa),
        MaxVertexUniformVectors = ((int)0X8dfb),
        MaxVaryingVectors = ((int)0X8dfc),
        MaxFragmentUniformVectors = ((int)0X8dfd),
        TransformFeedbackPaused = ((int)0x8E23),
        TransformFeedbackActive = ((int)0x8E24),
        TransformFeedbackBinding = ((int)0x8E25),
        MaxServerWaitTimeout = ((int)0x9111),
        MaxVertexOutputComponents = ((int)0x9122),
        MaxFragmentInputComponents = ((int)0x9125),
    }

    public enum GetQueryObjectParam : int
    {
        QueryResult = ((int)0x8866),
        QueryResultAvailable = ((int)0x8867),
    }

    public enum GetQueryParam : int
    {
        CurrentQuery = ((int)0x8865),
    }

    public enum GetTextureParameter : int
    {
        TextureMagFilter = ((int)0X2800),
        TextureMinFilter = ((int)0X2801),
        TextureWrapS = ((int)0X2802),
        TextureWrapT = ((int)0X2803),
        TextureWrapR = ((int)0x8072),
        TextureMinLod = ((int)0x813A),
        TextureMaxLod = ((int)0x813B),
        TextureBaseLevel = ((int)0x813C),
        TextureMaxLevel = ((int)0x813D),
        NumCompressedTextureFormats = ((int)0x86A2),
        CompressedTextureFormats = ((int)0x86A3),
        TextureCompareMode = ((int)0x884C),
        TextureCompareFunc = ((int)0x884D),
        TextureSwizzleR = ((int)0x8E42),
        TextureSwizzleG = ((int)0x8E43),
        TextureSwizzleB = ((int)0x8E44),
        TextureSwizzleA = ((int)0x8E45),
        TextureImmutableFormat = ((int)0x912F),
    }

    public enum HintMode : int
    {
        DontCare = ((int)0x1100),
        Fastest = ((int)0x1101),
        Nicest = ((int)0x1102),
    }

    public enum HintTarget : int
    {
        GenerateMipmapHint = ((int)0x8192),
        FragmentShaderDerivativeHint = ((int)0x8B8B),
    }

    public enum ImageTarget : int
    {
        Renderbuffer = ((int)0X8d41),
    }

    public enum InternalFormatParameter : int
    {
        Samples = ((int)0x80A9),
        NumSampleCounts = ((int)0x9380),
    }

    [Obsolete("Use OpenGlEsCoreVersions enum")]
    public enum OpenGlescoreVersions : int
    {
        EsVersion20 = ((int)1),
        EsVersion30 = ((int)1),
    }

    public enum OpenGlEsCoreVersions : int
    {
        EsVersion20 = ((int)1),
        EsVersion30 = ((int)1),
    }

    public enum PixelFormat : int
    {
        DepthComponent = ((int)0x1902),
        Red = ((int)0x1903),
        Alpha = ((int)0x1906),
        Rgb = ((int)0x1907),
        Rgba = ((int)0x1908),
        Luminance = ((int)0x1909),
        LuminanceAlpha = ((int)0x190A),
        Rg = ((int)0x8227),
        RgInteger = ((int)0x8228),
        DepthStencil = ((int)0x84F9),
        RedInteger = ((int)0x8D94),
        RgbInteger = ((int)0x8D98),
        RgbaInteger = ((int)0x8D99),
    }

    public enum PixelInternalFormat : int
    {
        Alpha = ((int)0X1906),
        Rgb = ((int)0X1907),
        Rgba = ((int)0X1908),
        Luminance = ((int)0X1909),
        LuminanceAlpha = ((int)0X190a),
    }

    public enum PixelStoreParameter : int
    {
        UnpackRowLength = ((int)0x0CF2),
        UnpackSkipRows = ((int)0x0CF3),
        UnpackSkipPixels = ((int)0x0CF4),
        UnpackAlignment = ((int)0X0cf5),
        PackRowLength = ((int)0x0D02),
        PackSkipRows = ((int)0x0D03),
        PackSkipPixels = ((int)0x0D04),
        PackAlignment = ((int)0X0d05),
        UnpackSkipImages = ((int)0x806D),
        UnpackImageHeight = ((int)0x806E),
    }

    public enum PixelType : int
    {
        Byte = ((int)0x1400),
        UnsignedByte = ((int)0X1401),
        Short = ((int)0x1402),
        UnsignedShort = ((int)0x1403),
        Int = ((int)0x1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0x1406),
        HalfFloat = ((int)0x140B),
        UnsignedShort4444 = ((int)0x8033),
        UnsignedShort5551 = ((int)0x8034),
        UnsignedShort565 = ((int)0x8363),
        UnsignedInt2101010Rev = ((int)0x8368),
        UnsignedInt248 = ((int)0x84FA),
        UnsignedInt10F11F11FRev = ((int)0x8C3B),
        UnsignedInt5999Rev = ((int)0x8C3E),
        Float32UnsignedInt248Rev = ((int)0x8DAD),
    }

    public enum PrimitiveType : int
    {
        Points = ((int)0X0000),
        Lines = ((int)0X0001),
        LineLoop = ((int)0X0002),
        LineStrip = ((int)0X0003),
        Triangles = ((int)0X0004),
        TriangleStrip = ((int)0X0005),
        TriangleFan = ((int)0X0006),
    }

    public enum ProgramParameter : int
    {
        ProgramBinaryRetrievableHint = ((int)0x8257),
        DeleteStatus = ((int)0X8b80),
        LinkStatus = ((int)0X8b82),
        ValidateStatus = ((int)0X8b83),
        InfoLogLength = ((int)0X8b84),
        AttachedShaders = ((int)0X8b85),
        ActiveUniforms = ((int)0X8b86),
        ActiveUniformMaxLength = ((int)0X8b87),
        ActiveAttributes = ((int)0X8b89),
        ActiveAttributeMaxLength = ((int)0X8b8a),
    }

    public enum ProgramParameterName : int
    {
        ProgramBinaryRetrievableHint = ((int)0x8257),
    }

    public enum QueryTarget : int
    {
        AnySamplesPassed = ((int)0x8C2F),
        TransformFeedbackPrimitivesWritten = ((int)0x8C88),
        AnySamplesPassedConservative = ((int)0x8D6A),
    }

    public enum ReadBufferMode : int
    {
        None = ((int)0),
        Back = ((int)0X0405),
        ColorAttachment0 = ((int)0X8ce0),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
    }

    public enum ReadFormat : int
    {
        ImplementationColorReadType = ((int)0x8B9A),
        ImplementationColorReadFormat = ((int)0x8B9B),
    }

    public enum RenderbufferInternalFormat : int
    {
        Rgb8 = ((int)0x8051),
        Rgba4 = ((int)0X8056),
        Rgb5A1 = ((int)0X8057),
        Rgba8 = ((int)0x8058),
        Rgb10A2 = ((int)0x8059),
        DepthComponent16 = ((int)0X81a5),
        DepthComponent24 = ((int)0x81A6),
        R8 = ((int)0x8229),
        Rg8 = ((int)0x822B),
        R8i = ((int)0x8231),
        R8ui = ((int)0x8232),
        R16i = ((int)0x8233),
        R16ui = ((int)0x8234),
        R32i = ((int)0x8235),
        R32ui = ((int)0x8236),
        Rg8i = ((int)0x8237),
        Rg8ui = ((int)0x8238),
        Rg16i = ((int)0x8239),
        Rg16ui = ((int)0x823A),
        Rg32i = ((int)0x823B),
        Rg32ui = ((int)0x823C),
        Depth24Stencil8 = ((int)0x88F0),
        Srgb8Alpha8 = ((int)0x8C43),
        DepthComponent32F = ((int)0x8CAC),
        Depth32FStencil8 = ((int)0x8CAD),
        StencilIndex8 = ((int)0X8d48),
        Rgb565 = ((int)0X8d62),
        Rgba32ui = ((int)0x8D70),
        Rgba16ui = ((int)0x8D76),
        Rgba8ui = ((int)0x8D7C),
        Rgba32i = ((int)0x8D82),
        Rgba16i = ((int)0x8D88),
        Rgba8i = ((int)0x8D8E),
        Rgb10A2ui = ((int)0x906F),
    }

    public enum RenderbufferParameterName : int
    {
        RenderbufferSamples = ((int)0x8CAB),
        RenderbufferWidth = ((int)0X8d42),
        RenderbufferHeight = ((int)0X8d43),
        RenderbufferInternalFormat = ((int)0X8d44),
        RenderbufferRedSize = ((int)0X8d50),
        RenderbufferGreenSize = ((int)0X8d51),
        RenderbufferBlueSize = ((int)0X8d52),
        RenderbufferAlphaSize = ((int)0X8d53),
        RenderbufferDepthSize = ((int)0X8d54),
        RenderbufferStencilSize = ((int)0X8d55),
    }

    public enum RenderbufferTarget : int
    {
        Renderbuffer = ((int)0X8d41),
    }

    public enum SamplerParameterName : int
    {
        TextureMagFilter = ((int)0X2800),
        TextureMinFilter = ((int)0X2801),
        TextureWrapS = ((int)0X2802),
        TextureWrapT = ((int)0X2803),
        TextureWrapR = ((int)0x8072),
        TextureMinLod = ((int)0x813A),
        TextureMaxLod = ((int)0x813B),
        TextureCompareMode = ((int)0x884C),
        TextureCompareFunc = ((int)0x884D),
    }

    public enum SeparateBlendFunctions : int
    {
        ConstantColor = ((int)0x8001),
        OneMinusConstantColor = ((int)0x8002),
        ConstantAlpha = ((int)0x8003),
        OneMinusConstantAlpha = ((int)0x8004),
        BlendColor = ((int)0x8005),
        BlendDstRgb = ((int)0x80C8),
        BlendSrcRgb = ((int)0x80C9),
        BlendDstAlpha = ((int)0x80CA),
        BlendSrcAlpha = ((int)0x80CB),
    }

    public enum ShaderBinary : int
    {
        ShaderBinaryFormats = ((int)0x8DF8),
        NumShaderBinaryFormats = ((int)0x8DF9),
    }

    public enum ShaderBinaryFormat : int
    {
    }

    public enum ShaderParameter : int
    {
        ShaderType = ((int)0X8b4f),
        DeleteStatus = ((int)0X8b80),
        CompileStatus = ((int)0X8b81),
        InfoLogLength = ((int)0X8b84),
        ShaderSourceLength = ((int)0X8b88),
    }

    public enum ShaderPrecision : int
    {
        LowFloat = ((int)0X8df0),
        MediumFloat = ((int)0X8df1),
        HighFloat = ((int)0X8df2),
        LowInt = ((int)0X8df3),
        MediumInt = ((int)0X8df4),
        HighInt = ((int)0X8df5),
    }

    public enum ShaderPrecisionSpecifiedTypes : int
    {
        LowFloat = ((int)0x8DF0),
        MediumFloat = ((int)0x8DF1),
        HighFloat = ((int)0x8DF2),
        LowInt = ((int)0x8DF3),
        MediumInt = ((int)0x8DF4),
        HighInt = ((int)0x8DF5),
    }

    public enum Shaders : int
    {
        MaxVertexAttribs = ((int)0x8869),
        MaxTextureImageUnits = ((int)0x8872),
        FragmentShader = ((int)0x8B30),
        VertexShader = ((int)0x8B31),
        MaxVertexTextureImageUnits = ((int)0x8B4C),
        MaxCombinedTextureImageUnits = ((int)0x8B4D),
        ShaderType = ((int)0x8B4F),
        DeleteStatus = ((int)0x8B80),
        LinkStatus = ((int)0x8B82),
        ValidateStatus = ((int)0x8B83),
        AttachedShaders = ((int)0x8B85),
        ActiveUniforms = ((int)0x8B86),
        ActiveUniformMaxLength = ((int)0x8B87),
        ActiveAttributes = ((int)0x8B89),
        ActiveAttributeMaxLength = ((int)0x8B8A),
        ShadingLanguageVersion = ((int)0x8B8C),
        CurrentProgram = ((int)0x8B8D),
        MaxVertexUniformVectors = ((int)0x8DFB),
        MaxVaryingVectors = ((int)0x8DFC),
        MaxFragmentUniformVectors = ((int)0x8DFD),
    }

    public enum ShaderSource : int
    {
        CompileStatus = ((int)0x8B81),
        InfoLogLength = ((int)0x8B84),
        ShaderSourceLength = ((int)0x8B88),
        ShaderCompiler = ((int)0x8DFA),
    }

    public enum ShaderType : int
    {
        FragmentShader = ((int)0X8b30),
        VertexShader = ((int)0X8b31),
    }

    public enum SizedInternalFormat : int
    {
        Rgb8 = ((int)0x8051),
        Rgba4 = ((int)0x8056),
        Rgb5A1 = ((int)0x8057),
        Rgba8 = ((int)0x8058),
        Rgb10A2 = ((int)0x8059),
        DepthComponent16 = ((int)0x81A5),
        DepthComponent24 = ((int)0x81A6),
        R8 = ((int)0x8229),
        Rg8 = ((int)0x822B),
        R16f = ((int)0x822D),
        R32f = ((int)0x822E),
        Rg16f = ((int)0x822F),
        Rg32f = ((int)0x8230),
        R8i = ((int)0x8231),
        R8ui = ((int)0x8232),
        R16i = ((int)0x8233),
        R16ui = ((int)0x8234),
        R32i = ((int)0x8235),
        R32ui = ((int)0x8236),
        Rg8i = ((int)0x8237),
        Rg8ui = ((int)0x8238),
        Rg16i = ((int)0x8239),
        Rg16ui = ((int)0x823A),
        Rg32i = ((int)0x823B),
        Rg32ui = ((int)0x823C),
        Rgba32f = ((int)0x8814),
        Rgb32f = ((int)0x8815),
        Rgba16f = ((int)0x881A),
        Rgb16f = ((int)0x881B),
        Depth24Stencil8 = ((int)0x88F0),
        R11fG11fB10f = ((int)0x8C3A),
        Rgb9E5 = ((int)0x8C3D),
        Srgb8 = ((int)0x8C41),
        Srgb8Alpha8 = ((int)0x8C43),
        DepthComponent32f = ((int)0x8CAC),
        Depth32fStencil8 = ((int)0x8CAD),
        Rgb565 = ((int)0x8D62),
        Rgba32ui = ((int)0x8D70),
        Rgb32ui = ((int)0x8D71),
        Rgba16ui = ((int)0x8D76),
        Rgb16ui = ((int)0x8D77),
        Rgba8ui = ((int)0x8D7C),
        Rgb8ui = ((int)0x8D7D),
        Rgba32i = ((int)0x8D82),
        Rgb32i = ((int)0x8D83),
        Rgba16i = ((int)0x8D88),
        Rgb16i = ((int)0x8D89),
        Rgba8i = ((int)0x8D8E),
        Rgb8i = ((int)0x8D8F),
        R8Snorm = ((int)0x8F94),
        Rg8Snorm = ((int)0x8F95),
        Rgb8Snorm = ((int)0x8F96),
        Rgba8Snorm = ((int)0x8F97),
        Rgb10A2ui = ((int)0x906F),
    }

    public enum StencilFunction : int
    {
        Never = ((int)0x0200),
        Less = ((int)0x0201),
        Equal = ((int)0x0202),
        Lequal = ((int)0x0203),
        Greater = ((int)0x0204),
        Notequal = ((int)0x0205),
        Gequal = ((int)0x0206),
        Always = ((int)0x0207),
    }

    public enum StencilOp : int
    {
        Zero = ((int)0X0000),
        Invert = ((int)0x150A),
        Keep = ((int)0x1E00),
        Replace = ((int)0x1E01),
        Incr = ((int)0x1E02),
        Decr = ((int)0x1E03),
        IncrWrap = ((int)0x8507),
        DecrWrap = ((int)0x8508),
    }

    public enum StringName : int
    {
        Vendor = ((int)0x1F00),
        Renderer = ((int)0x1F01),
        Version = ((int)0x1F02),
        Extensions = ((int)0x1F03),
        ShadingLanguageVersion = ((int)0X8b8c),
    }

    public enum StringNameIndexed : int
    {
        Extensions = ((int)0X1f03),
    }

    public enum SyncCondition : int
    {
        SyncGpuCommandsComplete = ((int)0x9117),
    }

    public enum SyncParameterName : int
    {
        ObjectType = ((int)0x9112),
        SyncCondition = ((int)0x9113),
        SyncStatus = ((int)0x9114),
        SyncFlags = ((int)0x9115),
    }

    public enum TextureComponentCount : int
    {
        Alpha = ((int)0X1906),
        Rgb = ((int)0X1907),
        Rgba = ((int)0X1908),
        Luminance = ((int)0X1909),
        LuminanceAlpha = ((int)0X190a),
        Rgb8 = ((int)0x8051),
        Rgba4 = ((int)0x8056),
        Rgb5A1 = ((int)0x8057),
        Rgba8 = ((int)0x8058),
        Rgb10A2 = ((int)0x8059),
        DepthComponent16 = ((int)0x81A5),
        DepthComponent24 = ((int)0x81A6),
        R8 = ((int)0x8229),
        Rg8 = ((int)0x822B),
        R16f = ((int)0x822D),
        R32f = ((int)0x822E),
        Rg16f = ((int)0x822F),
        Rg32f = ((int)0x8230),
        R8i = ((int)0x8231),
        R8ui = ((int)0x8232),
        R16i = ((int)0x8233),
        R16ui = ((int)0x8234),
        R32i = ((int)0x8235),
        R32ui = ((int)0x8236),
        Rg8i = ((int)0x8237),
        Rg8ui = ((int)0x8238),
        Rg16i = ((int)0x8239),
        Rg16ui = ((int)0x823A),
        Rg32i = ((int)0x823B),
        Rg32ui = ((int)0x823C),
        Rgba32f = ((int)0x8814),
        Rgb32f = ((int)0x8815),
        Rgba16f = ((int)0x881A),
        Rgb16f = ((int)0x881B),
        Depth24Stencil8 = ((int)0x88F0),
        R11fG11fB10f = ((int)0x8C3A),
        Rgb9E5 = ((int)0x8C3D),
        Srgb8 = ((int)0x8C41),
        Srgb8Alpha8 = ((int)0x8C43),
        DepthComponent32f = ((int)0x8CAC),
        Depth32fStencil8 = ((int)0x8CAD),
        Rgb565 = ((int)0x8D62),
        Rgba32ui = ((int)0x8D70),
        Rgb32ui = ((int)0x8D71),
        Rgba16ui = ((int)0x8D76),
        Rgb16ui = ((int)0x8D77),
        Rgba8ui = ((int)0x8D7C),
        Rgb8ui = ((int)0x8D7D),
        Rgba32i = ((int)0x8D82),
        Rgb32i = ((int)0x8D83),
        Rgba16i = ((int)0x8D88),
        Rgb16i = ((int)0x8D89),
        Rgba8i = ((int)0x8D8E),
        Rgb8i = ((int)0x8D8F),
        R8Snorm = ((int)0x8F94),
        Rg8Snorm = ((int)0x8F95),
        Rgb8Snorm = ((int)0x8F96),
        Rgba8Snorm = ((int)0x8F97),
        Rgb10A2ui = ((int)0x906F),
    }

    public enum TextureMagFilter : int
    {
        Nearest = ((int)0x2600),
        Linear = ((int)0x2601),
    }

    public enum TextureMinFilter : int
    {
        Nearest = ((int)0X2600),
        Linear = ((int)0X2601),
        NearestMipmapNearest = ((int)0x2700),
        LinearMipmapNearest = ((int)0x2701),
        NearestMipmapLinear = ((int)0x2702),
        LinearMipmapLinear = ((int)0x2703),
    }

    public enum TextureParameterName : int
    {
        TextureMagFilter = ((int)0x2800),
        TextureMinFilter = ((int)0x2801),
        TextureWrapS = ((int)0x2802),
        TextureWrapT = ((int)0x2803),
        TextureWrapR = ((int)0x8072),
        TextureMinLod = ((int)0x813A),
        TextureMaxLod = ((int)0x813B),
        TextureBaseLevel = ((int)0x813C),
        TextureMaxLevel = ((int)0x813D),
        TextureCompareMode = ((int)0x884C),
        TextureCompareFunc = ((int)0x884D),
        TextureSwizzleR = ((int)0x8E42),
        TextureSwizzleG = ((int)0x8E43),
        TextureSwizzleB = ((int)0x8E44),
        TextureSwizzleA = ((int)0x8E45),
    }

    public enum TextureTarget : int
    {
        Texture2D = ((int)0X0de1),
        Texture = ((int)0x1702),
        Texture3D = ((int)0x806F),
        TextureCubeMap = ((int)0x8513),
        TextureBindingCubeMap = ((int)0x8514),
        TextureCubeMapPositiveX = ((int)0x8515),
        TextureCubeMapNegativeX = ((int)0x8516),
        TextureCubeMapPositiveY = ((int)0x8517),
        TextureCubeMapNegativeY = ((int)0x8518),
        TextureCubeMapPositiveZ = ((int)0x8519),
        TextureCubeMapNegativeZ = ((int)0x851A),
        MaxCubeMapTextureSize = ((int)0x851C),
        Texture2DArray = ((int)0x8C1A),
    }

    public enum TextureTarget2D : int
    {
        Texture2D = ((int)0X0de1),
        TextureCubeMap = ((int)0X8513),
    }

    public enum TextureTarget3D : int
    {
        Texture3D = ((int)0x806F),
        Texture2DArray = ((int)0x8C1A),
    }

    public enum TextureUnit : int
    {
        Texture0 = ((int)0x84C0),
        Texture1 = ((int)0x84C1),
        Texture2 = ((int)0x84C2),
        Texture3 = ((int)0x84C3),
        Texture4 = ((int)0x84C4),
        Texture5 = ((int)0x84C5),
        Texture6 = ((int)0x84C6),
        Texture7 = ((int)0x84C7),
        Texture8 = ((int)0x84C8),
        Texture9 = ((int)0x84C9),
        Texture10 = ((int)0x84CA),
        Texture11 = ((int)0x84CB),
        Texture12 = ((int)0x84CC),
        Texture13 = ((int)0x84CD),
        Texture14 = ((int)0x84CE),
        Texture15 = ((int)0x84CF),
        Texture16 = ((int)0x84D0),
        Texture17 = ((int)0x84D1),
        Texture18 = ((int)0x84D2),
        Texture19 = ((int)0x84D3),
        Texture20 = ((int)0x84D4),
        Texture21 = ((int)0x84D5),
        Texture22 = ((int)0x84D6),
        Texture23 = ((int)0x84D7),
        Texture24 = ((int)0x84D8),
        Texture25 = ((int)0x84D9),
        Texture26 = ((int)0x84DA),
        Texture27 = ((int)0x84DB),
        Texture28 = ((int)0x84DC),
        Texture29 = ((int)0x84DD),
        Texture30 = ((int)0x84DE),
        Texture31 = ((int)0x84DF),
        ActiveTexture = ((int)0x84E0),
    }

    public enum TextureWrapMode : int
    {
        Repeat = ((int)0x2901),
        ClampToEdge = ((int)0x812F),
        MirroredRepeat = ((int)0x8370),
    }

    public enum Token : int
    {
        SyncFlushCommandsBit = ((int)0x00000001),
        MapReadBit = ((int)0x0001),
        MapWriteBit = ((int)0x0002),
        MapInvalidateRangeBit = ((int)0x0004),
        MapInvalidateBufferBit = ((int)0x0008),
        MapFlushExplicitBit = ((int)0x0010),
        MapUnsynchronizedBit = ((int)0x0020),
        ReadBuffer = ((int)0x0C02),
        UnpackRowLength = ((int)0x0CF2),
        UnpackSkipRows = ((int)0x0CF3),
        UnpackSkipPixels = ((int)0x0CF4),
        PackRowLength = ((int)0x0D02),
        PackSkipRows = ((int)0x0D03),
        PackSkipPixels = ((int)0x0D04),
        HalfFloat = ((int)0x140B),
        Color = ((int)0x1800),
        Depth = ((int)0x1801),
        Stencil = ((int)0x1802),
        Red = ((int)0x1903),
        Green = ((int)0x1904),
        Blue = ((int)0x1905),
        Min = ((int)0x8007),
        Max = ((int)0x8008),
        Rgb8 = ((int)0x8051),
        Rgba8 = ((int)0x8058),
        Rgb10A2 = ((int)0x8059),
        TextureBinding3D = ((int)0x806A),
        UnpackSkipImages = ((int)0x806D),
        UnpackImageHeight = ((int)0x806E),
        Texture3D = ((int)0x806F),
        TextureWrapR = ((int)0x8072),
        Max3DTextureSize = ((int)0x8073),
        MaxElementsVertices = ((int)0x80E8),
        MaxElementsIndices = ((int)0x80E9),
        TextureMinLod = ((int)0x813A),
        TextureMaxLod = ((int)0x813B),
        TextureBaseLevel = ((int)0x813C),
        TextureMaxLevel = ((int)0x813D),
        DepthComponent24 = ((int)0x81A6),
        FramebufferAttachmentColorEncoding = ((int)0x8210),
        FramebufferAttachmentComponentType = ((int)0x8211),
        FramebufferAttachmentRedSize = ((int)0x8212),
        FramebufferAttachmentGreenSize = ((int)0x8213),
        FramebufferAttachmentBlueSize = ((int)0x8214),
        FramebufferAttachmentAlphaSize = ((int)0x8215),
        FramebufferAttachmentDepthSize = ((int)0x8216),
        FramebufferAttachmentStencilSize = ((int)0x8217),
        FramebufferDefault = ((int)0x8218),
        FramebufferUndefined = ((int)0x8219),
        DepthStencilAttachment = ((int)0x821A),
        MajorVersion = ((int)0x821B),
        MinorVersion = ((int)0x821C),
        NumExtensions = ((int)0x821D),
        Rg = ((int)0x8227),
        RgInteger = ((int)0x8228),
        R8 = ((int)0x8229),
        Rg8 = ((int)0x822B),
        R16f = ((int)0x822D),
        R32f = ((int)0x822E),
        Rg16f = ((int)0x822F),
        Rg32f = ((int)0x8230),
        R8i = ((int)0x8231),
        R8ui = ((int)0x8232),
        R16i = ((int)0x8233),
        R16ui = ((int)0x8234),
        R32i = ((int)0x8235),
        R32ui = ((int)0x8236),
        Rg8i = ((int)0x8237),
        Rg8ui = ((int)0x8238),
        Rg16i = ((int)0x8239),
        Rg16ui = ((int)0x823A),
        Rg32i = ((int)0x823B),
        Rg32ui = ((int)0x823C),
        ProgramBinaryRetrievableHint = ((int)0x8257),
        TextureImmutableLevels = ((int)0x82DF),
        UnsignedInt2101010Rev = ((int)0x8368),
        DepthStencil = ((int)0x84F9),
        UnsignedInt248 = ((int)0x84FA),
        MaxTextureLodBias = ((int)0x84FD),
        VertexArrayBinding = ((int)0x85B5),
        ProgramBinaryLength = ((int)0x8741),
        NumProgramBinaryFormats = ((int)0x87FE),
        ProgramBinaryFormats = ((int)0x87FF),
        Rgba32f = ((int)0x8814),
        Rgb32f = ((int)0x8815),
        Rgba16f = ((int)0x881A),
        Rgb16f = ((int)0x881B),
        MaxDrawBuffers = ((int)0x8824),
        DrawBuffer0 = ((int)0x8825),
        DrawBuffer1 = ((int)0x8826),
        DrawBuffer2 = ((int)0x8827),
        DrawBuffer3 = ((int)0x8828),
        DrawBuffer4 = ((int)0x8829),
        DrawBuffer5 = ((int)0x882A),
        DrawBuffer6 = ((int)0x882B),
        DrawBuffer7 = ((int)0x882C),
        DrawBuffer8 = ((int)0x882D),
        DrawBuffer9 = ((int)0x882E),
        DrawBuffer10 = ((int)0x882F),
        DrawBuffer11 = ((int)0x8830),
        DrawBuffer12 = ((int)0x8831),
        DrawBuffer13 = ((int)0x8832),
        DrawBuffer14 = ((int)0x8833),
        DrawBuffer15 = ((int)0x8834),
        TextureCompareMode = ((int)0x884C),
        TextureCompareFunc = ((int)0x884D),
        CompareRefToTexture = ((int)0x884E),
        CurrentQuery = ((int)0x8865),
        QueryResult = ((int)0x8866),
        QueryResultAvailable = ((int)0x8867),
        BufferMapped = ((int)0x88BC),
        BufferMapPointer = ((int)0x88BD),
        StreamRead = ((int)0x88E1),
        StreamCopy = ((int)0x88E2),
        StaticRead = ((int)0x88E5),
        StaticCopy = ((int)0x88E6),
        DynamicRead = ((int)0x88E9),
        DynamicCopy = ((int)0x88EA),
        PixelPackBuffer = ((int)0x88EB),
        PixelUnpackBuffer = ((int)0x88EC),
        PixelPackBufferBinding = ((int)0x88ED),
        PixelUnpackBufferBinding = ((int)0x88EF),
        Depth24Stencil8 = ((int)0x88F0),
        VertexAttribArrayInteger = ((int)0x88FD),
        VertexAttribArrayDivisor = ((int)0x88FE),
        MaxArrayTextureLayers = ((int)0x88FF),
        MinProgramTexelOffset = ((int)0x8904),
        MaxProgramTexelOffset = ((int)0x8905),
        SamplerBinding = ((int)0x8919),
        UniformBuffer = ((int)0x8A11),
        UniformBufferBinding = ((int)0x8A28),
        UniformBufferStart = ((int)0x8A29),
        UniformBufferSize = ((int)0x8A2A),
        MaxVertexUniformBlocks = ((int)0x8A2B),
        MaxFragmentUniformBlocks = ((int)0x8A2D),
        MaxCombinedUniformBlocks = ((int)0x8A2E),
        MaxUniformBufferBindings = ((int)0x8A2F),
        MaxUniformBlockSize = ((int)0x8A30),
        MaxCombinedVertexUniformComponents = ((int)0x8A31),
        MaxCombinedFragmentUniformComponents = ((int)0x8A33),
        UniformBufferOffsetAlignment = ((int)0x8A34),
        ActiveUniformBlockMaxNameLength = ((int)0x8A35),
        ActiveUniformBlocks = ((int)0x8A36),
        UniformType = ((int)0x8A37),
        UniformSize = ((int)0x8A38),
        UniformNameLength = ((int)0x8A39),
        UniformBlockIndex = ((int)0x8A3A),
        UniformOffset = ((int)0x8A3B),
        UniformArrayStride = ((int)0x8A3C),
        UniformMatrixStride = ((int)0x8A3D),
        UniformIsRowMajor = ((int)0x8A3E),
        UniformBlockBinding = ((int)0x8A3F),
        UniformBlockDataSize = ((int)0x8A40),
        UniformBlockNameLength = ((int)0x8A41),
        UniformBlockActiveUniforms = ((int)0x8A42),
        UniformBlockActiveUniformIndices = ((int)0x8A43),
        UniformBlockReferencedByVertexShader = ((int)0x8A44),
        UniformBlockReferencedByFragmentShader = ((int)0x8A46),
        MaxFragmentUniformComponents = ((int)0x8B49),
        MaxVertexUniformComponents = ((int)0x8B4A),
        MaxVaryingComponents = ((int)0x8B4B),
        Sampler3D = ((int)0x8B5F),
        Sampler2DShadow = ((int)0x8B62),
        FloatMat2x3 = ((int)0x8B65),
        FloatMat2x4 = ((int)0x8B66),
        FloatMat3x2 = ((int)0x8B67),
        FloatMat3x4 = ((int)0x8B68),
        FloatMat4x2 = ((int)0x8B69),
        FloatMat4x3 = ((int)0x8B6A),
        FragmentShaderDerivativeHint = ((int)0x8B8B),
        UnsignedNormalized = ((int)0x8C17),
        Texture2DArray = ((int)0x8C1A),
        TextureBinding2DArray = ((int)0x8C1D),
        AnySamplesPassed = ((int)0x8C2F),
        R11fG11fB10f = ((int)0x8C3A),
        UnsignedInt10F11F11FRev = ((int)0x8C3B),
        Rgb9E5 = ((int)0x8C3D),
        UnsignedInt5999Rev = ((int)0x8C3E),
        Srgb = ((int)0x8C40),
        Srgb8 = ((int)0x8C41),
        Srgb8Alpha8 = ((int)0x8C43),
        TransformFeedbackVaryingMaxLength = ((int)0x8C76),
        TransformFeedbackBufferMode = ((int)0x8C7F),
        MaxTransformFeedbackSeparateComponents = ((int)0x8C80),
        TransformFeedbackVaryings = ((int)0x8C83),
        TransformFeedbackBufferStart = ((int)0x8C84),
        TransformFeedbackBufferSize = ((int)0x8C85),
        TransformFeedbackPrimitivesWritten = ((int)0x8C88),
        RasterizerDiscard = ((int)0x8C89),
        MaxTransformFeedbackInterleavedComponents = ((int)0x8C8A),
        MaxTransformFeedbackSeparateAttribs = ((int)0x8C8B),
        InterleavedAttribs = ((int)0x8C8C),
        SeparateAttribs = ((int)0x8C8D),
        TransformFeedbackBuffer = ((int)0x8C8E),
        TransformFeedbackBufferBinding = ((int)0x8C8F),
        DrawFramebufferBinding = ((int)0x8CA6),
        FramebufferBinding = ((int)0x8CA6),
        ReadFramebuffer = ((int)0x8CA8),
        DrawFramebuffer = ((int)0x8CA9),
        ReadFramebufferBinding = ((int)0x8CAA),
        RenderbufferSamples = ((int)0x8CAB),
        DepthComponent32f = ((int)0x8CAC),
        Depth32fStencil8 = ((int)0x8CAD),
        FramebufferAttachmentTextureLayer = ((int)0x8CD4),
        MaxColorAttachments = ((int)0x8CDF),
        ColorAttachment1 = ((int)0x8CE1),
        ColorAttachment2 = ((int)0x8CE2),
        ColorAttachment3 = ((int)0x8CE3),
        ColorAttachment4 = ((int)0x8CE4),
        ColorAttachment5 = ((int)0x8CE5),
        ColorAttachment6 = ((int)0x8CE6),
        ColorAttachment7 = ((int)0x8CE7),
        ColorAttachment8 = ((int)0x8CE8),
        ColorAttachment9 = ((int)0x8CE9),
        ColorAttachment10 = ((int)0x8CEA),
        ColorAttachment11 = ((int)0x8CEB),
        ColorAttachment12 = ((int)0x8CEC),
        ColorAttachment13 = ((int)0x8CED),
        ColorAttachment14 = ((int)0x8CEE),
        ColorAttachment15 = ((int)0x8CEF),
        FramebufferIncompleteMultisample = ((int)0x8D56),
        MaxSamples = ((int)0x8D57),
        PrimitiveRestartFixedIndex = ((int)0x8D69),
        AnySamplesPassedConservative = ((int)0x8D6A),
        MaxElementIndex = ((int)0x8D6B),
        Rgba32ui = ((int)0x8D70),
        Rgb32ui = ((int)0x8D71),
        Rgba16ui = ((int)0x8D76),
        Rgb16ui = ((int)0x8D77),
        Rgba8ui = ((int)0x8D7C),
        Rgb8ui = ((int)0x8D7D),
        Rgba32i = ((int)0x8D82),
        Rgb32i = ((int)0x8D83),
        Rgba16i = ((int)0x8D88),
        Rgb16i = ((int)0x8D89),
        Rgba8i = ((int)0x8D8E),
        Rgb8i = ((int)0x8D8F),
        RedInteger = ((int)0x8D94),
        RgbInteger = ((int)0x8D98),
        RgbaInteger = ((int)0x8D99),
        Int2101010Rev = ((int)0x8D9F),
        Float32UnsignedInt248Rev = ((int)0x8DAD),
        Sampler2DArray = ((int)0x8DC1),
        Sampler2DArrayShadow = ((int)0x8DC4),
        SamplerCubeShadow = ((int)0x8DC5),
        UnsignedIntVec2 = ((int)0x8DC6),
        UnsignedIntVec3 = ((int)0x8DC7),
        UnsignedIntVec4 = ((int)0x8DC8),
        IntSampler2D = ((int)0x8DCA),
        IntSampler3D = ((int)0x8DCB),
        IntSamplerCube = ((int)0x8DCC),
        IntSampler2DArray = ((int)0x8DCF),
        UnsignedIntSampler2D = ((int)0x8DD2),
        UnsignedIntSampler3D = ((int)0x8DD3),
        UnsignedIntSamplerCube = ((int)0x8DD4),
        UnsignedIntSampler2DArray = ((int)0x8DD7),
        TransformFeedback = ((int)0x8E22),
        TransformFeedbackPaused = ((int)0x8E23),
        TransformFeedbackActive = ((int)0x8E24),
        TransformFeedbackBinding = ((int)0x8E25),
        TextureSwizzleR = ((int)0x8E42),
        TextureSwizzleG = ((int)0x8E43),
        TextureSwizzleB = ((int)0x8E44),
        TextureSwizzleA = ((int)0x8E45),
        CopyReadBuffer = ((int)0x8F36),
        CopyReadBufferBinding = ((int)0x8F36),
        CopyWriteBuffer = ((int)0x8F37),
        CopyWriteBufferBinding = ((int)0x8F37),
        R8Snorm = ((int)0x8F94),
        Rg8Snorm = ((int)0x8F95),
        Rgb8Snorm = ((int)0x8F96),
        Rgba8Snorm = ((int)0x8F97),
        SignedNormalized = ((int)0x8F9C),
        Rgb10A2ui = ((int)0x906F),
        MaxServerWaitTimeout = ((int)0x9111),
        ObjectType = ((int)0x9112),
        SyncCondition = ((int)0x9113),
        SyncStatus = ((int)0x9114),
        SyncFlags = ((int)0x9115),
        SyncFence = ((int)0x9116),
        SyncGpuCommandsComplete = ((int)0x9117),
        Unsignaled = ((int)0x9118),
        Signaled = ((int)0x9119),
        AlreadySignaled = ((int)0x911A),
        TimeoutExpired = ((int)0x911B),
        ConditionSatisfied = ((int)0x911C),
        WaitFailed = ((int)0x911D),
        BufferAccessFlags = ((int)0x911F),
        BufferMapLength = ((int)0x9120),
        BufferMapOffset = ((int)0x9121),
        MaxVertexOutputComponents = ((int)0x9122),
        MaxFragmentInputComponents = ((int)0x9125),
        TextureImmutableFormat = ((int)0x912F),
        CompressedR11Eac = ((int)0x9270),
        CompressedSignedR11Eac = ((int)0x9271),
        CompressedRg11Eac = ((int)0x9272),
        CompressedSignedRg11Eac = ((int)0x9273),
        CompressedRgb8Etc2 = ((int)0x9274),
        CompressedSrgb8Etc2 = ((int)0x9275),
        CompressedRgb8PunchthroughAlpha1Etc2 = ((int)0x9276),
        CompressedSrgb8PunchthroughAlpha1Etc2 = ((int)0x9277),
        CompressedRgba8Etc2Eac = ((int)0x9278),
        CompressedSrgb8Alpha8Etc2Eac = ((int)0x9279),
        NumSampleCounts = ((int)0x9380),
        InvalidIndex = unchecked((int)0xFFFFFFFF),
        TimeoutIgnored = unchecked((int)0xFFFFFFFFFFFFFFFF),
    }

    public enum TransformFeedbackMode : int
    {
        InterleavedAttribs = ((int)0x8C8C),
        SeparateAttribs = ((int)0x8C8D),
    }

    public enum TransformFeedbackPrimitiveType : int
    {
        Points = ((int)0X0000),
        Lines = ((int)0X0001),
        Triangles = ((int)0X0004),
    }

    public enum TransformFeedbackTarget : int
    {
        TransformFeedback = ((int)0x8E22),
    }

    public enum TransformFeedbackType : int
    {
        Int = ((int)0x1404),
        UnsignedInt = ((int)0x1405),
        Float = ((int)0X1406),
        FloatVec2 = ((int)0X8b50),
        FloatVec3 = ((int)0X8b51),
        FloatVec4 = ((int)0X8b52),
        IntVec2 = ((int)0x8B53),
        IntVec3 = ((int)0x8B54),
        IntVec4 = ((int)0x8B55),
        FloatMat2 = ((int)0X8b5a),
        FloatMat3 = ((int)0X8b5b),
        FloatMat4 = ((int)0X8b5c),
        FloatMat2x3 = ((int)0x8B65),
        FloatMat2x4 = ((int)0x8B66),
        FloatMat3x2 = ((int)0x8B67),
        FloatMat3x4 = ((int)0x8B68),
        FloatMat4x2 = ((int)0x8B69),
        FloatMat4x3 = ((int)0x8B6A),
        UnsignedIntVec2 = ((int)0x8DC6),
        UnsignedIntVec3 = ((int)0x8DC7),
        UnsignedIntVec4 = ((int)0x8DC8),
    }

    public enum UniformTypes : int
    {
        FloatVec2 = ((int)0x8B50),
        FloatVec3 = ((int)0x8B51),
        FloatVec4 = ((int)0x8B52),
        IntVec2 = ((int)0x8B53),
        IntVec3 = ((int)0x8B54),
        IntVec4 = ((int)0x8B55),
        Bool = ((int)0x8B56),
        BoolVec2 = ((int)0x8B57),
        BoolVec3 = ((int)0x8B58),
        BoolVec4 = ((int)0x8B59),
        FloatMat2 = ((int)0x8B5A),
        FloatMat3 = ((int)0x8B5B),
        FloatMat4 = ((int)0x8B5C),
        Sampler2D = ((int)0x8B5E),
        SamplerCube = ((int)0x8B60),
    }

    public enum Unknown : int
    {
        ImgTextureFormatBgra8888 = ((int)0X0001),
    }

    public enum VertexArrays : int
    {
        VertexAttribArrayEnabled = ((int)0x8622),
        VertexAttribArraySize = ((int)0x8623),
        VertexAttribArrayStride = ((int)0x8624),
        VertexAttribArrayType = ((int)0x8625),
        VertexAttribArrayPointer = ((int)0x8645),
        VertexAttribArrayNormalized = ((int)0x886A),
        VertexAttribArrayBufferBinding = ((int)0x889F),
    }

    public enum VertexAttribIntegerType : int
    {
        Byte = ((int)0X1400),
        UnsignedByte = ((int)0X1401),
        Short = ((int)0X1402),
        UnsignedShort = ((int)0X1403),
        Int = ((int)0x1404),
        UnsignedInt = ((int)0X1405),
    }

    public enum VertexAttribParameter : int
    {
        VertexAttribArrayEnabled = ((int)0X8622),
        VertexAttribArraySize = ((int)0X8623),
        VertexAttribArrayStride = ((int)0X8624),
        VertexAttribArrayType = ((int)0X8625),
        CurrentVertexAttrib = ((int)0X8626),
        VertexAttribArrayNormalized = ((int)0X886a),
        VertexAttribArrayBufferBinding = ((int)0X889f),
        VertexAttribArrayInteger = ((int)0x88FD),
        VertexAttribArrayDivisor = ((int)0x88FE),
    }

    public enum VertexAttribPointerParameter : int
    {
        VertexAttribArrayPointer = ((int)0X8645),
    }

    public enum VertexAttribPointerType : int
    {
        Byte = ((int)0X1400),
        UnsignedByte = ((int)0X1401),
        Short = ((int)0X1402),
        UnsignedShort = ((int)0X1403),
        Int = ((int)0x1404),
        UnsignedInt = ((int)0X1405),
        Float = ((int)0X1406),
        HalfFloat = ((int)0x140B),
        Fixed = ((int)0X140c),
        UnsignedInt2101010Rev = ((int)0x8368),
        Int2101010Rev = ((int)0x8D9F),
    }

    public enum WaitSyncFlags : int
    {
        None = ((int)0),
    }

    public enum WaitSyncStatus : int
    {
        AlreadySignaled = ((int)0x911A),
        TimeoutExpired = ((int)0x911B),
        ConditionSatisfied = ((int)0x911C),
        WaitFailed = ((int)0x911D),
    }

}
