#region License
//
// The Open Toolkit Library License
//
// Copyright (c) 2006 - 2009 the Open Toolkit library.
// Copyright 2013 Xamarin Inc
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights to 
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//
#endregion

namespace OpenTK.Graphics.ES11
{
    using System;
    using System.Text;
    using System.Runtime.InteropServices;
    #pragma warning disable 3019
    #pragma warning disable 1591
    #pragma warning disable 1572
    #pragma warning disable 1573

    partial class GL
    {
        public static partial class Ext
        {
            [System.CLSCompliant(false)]
            [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glGetObjectLabelEXT")]
            [Obsolete ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.")]
            public static 
            unsafe void GetObjectLabel(OpenTK.Graphics.ES11.All type, Int32 @object, Int32 bufSize, Int32* length, String label)
            {
                throw new NotSupportedException ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.");
            }

            [System.CLSCompliant(false)]
            [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glGetObjectLabelEXT")]
            [Obsolete ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.")]
            public static 
            void GetObjectLabel(OpenTK.Graphics.ES11.All type, UInt32 @object, Int32 bufSize, Int32[] length, String label)
            {
                throw new NotSupportedException ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.");
            }

            [System.CLSCompliant(false)]
            [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glGetObjectLabelEXT")]
            [Obsolete ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.")]
            public static 
            void GetObjectLabel(OpenTK.Graphics.ES11.All type, UInt32 @object, Int32 bufSize, ref Int32 length, String label)
            {
                throw new NotSupportedException ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.");
            }

            [System.CLSCompliant(false)]
            [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glGetObjectLabelEXT")]
            [Obsolete ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.")]
            public static 
            unsafe void GetObjectLabel(OpenTK.Graphics.ES11.All type, UInt32 @object, Int32 bufSize, Int32* length, String label)
            {
                throw new NotSupportedException ("Use the overload with strongly typed enumerations and StringBuilder final parameter. This overload is not supported.");
            }
        }

        [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glClear")]
        [Obsolete ("Use the overload with strongly typed enumerations")]
        public static 
        void Clear(Int32 mask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.Clear((ClearBufferMask)mask);
            #if DEBUG
            }
            #endif
        }
    
        [System.CLSCompliant(false)]
        [AutoGenerated(Category = "1.1", Version = "1.1", EntryPoint = "glClear")]
        [Obsolete ("Use the overload with strongly typed enumerations")]
        public static 
        void Clear(UInt32 mask)
        {
            #if DEBUG
            using (new ErrorHelper(GraphicsContext.CurrentContext))
            {
            #endif
            Core.Clear((ClearBufferMask)mask);
            #if DEBUG
            }
            #endif
        }
    }

    [Obsolete]
    public enum OesdrawTexture : int
    {
        TextureCropRectOes = ((int)0x8B9D),
    }

    [Obsolete]
    public enum OesmatrixGet : int
    {
        ModelviewMatrixFloatAsIntBitsOes = ((int)0x898D),
        ProjectionMatrixFloatAsIntBitsOes = ((int)0x898E),
        TextureMatrixFloatAsIntBitsOes = ((int)0x898F),
    }

    [Obsolete]
    public enum OesmatrixPalette : int
    {
        MaxVertexUnitsOes = ((int)0x86A4),
        WeightArrayTypeOes = ((int)0x86A9),
        WeightArrayStrideOes = ((int)0x86AA),
        WeightArraySizeOes = ((int)0x86AB),
        WeightArrayPointerOes = ((int)0x86AC),
        WeightArrayOes = ((int)0x86AD),
        MatrixPaletteOes = ((int)0x8840),
        MaxPaletteMatricesOes = ((int)0x8842),
        CurrentPaletteMatrixOes = ((int)0x8843),
        MatrixIndexArrayOes = ((int)0x8844),
        MatrixIndexArraySizeOes = ((int)0x8846),
        MatrixIndexArrayTypeOes = ((int)0x8847),
        MatrixIndexArrayStrideOes = ((int)0x8848),
        MatrixIndexArrayPointerOes = ((int)0x8849),
        WeightArrayBufferBindingOes = ((int)0x889E),
        MatrixIndexArrayBufferBindingOes = ((int)0x8B9E),
    }

    [Obsolete]
    public enum OespointSizeArray : int
    {
        PointSizeArrayTypeOes = ((int)0x898A),
        PointSizeArrayStrideOes = ((int)0x898B),
        PointSizeArrayPointerOes = ((int)0x898C),
        PointSizeArrayOes = ((int)0x8B9C),
        PointSizeArrayBufferBindingOes = ((int)0x8B9F),
    }

    [Obsolete]
    public enum OespointSprite : int
    {
        PointSpriteOes = ((int)0x8861),
        CoordReplaceOes = ((int)0x8862),
    }

    [Obsolete]
    public enum OpenGlescoreVersions : int
    {
        VersionEsCl10 = ((int)1),
        VersionEsCl11 = ((int)1),
        VersionEsCm10 = ((int)1),
        VersionEsCm11 = ((int)1),
    }
}
