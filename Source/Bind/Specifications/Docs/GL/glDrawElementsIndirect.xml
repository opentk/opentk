<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glDrawElementsIndirect">
    <info>
        <copyright>
            <year>2010-2013</year>
            <holder>Khronos Group.</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glDrawElementsIndirect</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glDrawElementsIndirect</refname>
        <refpurpose>render indexed primitives from array data, taking parameters from memory</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glDrawElementsIndirect</function></funcdef>
                <paramdef>GLenum <parameter>mode</parameter></paramdef>
                <paramdef>GLenum <parameter>type</parameter></paramdef>
                <paramdef>const void *<parameter>indirect</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>mode</parameter></term>
            <listitem>
                <para>
                    Specifies what kind of primitives to render.
                    Symbolic constants
                    <constant>GL_POINTS</constant>,
                    <constant>GL_LINE_STRIP</constant>,
                    <constant>GL_LINE_LOOP</constant>,
                    <constant>GL_LINES</constant>,
                    <constant>GL_LINE_STRIP_ADJACENCY</constant>,
                    <constant>GL_LINES_ADJACENCY</constant>,
                    <constant>GL_TRIANGLE_STRIP</constant>,
                    <constant>GL_TRIANGLE_FAN</constant>,
                    <constant>GL_TRIANGLES</constant>,
                    <constant>GL_TRIANGLE_STRIP_ADJACENCY</constant>,
                    <constant>GL_TRIANGLES_ADJACENCY</constant>, and
                    <constant>GL_PATCHES</constant>
                    are accepted.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>type</parameter></term>
            <listitem>
                <para>
                    Specifies the type of data in the buffer bound to the <constant>GL_ELEMENT_ARRAY_BUFFER</constant> binding.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>indirect</parameter></term>
            <listitem>
                <para>
                    Specifies the address of a structure containing the draw parameters.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glDrawElementsIndirect</function> specifies multiple indexed geometric primitives
            with very few subroutine calls. <function>glDrawElementsIndirect</function> behaves
            similarly to <citerefentry><refentrytitle>glDrawElementsInstancedBaseVertexBaseInstance</refentrytitle></citerefentry>,
            execpt that the parameters to <citerefentry><refentrytitle>glDrawElementsInstancedBaseVertexBaseInstance</refentrytitle></citerefentry>
            are stored in memory at the address given by <parameter>indirect</parameter>.
        </para>
        <para>
            The parameters addressed by <parameter>indirect</parameter> are packed into a structure
            that takes the form (in C):
            <programlisting>    typedef  struct {
        uint  count;
        uint  primCount;
        uint  firstIndex;
        uint  baseVertex;
        uint  baseInstance;
    } DrawElementsIndirectCommand;</programlisting>
        </para>
        <para>
            <function>glDrawElementsIndirect</function> is equivalent to:
        </para>
        <para>
<programlisting>    void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect) {
        const DrawElementsIndirectCommand *cmd  = (const DrawElementsIndirectCommand *)indirect;
        glDrawElementsInstancedBaseVertexBaseInstance(mode,
                                                      cmd-&gt;count,
                                                      type,
                                                      cmd-&gt;firstIndex + size-of-type,
                                                      cmd-&gt;primCount,
                                                      cmd-&gt;baseVertex,
                                                      cmd-&gt;baseInstance);
    }</programlisting>
        </para>
        <para>
            If a buffer is bound to the <constant>GL_DRAW_INDIRECT_BUFFER</constant> binding at the time
            of a call to <function>glDrawElementsIndirect</function>, <parameter>indirect</parameter>
            is interpreted as an offset, in basic machine units, into that buffer and the parameter
            data is read from the buffer rather than from client memory.
        </para>
        <para>
            Note that indices stored in client memory are not supported. If no buffer is bound to the
            <constant>GL_ELEMENT_ARRAY_BUFFER</constant> binding, an error will be generated.
        </para>
        <para>
            The results of the operation are undefined if the <code>reservedMustBeZero</code> member
            of the parameter structure is non-zero. However, no error is generated in this case.
        </para>
        <para>
            Vertex attributes that are modified by <function>glDrawElementsIndirect</function> have an
            unspecified value after <function>glDrawElementsIndirect</function> returns. Attributes that aren't
            modified remain well defined.
        </para>
    </refsect1>
    <refsect1 xml:id="notes"><title>Notes</title>
        <para>
            The <parameter>baseInstance</parameter> member of the <parameter>DrawElementsIndirectCommand</parameter>
            structure is defined only if the GL version is 4.2 or greater. For versions of the GL less than 4.2,
            this parameter is present but is reserved and should be set to zero. On earlier versions of the GL,
            behavior is undefined if it is non-zero.
        </para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>mode</parameter> is not an accepted value.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if no buffer is bound to the <constant>GL_ELEMENT_ARRAY_BUFFER</constant>
            binding, or if such a buffer's data store is currently mapped.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if a non-zero buffer object name is bound to an
            enabled array or to the <constant>GL_DRAW_INDIRECT_BUFFER</constant> binding and the buffer object's data store is currently mapped.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if a geometry shader is active and <parameter>mode</parameter>
            is incompatible with the input primitive type of the geometry shader in the currently installed program object.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <parameter>mode</parameter> is <constant>GL_PATCHES</constant>
            and no tessellation control shader is active.
        </para>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glDrawArrays</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawArraysInstanced</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawArraysIndirect</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawElements</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawRangeElements</refentrytitle></citerefentry>,
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2010-2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
