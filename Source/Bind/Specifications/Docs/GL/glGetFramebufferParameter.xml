<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetFramebufferParameter">
    <info>
        <copyright>
            <year>2013</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glGetFramebufferParameter</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetFramebufferParameter</refname>
        <refpurpose>retrieve a named parameter from a framebuffer</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetFramebufferParameteriv</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint * <parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    The target of the operation, which must be <constant>GL_READ_FRAMEBUFFER</constant>,
                    <constant>GL_DRAW_FRAMEBUFFER</constant> or <constant>GL_FRAMEBUFFER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>pname</parameter></term>
            <listitem>
                <para>
                    A token indicating the parameter to be retrieved.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>params</parameter></term>
            <listitem>
                <para>
                    The address of a variable to receive the value of the parameter named <parameter>pname</parameter>.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glGetFramebufferParameter</function> retrieves the current value of the parameter
            named <parameter>pname</parameter> from the framebuffer bound to <parameter>target</parameter>.
            <parameter>target</parameter> must be <constant>GL_READ_FRAMEBFUFFER</constant>,
            <constant>GL_DRAW_FRAMEBUFFER</constant> or <constant>GL_FRAMEBUFFER</constant>. The
            token <constant>GL_FRAMEBUFFER</constant> is treated as <constant>GL_DRAW_FRAMEBUFFER</constant>.
            A non-default framebuffer must be bound to <parameter>target</parameter>.
        </para>
        <para>
            <parameter>pname</parameter> specifies the parameter to be retrieved. The values retrieved from
            the framebuffer are written into the variable whose address is given by <parameter>params</parameter>.
            The following symbols are accepted in <parameter>pname</parameter>:
        </para>
        <variablelist>
            <varlistentry>
                <term><constant>GL_FRAMEBUFFER_DEFAULT_WIDTH</constant></term>
                <listitem>
                    <para>
                        The value of <constant>GL_FRAMEBUFFER_DEFAULT_WIDTH</constant> for the framebuffer is written to the
                        single integer variable whose address is given by <parameter>params</parameter>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_FRAMEBUFFER_DEFAULT_HEIGHT</constant></term>
                <listitem>
                    <para>
                        The value of <constant>GL_FRAMEBUFFER_DEFAULT_HEIGHT</constant> for the framebuffer is written to the
                        single integer variable whose address is given by <parameter>params</parameter>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_FRAMEBUFFER_DEFAULT_LAYERS</constant></term>
                <listitem>
                    <para>
                        The value of <constant>GL_FRAMEBUFFER_DEFAULT_LAYERS</constant> for the framebuffer is written to the
                        single integer variable whose address is given by <parameter>params</parameter>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_FRAMEBUFFER_DEFAULT_SAMPLES</constant></term>
                <listitem>
                    <para>
                        The value of <constant>GL_FRAMEBUFFER_DEFAULT_SAMPLES</constant> for the framebuffer is written to the
                        single integer variable whose address is given by <parameter>params</parameter>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS</constant></term>
                <listitem>
                    <para>
                        If the value of <constant>GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS</constant> for the framebuffer is <constant>GL_TRUE</constant>
                        then the single integer variable whose address is in <parameter>params</parameter> is set to one,
                        otherwise it is set to zero.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the accepted
            framebuffer targets.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>pname</parameter> is not one of the accepted
            parameter names.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if the default framebuffer is bound to <parameter>target</parameter>.
        </para>
        <para>
            <parameter>params</parameter> should be the address of a variable to which the client has write access otherwise
            undefined behavior, including process termination may occur.
        </para>
    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGetFramebufferParameteriv</refentrytitle></citerefentry>.
        </para>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glFramebufferParameteri</refentrytitle></citerefentry>.
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
