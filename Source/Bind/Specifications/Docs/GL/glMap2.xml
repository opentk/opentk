<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glMap2">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glMap2</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glMap2</refname>
        <refpurpose>define a two-dimensional evaluator</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glMap2f</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLfloat <parameter>u1</parameter></paramdef>
                <paramdef>GLfloat <parameter>u2</parameter></paramdef>
                <paramdef>GLint <parameter>ustride</parameter></paramdef>
                <paramdef>GLint <parameter>uorder</parameter></paramdef>
                <paramdef>GLfloat <parameter>v1</parameter></paramdef>
                <paramdef>GLfloat <parameter>v2</parameter></paramdef>
                <paramdef>GLint <parameter>vstride</parameter></paramdef>
                <paramdef>GLint <parameter>vorder</parameter></paramdef>
                <paramdef>const GLfloat * <parameter>points</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glMap2d</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLdouble <parameter>u1</parameter></paramdef>
                <paramdef>GLdouble <parameter>u2</parameter></paramdef>
                <paramdef>GLint <parameter>ustride</parameter></paramdef>
                <paramdef>GLint <parameter>uorder</parameter></paramdef>
                <paramdef>GLdouble <parameter>v1</parameter></paramdef>
                <paramdef>GLdouble <parameter>v2</parameter></paramdef>
                <paramdef>GLint <parameter>vstride</parameter></paramdef>
                <paramdef>GLint <parameter>vorder</parameter></paramdef>
                <paramdef>const GLdouble * <parameter>points</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    Specifies the kind of values that are generated by the evaluator.
                    Symbolic constants
                    <constant>GL_MAP2_VERTEX_3</constant>,
                    <constant>GL_MAP2_VERTEX_4</constant>,
                    <constant>GL_MAP2_INDEX</constant>,
                    <constant>GL_MAP2_COLOR_4</constant>,
                    <constant>GL_MAP2_NORMAL</constant>,
                    <constant>GL_MAP2_TEXTURE_COORD_1</constant>,
                    <constant>GL_MAP2_TEXTURE_COORD_2</constant>,
                    <constant>GL_MAP2_TEXTURE_COORD_3</constant>, and
                    <constant>GL_MAP2_TEXTURE_COORD_4</constant> are accepted.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>u1</parameter></term>
            <term><parameter>u2</parameter></term>
            <listitem>
                <para>
                    Specify a linear mapping of 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">u</mml:mi></mml:math></inlineequation>,
                    as presented to <citerefentry><refentrytitle>glEvalCoord2</refentrytitle></citerefentry>,
                    to 
                    <inlineequation><mml:math>
                        <!-- eqn: u hat:-->
                        <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    </mml:math></inlineequation>,
                    one of the two variables that are evaluated by the equations specified
                    by this command. Initially, <parameter>u1</parameter> is 0 and <parameter>u2</parameter> is 1.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>ustride</parameter></term>
            <listitem>
                <para>
                    Specifies the number of floats or doubles between
                    the beginning of control point
                    <inlineequation><mml:math>
                        <!-- eqn: R sub ij:-->
                        <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                        <mml:mi mathvariant="italic">ij</mml:mi>
                        </mml:msub>
                    </mml:math></inlineequation>
                    and the beginning of control point
                    <inlineequation><mml:math>
                        <!-- eqn: R sub { (i+1) j }:-->
                        <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mfenced open="(" close=")">
                                    <mml:mrow>
                                        <mml:mi mathvariant="italic">i</mml:mi>
                                        <mml:mo>+</mml:mo>
                                        <mml:mn>1</mml:mn>
                                    </mml:mrow>
                                </mml:mfenced>
                                <mml:mo>&it;</mml:mo>
                                <mml:mi mathvariant="italic">j</mml:mi>
                            </mml:mrow>
                        </mml:mfenced>
                        </mml:msub>
                    </mml:math></inlineequation>,
                    where 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">i</mml:mi></mml:math></inlineequation>
                    and 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">j</mml:mi></mml:math></inlineequation>
                    are the 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">u</mml:mi></mml:math></inlineequation>
                    and 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">v</mml:mi></mml:math></inlineequation>
                    control point indices, respectively.
                    This allows control points to be embedded in arbitrary data structures.
                    The only constraint is that the values for a particular control point
                    must occupy contiguous memory locations. The initial value of <parameter>ustride</parameter> is 0.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>uorder</parameter></term>
            <listitem>
                <para>
                    Specifies the dimension of the control point array in the 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">u</mml:mi></mml:math></inlineequation>
                    axis.
                    Must be positive. The initial value is 1.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>v1</parameter></term>
            <term><parameter>v2</parameter></term>
            <listitem>
                <para>
                    Specify a linear mapping of 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">v</mml:mi></mml:math></inlineequation>,
                    as presented to <citerefentry><refentrytitle>glEvalCoord2</refentrytitle></citerefentry>,
                    to 
                    <inlineequation><mml:math>
                        <!-- eqn: v hat:-->
                        <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    </mml:math></inlineequation>,
                    one of the two variables that are evaluated by the equations specified
                    by this command. Initially, <parameter>v1</parameter> is 0 and <parameter>v2</parameter> is 1.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>vstride</parameter></term>
            <listitem>
                <para>
                    Specifies the number of floats or doubles between
                    the beginning of control point
                    <inlineequation><mml:math>
                        <!-- eqn: R sub ij:-->
                        <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                        <mml:mi mathvariant="italic">ij</mml:mi>
                        </mml:msub>
                    </mml:math></inlineequation>
                    and the beginning of control point
                    <inlineequation><mml:math>
                        <!-- eqn: R sub { i (j+1) }:-->
                        <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">i</mml:mi>
                                <mml:mo>&af;</mml:mo>
                                <mml:mfenced open="(" close=")">
                                    <mml:mrow>
                                        <mml:mi mathvariant="italic">j</mml:mi>
                                        <mml:mo>+</mml:mo>
                                        <mml:mn>1</mml:mn>
                                    </mml:mrow>
                                </mml:mfenced>
                            </mml:mrow>
                        </mml:mfenced>
                        </mml:msub>
                    </mml:math></inlineequation>,
                    where 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">i</mml:mi></mml:math></inlineequation>
                    and 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">j</mml:mi></mml:math></inlineequation>
                    are the 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">u</mml:mi></mml:math></inlineequation>
                    and 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">v</mml:mi></mml:math></inlineequation>
                    control point indices, respectively.
                    This allows control points to be embedded in arbitrary data structures.
                    The only constraint is that the values for a particular control point
                    must occupy contiguous memory locations. The initial value of <parameter>vstride</parameter> is 0.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>vorder</parameter></term>
            <listitem>
                <para>
                    Specifies the dimension of the control point array in the 
                    <inlineequation><mml:math><mml:mi mathvariant="italic">v</mml:mi></mml:math></inlineequation>
                    axis.
                    Must be positive. The initial value is 1.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>points</parameter></term>
            <listitem>
                <para>
                    Specifies a pointer to the array of control points.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            Evaluators provide a way to use polynomial or rational polynomial mapping
            to produce vertices,
            normals,
            texture coordinates,
            and colors.
            The values produced by an evaluator are sent on to further stages
            of GL processing just as if they had been presented using
            <citerefentry><refentrytitle>glVertex</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glNormal</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry>, and
            <citerefentry><refentrytitle>glColor</refentrytitle></citerefentry> commands,
            except that the generated values do not update the current normal,
            texture coordinates,
            or color.
        </para>
        <para>
            All polynomial or rational polynomial splines of any degree
            (up to the maximum degree supported by the GL implementation)
            can be described using evaluators.
            These include almost all surfaces used in computer graphics,
            including B-spline surfaces,
            NURBS surfaces,
            Bezier surfaces, and so on.
        </para>
        <para>
            Evaluators define surfaces based on bivariate Bernstein polynomials.
            Define 
            <inlineequation><mml:math>
                <!-- eqn: p(u hat, v hat):-->
                <mml:mrow>
                    <mml:mi mathvariant="italic">p</mml:mi>
                    <mml:mo>&af;</mml:mo>
                    <mml:mfenced open="(" close=")">
                        <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    </mml:mfenced>
                </mml:mrow>
            </mml:math></inlineequation>
            as
        </para>
        <para>
            <informalequation><mml:math>
                <!-- eqn: p(u hat, v hat) =    sum from {i = 0} to {n}     { sum from {j = 0} to {m} { {B sub i} sup n ( u hat )   {B sub j} sup m ( v hat )   R sub ij } }:-->
                <mml:mrow>
                    <mml:mrow>
                        <mml:mi mathvariant="italic">p</mml:mi>
                        <mml:mo>&af;</mml:mo>
                        <mml:mfenced open="(" close=")">
                            <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                            <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        </mml:mfenced>
                    </mml:mrow>
                    <mml:mo>=</mml:mo>
                    <mml:mrow>
                        <mml:munderover>
                            <mml:mo>&Sigma;</mml:mo>
                            <mml:mrow>
                                <mml:mi mathvariant="italic">i</mml:mi>
                                <mml:mo>=</mml:mo>
                                <mml:mn>0</mml:mn>
                            </mml:mrow>
                            <mml:mi mathvariant="italic">n</mml:mi>
                        </mml:munderover>
                        <mml:mrow>
                            <mml:munderover>
                                <mml:mo>&Sigma;</mml:mo>
                                <mml:mrow>
                                    <mml:mi mathvariant="italic">j</mml:mi>
                                    <mml:mo>=</mml:mo>
                                    <mml:mn>0</mml:mn>
                                </mml:mrow>
                                <mml:mi mathvariant="italic">m</mml:mi>
                            </mml:munderover>
                            <mml:mrow>
                                <mml:mrow>
                                    <mml:msup><mml:mfenced open="" close="">
                                        <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                                        <mml:mi mathvariant="italic">i</mml:mi>
                                        </mml:msub>
                                    </mml:mfenced>
                                    <mml:mi mathvariant="italic">n</mml:mi>
                                    </mml:msup>
                                    <mml:mo>&af;</mml:mo>
                                    <mml:mfenced open="(" close=")">
                                        <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                                    </mml:mfenced>
                                </mml:mrow>
                                <mml:mo>&it;</mml:mo>
                                <mml:mrow>
                                    <mml:msup><mml:mfenced open="" close="">
                                        <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                                        <mml:mi mathvariant="italic">j</mml:mi>
                                        </mml:msub>
                                    </mml:mfenced>
                                    <mml:mi mathvariant="italic">m</mml:mi>
                                    </mml:msup>
                                    <mml:mo>&af;</mml:mo>
                                    <mml:mfenced open="(" close=")">
                                        <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                                    </mml:mfenced>
                                </mml:mrow>
                                <mml:mo>&it;</mml:mo>
                                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                                <mml:mi mathvariant="italic">ij</mml:mi>
                                </mml:msub>
                            </mml:mrow>
                        </mml:mrow>
                    </mml:mrow>
                </mml:mrow>
            </mml:math></informalequation>
        </para>
        <para>
        </para>
        <para>
            where 
            <inlineequation><mml:math>
                <!-- eqn: R sub ij:-->
                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                <mml:mi mathvariant="italic">ij</mml:mi>
                </mml:msub>
            </mml:math></inlineequation>
            is a control point,
            <inlineequation><mml:math>
                <!-- eqn: {B sub i} sup n ( u hat ):-->
                <mml:mrow>
                    <mml:msup><mml:mfenced open="" close="">
                        <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                        <mml:mi mathvariant="italic">i</mml:mi>
                        </mml:msub>
                    </mml:mfenced>
                    <mml:mi mathvariant="italic">n</mml:mi>
                    </mml:msup>
                    <mml:mo>&af;</mml:mo>
                    <mml:mfenced open="(" close=")">
                        <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    </mml:mfenced>
                </mml:mrow>
            </mml:math></inlineequation>
            is the 
            <inlineequation><mml:math><mml:mi mathvariant="italic">i</mml:mi></mml:math></inlineequation>th
            Bernstein polynomial of degree
            <inlineequation><mml:math><mml:mi mathvariant="italic">n</mml:mi></mml:math></inlineequation>
            (<parameter>uorder</parameter> = 
            <inlineequation><mml:math>
                <!-- eqn: n  +  1:-->
                <mml:mrow>
                    <mml:mi mathvariant="italic">n</mml:mi>
                    <mml:mo>+</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>)
        </para>
        <para>
            <informalequation><mml:math>
                <!-- eqn: {B sub i} sup n ( u hat )   =   left (     {cpile { n above i }} right) {u hat} sup i { ( 1 - u hat ) sup { n - i } }:-->
                <mml:mrow>
                    <mml:mrow>
                        <mml:msup><mml:mfenced open="" close="">
                            <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                            <mml:mi mathvariant="italic">i</mml:mi>
                            </mml:msub>
                        </mml:mfenced>
                        <mml:mi mathvariant="italic">n</mml:mi>
                        </mml:msup>
                        <mml:mo>&af;</mml:mo>
                        <mml:mfenced open="(" close=")">
                            <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        </mml:mfenced>
                    </mml:mrow>
                    <mml:mo>=</mml:mo>
                    <mml:mrow>
                        <mml:mfenced open="(" close=")">
                            <mml:mfenced open="" close="">
                                <mml:mtable>
                                    <mml:mtr><mml:mtd>
                                        <mml:mi mathvariant="italic">n</mml:mi>
                                    </mml:mtd></mml:mtr>
                                    <mml:mtr><mml:mtd>
                                        <mml:mi mathvariant="italic">i</mml:mi>
                                    </mml:mtd></mml:mtr>
                                </mml:mtable>
                            </mml:mfenced>
                        </mml:mfenced>
                        <mml:mo>&it;</mml:mo>
                        <mml:msup><mml:mfenced open="" close="">
                            <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        </mml:mfenced>
                        <mml:mi mathvariant="italic">i</mml:mi>
                        </mml:msup>
                        <mml:mo>&it;</mml:mo>
                        <mml:mfenced open="" close="">
                            <mml:msup><mml:mfenced open="(" close=")">
                                <mml:mrow>
                                    <mml:mn>1</mml:mn>
                                    <mml:mo>-</mml:mo>
                                    <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                                </mml:mrow>
                            </mml:mfenced>
                            <mml:mfenced open="" close="">
                                <mml:mrow>
                                    <mml:mi mathvariant="italic">n</mml:mi>
                                    <mml:mo>-</mml:mo>
                                    <mml:mi mathvariant="italic">i</mml:mi>
                                </mml:mrow>
                            </mml:mfenced>
                            </mml:msup>
                        </mml:mfenced>
                    </mml:mrow>
                </mml:mrow>
            </mml:math></informalequation>
        </para>
        <para>
            and 
            <inlineequation><mml:math>
                <!-- eqn: {B sub j} sup m ( v hat ):-->
                <mml:mrow>
                    <mml:msup><mml:mfenced open="" close="">
                        <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                        <mml:mi mathvariant="italic">j</mml:mi>
                        </mml:msub>
                    </mml:mfenced>
                    <mml:mi mathvariant="italic">m</mml:mi>
                    </mml:msup>
                    <mml:mo>&af;</mml:mo>
                    <mml:mfenced open="(" close=")">
                        <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    </mml:mfenced>
                </mml:mrow>
            </mml:math></inlineequation>
            is the 
            <inlineequation><mml:math><mml:mi mathvariant="italic">j</mml:mi></mml:math></inlineequation>th
            Bernstein polynomial of degree 
            <inlineequation><mml:math><mml:mi mathvariant="italic">m</mml:mi></mml:math></inlineequation>
            (<parameter>vorder</parameter> = 
            <inlineequation><mml:math>
                <!-- eqn: m  +  1:-->
                <mml:mrow>
                    <mml:mi mathvariant="italic">m</mml:mi>
                    <mml:mo>+</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>)
        </para>
        <para>
            <informalequation><mml:math>
                <!-- eqn: {B sub j} sup m ( v hat )   =   left (     {cpile { m above j }} right ) {v hat} sup j { ( 1 - v hat ) sup { m - j } }:-->
                <mml:mrow>
                    <mml:mrow>
                        <mml:msup><mml:mfenced open="" close="">
                            <mml:msub><mml:mi mathvariant="italic">B</mml:mi>
                            <mml:mi mathvariant="italic">j</mml:mi>
                            </mml:msub>
                        </mml:mfenced>
                        <mml:mi mathvariant="italic">m</mml:mi>
                        </mml:msup>
                        <mml:mo>&af;</mml:mo>
                        <mml:mfenced open="(" close=")">
                            <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        </mml:mfenced>
                    </mml:mrow>
                    <mml:mo>=</mml:mo>
                    <mml:mrow>
                        <mml:mfenced open="(" close=")">
                            <mml:mfenced open="" close="">
                                <mml:mtable>
                                    <mml:mtr><mml:mtd>
                                        <mml:mi mathvariant="italic">m</mml:mi>
                                    </mml:mtd></mml:mtr>
                                    <mml:mtr><mml:mtd>
                                        <mml:mi mathvariant="italic">j</mml:mi>
                                    </mml:mtd></mml:mtr>
                                </mml:mtable>
                            </mml:mfenced>
                        </mml:mfenced>
                        <mml:mo>&it;</mml:mo>
                        <mml:msup><mml:mfenced open="" close="">
                            <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                        </mml:mfenced>
                        <mml:mi mathvariant="italic">j</mml:mi>
                        </mml:msup>
                        <mml:mo>&it;</mml:mo>
                        <mml:mfenced open="" close="">
                            <mml:msup><mml:mfenced open="(" close=")">
                                <mml:mrow>
                                    <mml:mn>1</mml:mn>
                                    <mml:mo>-</mml:mo>
                                    <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                                </mml:mrow>
                            </mml:mfenced>
                            <mml:mfenced open="" close="">
                                <mml:mrow>
                                    <mml:mi mathvariant="italic">m</mml:mi>
                                    <mml:mo>-</mml:mo>
                                    <mml:mi mathvariant="italic">j</mml:mi>
                                </mml:mrow>
                            </mml:mfenced>
                            </mml:msup>
                        </mml:mfenced>
                    </mml:mrow>
                </mml:mrow>
            </mml:math></informalequation>
        </para>
        <para>
            Recall that
            <inlineequation><mml:math>
                <!-- eqn: 0 sup 0  ==  1:-->
                <mml:mrow>
                    <mml:msup><mml:mn>0</mml:mn>
                    <mml:mn>0</mml:mn>
                    </mml:msup>
                    <mml:mo>==</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>
            and 
            <inlineequation><mml:math>
                <!-- eqn: left ( {cpile { n above 0 }} right )   ==   1:-->
                <mml:mrow>
                    <mml:mfenced open="(" close=")">
                        <mml:mfenced open="" close="">
                            <mml:mtable>
                                <mml:mtr><mml:mtd>
                                    <mml:mi mathvariant="italic">n</mml:mi>
                                </mml:mtd></mml:mtr>
                                <mml:mtr><mml:mtd>
                                    <mml:mn>0</mml:mn>
                                </mml:mtd></mml:mtr>
                            </mml:mtable>
                        </mml:mfenced>
                    </mml:mfenced>
                    <mml:mo>==</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>
        </para>
        <para>
            <function>glMap2</function> is used to define the basis and to specify what kind of values
            are produced.
            Once defined,
            a map can be enabled and disabled by calling <citerefentry><refentrytitle>glEnable</refentrytitle></citerefentry> and <citerefentry><refentrytitle>glDisable</refentrytitle></citerefentry>
            with the map name, one of the nine predefined values for <parameter>target</parameter>,
            described below.
            When <citerefentry><refentrytitle>glEvalCoord2</refentrytitle></citerefentry> presents values 
            <inlineequation><mml:math><mml:mi mathvariant="italic">u</mml:mi></mml:math></inlineequation>
            and 
            <inlineequation><mml:math><mml:mi mathvariant="italic">v</mml:mi></mml:math></inlineequation>,
            the bivariate Bernstein polynomials are evaluated using 
            <inlineequation><mml:math>
                <!-- eqn: u hat:-->
                <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
            </mml:math></inlineequation>
            and 
            <inlineequation><mml:math>
                <!-- eqn: v hat:-->
                <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
            </mml:math></inlineequation>,
            where
        </para>
        <para>
            <inlineequation><mml:math>
                <!-- eqn: u hat   =   {u  -  u1} over {u2  -  u1}:-->
                <mml:mrow>
                    <mml:mover><mml:mi mathvariant="italic">u</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    <mml:mo>=</mml:mo>
                    <mml:mfrac>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">u</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mi mathvariant="italic">u1</mml:mi>
                            </mml:mrow>
                        </mml:mfenced>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">u2</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mi mathvariant="italic">u1</mml:mi>
                            </mml:mrow>
                        </mml:mfenced>
                    </mml:mfrac>
                </mml:mrow>
            </mml:math></inlineequation>
        </para>
        <para>
            <inlineequation><mml:math>
                <!-- eqn: v hat   =   {v  -  v1} over {v2  -  v1}:-->
                <mml:mrow>
                    <mml:mover><mml:mi mathvariant="italic">v</mml:mi><mml:mo>&Hat;</mml:mo></mml:mover>
                    <mml:mo>=</mml:mo>
                    <mml:mfrac>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">v</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mi mathvariant="italic">v1</mml:mi>
                            </mml:mrow>
                        </mml:mfenced>
                        <mml:mfenced open="" close="">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">v2</mml:mi>
                                <mml:mo>-</mml:mo>
                                <mml:mi mathvariant="italic">v1</mml:mi>
                            </mml:mrow>
                        </mml:mfenced>
                    </mml:mfrac>
                </mml:mrow>
            </mml:math></inlineequation>
        </para>
        <para>
            <parameter>target</parameter> is a symbolic constant that indicates what kind of control points
            are provided in <parameter>points</parameter>,
            and what output is generated when the map is evaluated.
            It can assume one of nine predefined values:
        </para>
        <variablelist>
            <varlistentry>
                <term><constant>GL_MAP2_VERTEX_3</constant></term>
                <listitem>
                    <para>
                        Each control point is three floating-point values representing
                        <inlineequation><mml:math><mml:mi mathvariant="italic">x</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">y</mml:mi></mml:math></inlineequation>,
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">z</mml:mi></mml:math></inlineequation>.
                        Internal <citerefentry><refentrytitle>glVertex3</refentrytitle></citerefentry> commands are generated when the map is evaluated.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_VERTEX_4</constant></term>
                <listitem>
                    <para>
                        Each control point is four floating-point values representing
                        <inlineequation><mml:math><mml:mi mathvariant="italic">x</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">y</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">z</mml:mi></mml:math></inlineequation>,
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">w</mml:mi></mml:math></inlineequation>.
                        Internal <citerefentry><refentrytitle>glVertex4</refentrytitle></citerefentry> commands are generated when the map is evaluated.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_INDEX</constant></term>
                <listitem>
                    <para>
                        Each control point is a single floating-point value representing a color index.
                        Internal <citerefentry><refentrytitle>glIndex</refentrytitle></citerefentry> commands are generated when the map is evaluated
                        but the current index is not updated with the value of these
                        <citerefentry><refentrytitle>glIndex</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_COLOR_4</constant></term>
                <listitem>
                    <para>
                        Each control point is four floating-point values representing
                        red, green, blue, and alpha.
                        Internal <citerefentry><refentrytitle>glColor4</refentrytitle></citerefentry> commands are generated when the map is
                        evaluated but the current color is not updated with the value of
                        these <citerefentry><refentrytitle>glColor4</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_NORMAL</constant></term>
                <listitem>
                    <para>
                        Each control point is three floating-point values representing
                        the 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">x</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">y</mml:mi></mml:math></inlineequation>,
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">z</mml:mi></mml:math></inlineequation>
                        components of a normal vector.
                        Internal <citerefentry><refentrytitle>glNormal</refentrytitle></citerefentry> commands are generated when the map is
                        evaluated but the current normal is not updated with the value of
                        these <citerefentry><refentrytitle>glNormal</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_TEXTURE_COORD_1</constant></term>
                <listitem>
                    <para>
                        Each control point is a single floating-point value representing
                        the 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">s</mml:mi></mml:math></inlineequation>
                        texture coordinate.
                        Internal
                        <citerefentry><refentrytitle>glTexCoord1</refentrytitle></citerefentry> commands are generated when the map is evaluated but
                        the current texture coordinates are not updated with the value
                        of these <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_TEXTURE_COORD_2</constant></term>
                <listitem>
                    <para>
                        Each control point is two floating-point values representing
                        the 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">s</mml:mi></mml:math></inlineequation>
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">t</mml:mi></mml:math></inlineequation>
                        texture coordinates.
                        Internal
                        <citerefentry><refentrytitle>glTexCoord2</refentrytitle></citerefentry> commands are generated when the map is evaluated but
                        the current texture coordinates are not updated with the value
                        of these <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_TEXTURE_COORD_3</constant></term>
                <listitem>
                    <para>
                        Each control point is three floating-point values representing
                        the 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">s</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">t</mml:mi></mml:math></inlineequation>,
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">r</mml:mi></mml:math></inlineequation>
                        texture coordinates.
                        Internal <citerefentry><refentrytitle>glTexCoord3</refentrytitle></citerefentry> commands are generated when the map is
                        evaluated but the current texture coordinates are not updated with the value
                        of these <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAP2_TEXTURE_COORD_4</constant></term>
                <listitem>
                    <para>
                        Each control point is four floating-point values representing
                        the 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">s</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">t</mml:mi></mml:math></inlineequation>, 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">r</mml:mi></mml:math></inlineequation>,
                        and 
                        <inlineequation><mml:math><mml:mi mathvariant="italic">q</mml:mi></mml:math></inlineequation>
                        texture coordinates.
                        Internal
                        <citerefentry><refentrytitle>glTexCoord4</refentrytitle></citerefentry> commands are generated when the map is evaluated but the current texture coordinates are not updated with the value
                        of these <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry> commands.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            <parameter>ustride</parameter>,
            <parameter>uorder</parameter>,
            <parameter>vstride</parameter>,
            <parameter>vorder</parameter>, and
            <parameter>points</parameter> define the array addressing for accessing the control points.
            <parameter>points</parameter> is the location of the first control point,
            which occupies one, two, three, or four contiguous memory locations,
            depending on which map is being defined.
            There are 
            <inlineequation><mml:math>
                <!-- eqn: uorder  times  vorder:-->
                <mml:mrow>
                    <mml:mi mathvariant="italic">uorder</mml:mi>
                    <mml:mo>&times;</mml:mo>
                    <mml:mi mathvariant="italic">vorder</mml:mi>
                </mml:mrow>
            </mml:math></inlineequation>
            control points in the array.
            <parameter>ustride</parameter> specifies how many float or double locations are skipped to advance
            the internal memory pointer from control point
            <inlineequation><mml:math>
                <!-- eqn: R sub {i j}:-->
                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                <mml:mfenced open="" close="">
                    <mml:mrow>
                        <mml:mi mathvariant="italic">i</mml:mi>
                        <mml:mo>&it;</mml:mo>
                        <mml:mi mathvariant="italic">j</mml:mi>
                    </mml:mrow>
                </mml:mfenced>
                </mml:msub>
            </mml:math></inlineequation>
            to control point 
            <inlineequation><mml:math>
                <!-- eqn: R sub {(i+1) j}:-->
                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                <mml:mfenced open="" close="">
                    <mml:mrow>
                        <mml:mfenced open="(" close=")">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">i</mml:mi>
                                <mml:mo>+</mml:mo>
                                <mml:mn>1</mml:mn>
                            </mml:mrow>
                        </mml:mfenced>
                        <mml:mo>&it;</mml:mo>
                        <mml:mi mathvariant="italic">j</mml:mi>
                    </mml:mrow>
                </mml:mfenced>
                </mml:msub>
            </mml:math></inlineequation>.
            <parameter>vstride</parameter> specifies how many float or double locations are skipped to advance
            the internal memory pointer from control point
            <inlineequation><mml:math>
                <!-- eqn: R sub {i j}:-->
                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                <mml:mfenced open="" close="">
                    <mml:mrow>
                        <mml:mi mathvariant="italic">i</mml:mi>
                        <mml:mo>&it;</mml:mo>
                        <mml:mi mathvariant="italic">j</mml:mi>
                    </mml:mrow>
                </mml:mfenced>
                </mml:msub>
            </mml:math></inlineequation>
            to control point 
            <inlineequation><mml:math>
                <!-- eqn: R sub {i (j+1) }:-->
                <mml:msub><mml:mi mathvariant="italic">R</mml:mi>
                <mml:mfenced open="" close="">
                    <mml:mrow>
                        <mml:mi mathvariant="italic">i</mml:mi>
                        <mml:mo>&af;</mml:mo>
                        <mml:mfenced open="(" close=")">
                            <mml:mrow>
                                <mml:mi mathvariant="italic">j</mml:mi>
                                <mml:mo>+</mml:mo>
                                <mml:mn>1</mml:mn>
                            </mml:mrow>
                        </mml:mfenced>
                    </mml:mrow>
                </mml:mfenced>
                </mml:msub>
            </mml:math></inlineequation>.
        </para>
    </refsect1>
    <refsect1 id="notes"><title>Notes</title>
        <para>
            As is the case with all GL commands that accept pointers to data,
            it is as if the contents of <parameter>points</parameter> were copied by <function>glMap2</function> before <function>glMap2</function>
            returns.
            Changes to the contents of <parameter>points</parameter> have no effect after <function>glMap2</function> is called.
        </para>
        <para>
            Initially, <constant>GL_AUTO_NORMAL</constant> is enabled. If <constant>GL_AUTO_NORMAL</constant> is enabled,
            normal vectors are generated when either
            <constant>GL_MAP2_VERTEX_3</constant> or <constant>GL_MAP2_VERTEX_4</constant> is used to generate
            vertices.
        </para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not an accepted value.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>u1</parameter> is equal to <parameter>u2</parameter>,
            or if <parameter>v1</parameter> is equal to <parameter>v2</parameter>.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if either <parameter>ustride</parameter> or <parameter>vstride</parameter>
            is less than the number of values in a control point.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if either <parameter>uorder</parameter> or <parameter>vorder</parameter>
            is less than 1 or greater than the return value of <constant>GL_MAX_EVAL_ORDER</constant>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glMap2</function>
            is executed between the execution of
            <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
            and the corresponding execution of <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glMap2</function> is called and the value
            of <constant>GL_ACTIVE_TEXTURE</constant> is not <constant>GL_TEXTURE0</constant>.
        </para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGetMap</refentrytitle></citerefentry>
        </para>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_MAX_EVAL_ORDER</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_VERTEX_3</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_VERTEX_4</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_INDEX</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_COLOR_4</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_NORMAL</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_TEXTURE_COORD_1</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_TEXTURE_COORD_2</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_TEXTURE_COORD_3</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MAP2_TEXTURE_COORD_4</constant>
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glColor</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEnable</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEvalCoord</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEvalMesh</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEvalPoint</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glMap1</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glMapGrid</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glNormal</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexCoord</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glVertex</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <ulink url="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</ulink>.
        </para>
    </refsect1>
</refentry>
