<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glGetConvolutionParameter">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glGetConvolutionParameter</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetConvolutionParameter</refname>
        <refpurpose>get convolution parameters</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetConvolutionParameterfv</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLfloat * <parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetConvolutionParameteriv</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint * <parameter>params</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    The filter whose parameters are to be retrieved.
                    Must be one of
                    <constant>GL_CONVOLUTION_1D</constant>,
                    <constant>GL_CONVOLUTION_2D</constant>, or
                    <constant>GL_SEPARABLE_2D</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>pname</parameter></term>
            <listitem>
                <para>
                    The parameter to be retrieved.
                    Must be one of
                    <constant>GL_CONVOLUTION_BORDER_MODE</constant>,
                    <constant>GL_CONVOLUTION_BORDER_COLOR</constant>,
                    <constant>GL_CONVOLUTION_FILTER_SCALE</constant>,
                    <constant>GL_CONVOLUTION_FILTER_BIAS</constant>,
                    <constant>GL_CONVOLUTION_FORMAT</constant>,
                    <constant>GL_CONVOLUTION_WIDTH</constant>,
                    <constant>GL_CONVOLUTION_HEIGHT</constant>,
                    <constant>GL_MAX_CONVOLUTION_WIDTH</constant>, or
                    <constant>GL_MAX_CONVOLUTION_HEIGHT</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>params</parameter></term>
            <listitem>
                <para>
                    Pointer to storage for the parameters to be retrieved.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            <function>glGetConvolutionParameter</function> retrieves convolution parameters.
            <parameter>target</parameter> determines which convolution filter is queried.
            <parameter>pname</parameter> determines which parameter is returned:
        </para>
        <variablelist>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_BORDER_MODE</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The convolution border mode.
                        See <citerefentry><refentrytitle>glConvolutionParameter</refentrytitle></citerefentry> for a list of border modes.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_BORDER_COLOR</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current convolution border color.
                        <parameter>params</parameter> must be a pointer to an array of four elements,
                        which will receive the red, green, blue, and alpha border colors.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_FILTER_SCALE</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current filter scale factors.
                        <parameter>params</parameter> must be a pointer to an array of four elements,
                        which will receive the red, green, blue, and alpha filter scale
                        factors in that order.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_FILTER_BIAS</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current filter bias factors.
                        <parameter>params</parameter> must be a pointer to an array of four elements,
                        which will receive the red, green, blue, and alpha filter bias
                        terms in that order.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_FORMAT</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current internal format.
                        See <citerefentry><refentrytitle>glConvolutionFilter1D</refentrytitle></citerefentry>, <citerefentry><refentrytitle>glConvolutionFilter2D</refentrytitle></citerefentry>,
                        and <citerefentry><refentrytitle>glSeparableFilter2D</refentrytitle></citerefentry> for lists of allowable
                        formats.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_WIDTH</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current filter image width.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_CONVOLUTION_HEIGHT</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The current filter image height.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAX_CONVOLUTION_WIDTH</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The maximum acceptable filter image width.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><constant>GL_MAX_CONVOLUTION_HEIGHT</constant></term>
                <listitem>
			  <para>
			  </para>
                    <para>
                        The maximum acceptable filter image height.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the allowable
            values.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>pname</parameter> is not one of the allowable
            values.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is <constant>GL_CONVOLUTION_1D</constant>
            and <parameter>pname</parameter> is <constant>GL_CONVOLUTION_HEIGHT</constant> or
            <constant>GL_MAX_CONVOLUTION_HEIGHT</constant>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glGetConvolutionParameter</function> is executed
            between the execution of <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry> and the corresponding
            execution of <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGetConvolutionFilter</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGetSeparableFilter</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glConvolutionParameter</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <ulink url="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</ulink>.
        </para>
    </refsect1>
</refentry>
