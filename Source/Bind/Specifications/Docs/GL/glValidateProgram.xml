<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glValidateProgram">
    <info>
        <copyright>
            <year>2003-2005</year>
            <holder>3Dlabs Inc. Ltd.</holder>
        </copyright>
        <copyright>
            <year>2010-2013</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glValidateProgram</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glValidateProgram</refname>
        <refpurpose>Validates a program object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glValidateProgram</function></funcdef>
                <paramdef>GLuint <parameter>program</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term><parameter>program</parameter></term>
                <listitem>
                    <para>Specifies the handle of the program object to
                    be validated.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para><function>glValidateProgram</function> checks to see
        whether the executables contained in
        <parameter>program</parameter> can execute given the current
        OpenGL state. The information generated by the validation
        process will be stored in <parameter>program</parameter>'s
        information log. The validation information may consist of an
        empty string, or it may be a string containing information about
        how the current program object interacts with the rest of
        current OpenGL state. This provides a way for OpenGL
        implementers to convey more information about why the current
        program is inefficient, suboptimal, failing to execute, and so
        on.</para>

        <para>The status of the validation operation will be stored as
        part of the program object's state. This value will be set to
        <constant>GL_TRUE</constant> if the validation succeeded, and
        <constant>GL_FALSE</constant> otherwise. It can be queried by
        calling
        <citerefentry><refentrytitle>glGetProgram</refentrytitle></citerefentry>
        with arguments <parameter>program</parameter> and
        <constant>GL_VALIDATE_STATUS</constant>. If validation is
        successful, <parameter>program</parameter> is guaranteed to
        execute given the current state. Otherwise,
        <parameter>program</parameter> is guaranteed to not execute.</para>

        <para>This function is typically useful only during application
        development. The informational string stored in the information
        log is completely implementation dependent; therefore, an
        application should not expect different OpenGL implementations
        to produce identical information strings.</para>
    </refsect1>
    <refsect1 xml:id="notes"><title>Notes</title>
        <para>This function mimics the validation operation that OpenGL
        implementations must perform when rendering commands are issued
        while programmable shaders are part of current state. The error
        <constant>GL_INVALID_OPERATION</constant> will be generated by
        any command that triggers the rendering of geometry if:</para>

        <itemizedlist>
            <listitem>
                <para>any two active samplers in the current program
                object are of different types, but refer to the same
                texture image unit,</para>
            </listitem>
            <listitem>
            <para>the number of active samplers in the program exceeds the maximum
            number of texture image units allowed.</para>
            </listitem>
        </itemizedlist>

        <para>It may be difficult or cause a performance degradation for
        applications to catch these errors when rendering commands are
        issued. Therefore, applications are advised to make calls to
        <function>glValidateProgram</function> to detect these issues
        during application development.</para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para><constant>GL_INVALID_VALUE</constant> is generated if
        <parameter>program</parameter> is not a value generated by
        OpenGL.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        <parameter>program</parameter> is not a program object.</para>
    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para><citerefentry><refentrytitle>glGetProgram</refentrytitle></citerefentry>
        with arguments <parameter>program</parameter> and
        <constant>GL_VALIDATE_STATUS</constant></para>

        <para><citerefentry><refentrytitle>glGetProgramInfoLog</refentrytitle></citerefentry>
        with argument <parameter>program</parameter></para>

        <para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para><citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glUseProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd.
            Copyright <trademark class="copyright"/> 2010-2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
