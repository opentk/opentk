<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetUniformLocation">
    <info>
        <copyright>
            <year>2003-2005</year>
            <holder>3Dlabs Inc. Ltd.</holder>
        </copyright>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glGetUniformLocation</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetUniformLocation</refname>
        <refpurpose>Returns the location of a uniform variable</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>C Specification</title>
    <funcsynopsis>
        <funcprototype>
        <funcdef>GLint <function>glGetUniformLocation</function></funcdef>
        <paramdef>GLuint <parameter>program</parameter></paramdef>
        <paramdef>const GLchar *<parameter>name</parameter></paramdef>
        </funcprototype>
    </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
    <variablelist>
        <varlistentry>
        <term><parameter>program</parameter></term>
        <listitem>
            <para>Specifies the program object to be
            queried.</para>
        </listitem>
        </varlistentry>
        <varlistentry>
        <term><parameter>name</parameter></term>
        <listitem>
            <para>Points to a null terminated string containing
            the name of the uniform variable whose location is
            to be queried.</para>
        </listitem>
        </varlistentry>
    </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
    <para><function>glGetUniformLocation </function> returns an
    integer that represents the location of a specific uniform
    variable within a the default uniform block of a program object. 
        <parameter>name</parameter> must be a null terminated string 
        that contains no white space. <parameter>name</parameter> must 
        be an active uniform variable name in <parameter>program</parameter> 
        that is not a structure, an array of structures, or a subcomponent 
        of a vector or a matrix. This function returns -1 if 
        <parameter>name</parameter> does not correspond to an active uniform variable in
    <parameter>program</parameter> or if <parameter>name</parameter>
        is associated with a named uniform block.
        </para>

    <para>Uniform variables that are structures or arrays of
    structures may be queried by calling
    <function>glGetUniformLocation</function> for each field within
    the structure. The array element operator &quot;[]&quot; and the
    structure field operator &quot;.&quot; may be used in
    <parameter>name</parameter> in order to select elements within
    an array or fields within a structure. The result of using these
    operators is not allowed to be another structure, an array of
    structures, or a subcomponent of a vector or a matrix. 
        The first element of a uniform array is identified using the name 
        of the uniform array appended with &quot;[0]&quot;. If the last part 
        of the string name indicates a uniform array, then the location of the 
        first element of that array can be retrieved by either using the name of
        the array, or by using the name appended by &quot;[0]&quot;.</para>
        
        <para>
        Locations for sequential array indices are not required to be sequential. The
        location for &quot;a[1]&quot; may or may not be equal to the location for 
        &quot;a[0]&quot; + 1. Furthermore, since unused elements at the end of uniform 
        arrays may be trimmed the location of the i + 1 array element may not be valid 
        even if the location of the i element is valid. As a direct consequence, the
        value of the location of &quot;a[0]&quot; + 1 may refer to a different uniform 
        entirely. Applications that wish to set individual array elements should query 
        the locations of each element separately.
        </para>

    <para>The actual locations assigned to uniform variables are not
    known until the program object is linked successfully. After
    linking has occurred, the command
    <function>glGetUniformLocation</function> can be used to obtain
    the location of a uniform variable. This location value can then
    be passed to
    <citerefentry><refentrytitle>glUniform</refentrytitle></citerefentry>
    to set the value of the uniform variable or to
    <citerefentry><refentrytitle>glGetUniform</refentrytitle></citerefentry>
    in order to query the current value of the uniform variable.
    After a program object has been linked successfully, the index
    values for uniform variables remain fixed until the next link
    command occurs. Uniform variable locations and values can only
    be queried after a link if the link was successful.</para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
    <para><constant>GL_INVALID_VALUE</constant> is generated if
    <parameter>program</parameter> is not a value generated by
    OpenGL.</para>

    <para><constant>GL_INVALID_OPERATION</constant> is generated if
    <parameter>program</parameter> is not a program object.</para>

    <para><constant>GL_INVALID_OPERATION</constant> is generated if
    <parameter>program</parameter> has not been successfully
    linked.</para>

    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
    <para><citerefentry><refentrytitle>glGetActiveUniform</refentrytitle></citerefentry>
    with arguments <parameter>program</parameter> and the index of
    an active uniform variable</para>

    <para><citerefentry><refentrytitle>glGetProgramiv</refentrytitle></citerefentry>
    with arguments <parameter>program</parameter> and
    <constant>GL_ACTIVE_UNIFORMS</constant> or
    <constant>GL_ACTIVE_UNIFORM_MAX_LENGTH</constant></para>

    <para><citerefentry><refentrytitle>glGetUniform</refentrytitle></citerefentry>
    with arguments <parameter>program</parameter> and the name of a
    uniform variable</para>
    <para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="versions">
        <title>API Version Support</title>
        <informaltable>
            <tgroup cols="4" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry>glGetUniformLocation</entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='es20']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
    <para><citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
    <citerefentry><refentrytitle>glUniform</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd.
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
