<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glFramebufferRenderbuffer">
    <info>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glFramebufferRenderbuffer</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glFramebufferRenderbuffer</refname>
        <refpurpose>attach a renderbuffer as a logical buffer to the currently bound framebuffer object</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>GLsync <function>glFramebufferRenderbuffer</function></funcdef>
                <paramdef>GLenum <parameter>target</parameter></paramdef>
                <paramdef>GLenum <parameter>attachment</parameter></paramdef>
                <paramdef>GLenum <parameter>renderbuffertarget</parameter></paramdef>
                <paramdef>GLuint <parameter>renderbuffer</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>target</parameter></term>
            <listitem>
                <para>
                    Specifies the framebuffer target. <parameter>target</parameter> must be <constant>GL_DRAW_FRAMEBUFFER</constant>,
                    <constant>GL_READ_FRAMEBUFFER</constant>, or <constant>GL_FRAMEBUFFER</constant>. <constant>GL_FRAMEBUFFER</constant>
                    is equivalent to <constant>GL_DRAW_FRAMEBUFFER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>attachment</parameter></term>
            <listitem>
                <para>
                    Specifies the attachment point of the framebuffer.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>renderbuffertarget</parameter></term>
            <listitem>
                <para>
                    Specifies the renderbuffer target and must be <constant>GL_RENDERBUFFER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>renderbuffer</parameter></term>
            <listitem>
                <para>
                    Specifies the name of an existing renderbuffer object of type <parameter>renderbuffertarget</parameter> to attach.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glFramebufferRenderbuffer</function> attaches a renderbuffer as one of the logical buffers of the
            currently bound framebuffer object. <parameter>renderbuffer</parameter> is the name of the renderbuffer object
            to attach and must be either zero, or the name of an existing renderbuffer object of type <parameter>renderbuffertarget</parameter>.
            If <parameter>renderbuffer</parameter> is not zero and if <function>glFramebufferRenderbuffer</function> is
            successful, then the renderbuffer name <parameter>renderbuffer</parameter> will be used as the logical buffer
            identified by <parameter>attachment</parameter> of the framebuffer currently bound to <parameter>target</parameter>.
        </para>
        <para>
            The value of <constant>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</constant> for the specified attachment point is
            set to <constant>GL_RENDERBUFFER</constant> and the value of <constant>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</constant>
            is set to <parameter>renderbuffer</parameter>. All other state values of the attachment point specified by
            <parameter>attachment</parameter> are set to their default values. No change is made to the state of the renderbuuffer
            object and any previous attachment to the <parameter>attachment</parameter> logical buffer of the framebuffer
            <parameter>target</parameter> is broken.
        </para>
        <para>
            Calling <function>glFramebufferRenderbuffer</function> with the renderbuffer name zero will detach the image, if any,
            identified by <parameter>attachment</parameter>, in the framebuffer currently bound to <parameter>target</parameter>.
            All state values of the attachment point specified by attachment in the object bound to target are set to their default values.
        </para>
        <para>
            Setting <parameter>attachment</parameter> to the value <constant>GL_DEPTH_STENCIL_ATTACHMENT</constant> is a special
            case causing both the depth and stencil attachments of the framebuffer object to be set to <parameter>renderbuffer</parameter>,
            which should have the base internal format <constant>GL_DEPTH_STENCIL</constant>.
        </para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the accepted tokens.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>renderbuffertarget</parameter> is not <constant>GL_RENDERBUFFER</constant>.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if zero is bound to <parameter>target</parameter>.
        </para>
    </refsect1>
    <refsect1 xml:id="versions">
        <title>API Version Support</title>
        <informaltable>
            <tgroup cols="4" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry>glFramebufferRenderbuffer</entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='es20']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGenFramebuffers</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glBindFramebuffer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGenRenderbuffers</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFramebufferTexture</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFramebufferTexture2D</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFramebufferTextureLayer</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
