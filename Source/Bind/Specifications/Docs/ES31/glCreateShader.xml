<!DOCTYPE refentry [ <!ENTITY % mathent SYSTEM "math.ent"> %mathent; ]>

<!-- Converted by db4-upgrade version 1.1 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glCreateShader">
    <info>
        <copyright>
            <year>2003-2005</year>
            <holder>3Dlabs Inc. Ltd.</holder>
        </copyright>
        <copyright>
            <year>2010-2014</year>
            <holder>Khronos Group</holder>
        </copyright>
    </info>
    <refmeta>
        <refentrytitle>glCreateShader</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glCreateShader</refname>
        <refpurpose>Creates a shader object</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>GLuint <function>glCreateShader</function></funcdef>
                <paramdef>GLenum <parameter>shaderType</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="parameters"><title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term><parameter>shaderType</parameter></term>
                <listitem>
                    <para>
                        Specifies the type of shader to be created.
                        <constant>GL_VERTEX_SHADER</constant>,
                        <constant>GL_FRAGMENT_SHADER</constant>, or
                        <constant>GL_COMPUTE_SHADER</constant>,
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 xml:id="description"><title>Description</title>
        <para>
            <function>glCreateShader</function> creates an empty shader
            object and returns a non-zero value by which it can be
            referenced. A shader object is used to maintain the source code
            strings that define a shader. <parameter>shaderType</parameter>
            indicates the type of shader to be created. Three types of
            shaders are supported. A shader of type
            <constant>GL_VERTEX_SHADER</constant> is a shader that is
            intended to run on the programmable vertex processor. A shader
            of type <constant>GL_FRAGMENT_SHADER</constant> is a shader that
            is intended to run on the programmable fragment processor. A
            shader of type <constant>GL_COMPUTE_SHADER</constant> is a
            shader that is intended to run on the programmable compute
            processor.
        </para>
        <para>
            When created, a shader object's
            <constant>GL_SHADER_TYPE</constant> parameter is set to
            <constant>GL_COMPUTE_SHADER</constant>,
            <constant>GL_VERTEX_SHADER</constant> or
            <constant>GL_FRAGMENT_SHADER</constant>, depending on the value
            of <parameter>shaderType</parameter>.
        </para>
    </refsect1>
    <refsect1 xml:id="notes"><title>Notes</title>
        <para>
            Like buffer and texture objects, the name space for shader
            objects may be shared across a set of contexts, as long as the
            server sides of the contexts share the same address space. If
            the name space is shared across contexts, any attached objects
            and the data associated with those attached objects are shared
            as well.
        </para>
        <para>
            Applications are responsible for providing the synchronization
            across API calls when objects are accessed from different
            execution threads.
        </para>
        <para>
            <constant>GL_COMPUTE_SHADER</constant> is available only if the
            GL version is 3.1 or higher.
        </para>
    </refsect1>
    <refsect1 xml:id="errors"><title>Errors</title>
        <para>
            This function returns 0 if an error occurs creating the shader
            object.
        </para>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if
            <parameter>shaderType</parameter> is not an accepted
            value.
        </para>
    </refsect1>
    <refsect1 xml:id="associatedgets"><title>Associated Gets</title>
        <para>
            <citerefentry><refentrytitle>glGetShaderiv</refentrytitle></citerefentry>
            with a valid shader object and the parameter to be
            queried</para>
        <para>
            <citerefentry><refentrytitle>glGetShaderInfoLog</refentrytitle></citerefentry>
            with a valid shader object</para>
        <para>
            <citerefentry><refentrytitle>glGetShaderSource</refentrytitle></citerefentry>
            with a valid shader object
        </para>
        <para>
            <citerefentry><refentrytitle>glIsShader</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 xml:id="versions">
        <title>API Version Support</title>
        <informaltable>
            <tgroup cols="4" align="left">
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apifunchead.xml" xpointer="xpointer(/*/*)"/>
                <tbody>
                    <row>
                        <entry><function>glCreateShader</function></entry>
                        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="apiversion.xml" xpointer="xpointer(/*/*[@role='es20']/*)"/>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect1>
    <refsect1 xml:id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDeleteShader</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glShaderSource</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 xml:id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd.
            Copyright <trademark class="copyright"/> 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsect1>
</refentry>
