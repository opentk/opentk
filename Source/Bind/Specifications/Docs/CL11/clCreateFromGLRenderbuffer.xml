<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry>
    <refentryinfo>
        <keywordset>
            <keyword>clCreateFromGLRenderbuffer</keyword>
        </keywordset>
    </refentryinfo>

    <refmeta>                                    
        <refentrytitle>clCreateFromGLRenderbuffer</refentrytitle>

        <refmiscinfo>
            <copyright>
                <year>2007-2010</year>
                <holder>The Khronos Group Inc. 
 Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and/or associated documentation files (the
"Materials"), to deal in the Materials without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Materials, and to
permit persons to whom the Materials are furnished to do so, subject to
the condition that this copyright notice and permission notice shall be included
in all copies or substantial portions of the Materials.</holder>
            </copyright>
        </refmiscinfo>
        <manvolnum>3</manvolnum>
    </refmeta>

<!-- ================================ SYNOPSIS -->

    <refnamediv id="clCreateFromGLRenderbuffer">             
        <refname>clCreateFromGLRenderbuffer</refname>

        <refpurpose>
            Creates an OpenCL 2D image object from an OpenGL renderbuffer object.
        </refpurpose>
    </refnamediv>


    <refsynopsisdiv xmlns:xlink="http://www.w3.org/1999/xlink"><title></title>
        <funcsynopsis>
            <funcprototype>
                <funcdef><link xlink:href="abstractDataTypes.html">cl_mem</link>

                    <function>                   
                        clCreateFromGLRenderbuffer
                    </function>
                </funcdef>

                <paramdef><link xlink:href="abstractDataTypes.html">cl_context</link><parameter>context</parameter></paramdef>
                <paramdef><link xlink:href="enums.html#cl_mem_flags">cl_mem_flags</link><parameter>flags</parameter></paramdef>
                <paramdef>GLuint<parameter>renderbuffer</parameter></paramdef>
                <paramdef><link xlink:href="scalarDataTypes.html">cl_int</link><parameter>* errcode_ret</parameter></paramdef>

            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>


<!-- ================================ PARAMETERS -->

    <refsect1 id="parameters">
        <title>Parameters</title>
        <variablelist>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        context
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                        A valid OpenCL context created from an OpenGL context.
                    </para>
               </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        flags
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                       A bit-field that is used to specify usage information. Refer to the table at <citerefentry><refentrytitle>clCreateBuffer</refentrytitle></citerefentry> for a description of <varname>flags</varname>. Only CL_MEM_READ_ONLY, CL_MEM_WRITE_ONLY, and CL_MEM_READ_WRITE values specified in the table at <citerefentry><refentrytitle>clCreateBuffer</refentrytitle></citerefentry> can be used.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        renderbuffer
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
               The name of a GL renderbuffer object. The renderbuffer storage must be
specified before the image object can be created. The <varname>renderbuffer</varname>
format and dimensions defined by OpenGL will be used to create the 2D image object. Only GL renderbuffers with
internal formats that map to appropriate image channel order and data type specified in the table of supported Image Channel Order Values and
the table of supported Image Channel Data Types for  <type><citerefentry><refentrytitle>cl_image_format</refentrytitle></citerefentry></type>
can be used to create the 2D image object.
                    </para>
                </listitem>
            </varlistentry>


            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        errcode_ret
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                        Returns an appropriate error code as described below.
If <varname>errcode_ret</varname> is NULL, no error code is returned.
                    </para>
                </listitem>
            </varlistentry>

        </variablelist>
    </refsect1>


<!-- ================================ DESCRIPTION  -->

    <refsect1 id="description"><title>Description</title>
        <para>
If the state of a GL renderbuffer object is modified through the GL API (i.e. changes to the
dimensions or format used to represent pixels of the GL renderbuffer using appropriate GL API
calls such as <function>glRenderbufferStorage</function>) while there exists a corresponding CL image object,
subsequent use of the CL image object will result in undefined behavior.
        </para>

        <para>
The <citerefentry><refentrytitle>clRetainMemObject</refentrytitle></citerefentry> 
and <citerefentry><refentrytitle>clReleaseMemObject</refentrytitle></citerefentry> functions can be used to retain and release the image objects.
        </para>

        <para>
The table below describes the list of GL renderbuffer internal formats and the corresponding CL image
formats. If a GL renderbuffer object with an internal format from the table below is successfully
created by OpenGL, then there is guaranteed to be a mapping to one of the corresponding CL
image format(s) in that table. Renderbuffer objects created with other OpenGL internal formats
may (but are not guaranteed to) have a mapping to a CL image format; if such mappings exist,
they are guaranteed to preserve all color components, data types, and at least the number of
bits/component actually allocated by OpenGL for that format.
        </para>

        <informaltable frame="all">
            <tgroup cols="2" align="left" colsep="1" rowsep="1">
                <colspec colname="col1" colnum="1" />
                <colspec colname="col2" colnum="2" />

                <thead>
                    <row>
                        <entry>GL internal format</entry>
                        <entry>CL image format (channel order, channel data type)</entry>
                    </row>
                </thead>

                <tbody>

                    <row>
                        <entry>
                            GL_RGBA8
                        </entry>
                        <entry>
                            CL_RGBA, CL_UNORM_INT8 or CL_BGRA, CL_UNORM_INT8
                        </entry>
                    </row>

                    <row>
                        <entry> </entry>
                        <entry> </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA16
                        </entry>
                        <entry>
                            CL_RGBA, CL_UNORM_INT16
                        </entry>
                    </row>

                    <row>
                        <entry> </entry>
                        <entry> </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA8I, GL_RGBA8I_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_SIGNED_INT8
                        </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA16I, GL_RGBA16I_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_SIGNED_INT16
                        </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA32I, GL_RGBA32I_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_SIGNED_INT32
                        </entry>
                    </row>

                    <row>
                        <entry> </entry>
                        <entry> </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA8UI, GL_RGBA8UI_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_UNSIGNED_INT8
                        </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA16UI, GL_RGBA16UI_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_UNSIGNED_INT16
                        </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA32UI, GL_RGBA32UI_EXT
                        </entry>
                        <entry>
                            CL_RGBA, CL_UNSIGNED_INT32
                        </entry>
                    </row>

                    <row>
                        <entry> </entry>
                        <entry> </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA16F, GL_RGBA16F_ARB
                        </entry>
                        <entry>
                            CL_RGBA, CL_HALF_FLOAT
                        </entry>
                    </row>

                    <row>
                        <entry> </entry>
                        <entry> </entry>
                    </row>

                    <row>
                        <entry>
                            GL_RGBA32F, GL_RGBA32F_ARB
                        </entry>
                        <entry>
                            CL_RGBA, CL_FLOAT
                        </entry>
                    </row>

                </tbody>
            </tgroup>
        </informaltable>

    </refsect1>


<!-- ================================ ERRORS  -->

    <refsect1 id="errors"><title>Errors</title>
        <para>
            Returns a valid non-zero OpenCL image object and <varname>errcode_ret</varname>
is set to CL_SUCCESS if the image object is created successfully. Otherwise, it returns a NULL
value with one of the following error values returned in <varname>errcode_ret</varname>:
        </para>

        <itemizedlist mark="disc">
            <listitem>
                <errorname>CL_INVALID_CONTEXT</errorname> if <varname>context</varname> is not 
                a valid context or was not created from a GL context.
            </listitem>

            <listitem>
                <errorname>CL_INVALID_VALUE</errorname> if values specified in <varname>flags</varname> are not valid.
            </listitem>

            <listitem>
                <errorname>CL_INVALID_GL_OBJECT</errorname> if <varname>renderbuffer</varname>
                is not a GL renderbuffer object or if the width or height of <varname>renderbuffer</varname> is zero.
            </listitem>

            <listitem>
                <errorname>CL_INVALID_IMAGE_FORMAT_DESCRIPTOR</errorname> if the OpenGL
                renderbuffer internal format does not map to a supported OpenCL image format.
            </listitem>
            
            <listitem>
                <errorname>CL_INVALID_OPERATION</errorname> if <varname>renderbuffer</varname> is a multi-sample 
                GL renderbuffer object.
            </listitem>
            
            <listitem>
                <errorname>CL_OUT_OF_RESOURCES</errorname> if there is a failure to allocate resources 
                required by the OpenCL implementation on the device.
            </listitem>
            <listitem>
                <errorname>CL_OUT_OF_HOST_MEMORY</errorname> if there is a failure to
                allocate resources required by the OpenCL implementation on the host.
            </listitem>

        </itemizedlist>
    </refsect1>


<!-- ================================ EXAMPLE  -->
<!-- DO NOT DELETE IN CASE AN EXAMPLE IS ADDED IN THE FUTURE -->
<!--
    <refsect2 id="example1">
        <title>
            Example
        </title>

        <informaltable frame="none">
            <tgroup cols="1" align="left" colsep="0" rowsep="0">
                <colspec colname="col1" colnum="1" />
                <tbody>
                    <row>
                        <entry>
                            Example goes here - it will be set in "code" type with white space preserved.
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
    </refsect2>
-->


<!-- ================================ SPECIFICATION  -->
<!-- Set the "uri" attribute in the <olink /> element to the "named destination" for the PDF page
-->
    <refsect1 id="specification"><title>Specification</title>
        <para>
            <imageobject>
                <imagedata fileref="pdficon_small1.gif" format="gif" />
            </imageobject>
                                                 
            <olink uri="clCreateFromGLRenderbuffer">OpenCL Specification</olink>
        </para>
    </refsect1>


<!-- ================================ ALSO SEE  -->

    <refsect1 id="seealso"><title>Also see</title>
        <para>
            <citerefentry href="gl_sharing"><refentrytitle>cl_khr_gl_sharing</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>clCreateBuffer</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>cl_image_format</refentrytitle></citerefentry>,   
            <citerefentry><refentrytitle>clRetainMemObject</refentrytitle></citerefentry>,   
            <citerefentry><refentrytitle>clReleaseMemObject</refentrytitle></citerefentry>
        </para>
    </refsect1>



<!-- ============================== COPYRIGHT -->
<!-- Content included from copyright.inc.xsl -->

    <refsect3 id="Copyright"><title></title>
        <imageobject>
                <imagedata fileref="KhronosLogo.jpg" format="jpg" />
        </imageobject>
        <para />
    </refsect3>

</refentry>

