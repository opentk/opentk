<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry>
    <refentryinfo>
        <keywordset>
            <keyword>clCreateKernel</keyword>
        </keywordset>
    </refentryinfo>

    <refmeta>
        <refentrytitle>       
            clCreateKernel
        </refentrytitle>

        <refmiscinfo>
            <copyright>
                <year>2007-2010</year>
                <holder>The Khronos Group Inc. 
 Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and/or associated documentation files (the
"Materials"), to deal in the Materials without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Materials, and to
permit persons to whom the Materials are furnished to do so, subject to
the condition that this copyright notice and permission notice shall be included
in all copies or substantial portions of the Materials.</holder>
            </copyright>
        </refmiscinfo>
        <manvolnum>3</manvolnum>
  
    </refmeta>


<!-- ================================ SYNOPSIS -->  

    <refnamediv id="clCreateKernel">
        <refname>     
            clCreateKernel
        </refname> 

        <refpurpose>          
            Creates a kernal object.
        </refpurpose> 
    </refnamediv> 

    <refsynopsisdiv xmlns:xlink="http://www.w3.org/1999/xlink"><title></title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>              
                    <link xlink:href="abstractDataTypes.html">cl_kernel</link> <function>clCreateKernel</function>
                </funcdef>

                <paramdef><link xlink:href="abstractDataTypes.html">cl_program</link> <parameter>program</parameter></paramdef>
                <paramdef>const <link xlink:href="scalarDataTypes.html">char</link><parameter>*kernel_name</parameter></paramdef>
                <paramdef><link xlink:href="scalarDataTypes.html">cl_int</link><parameter>*errcode_ret</parameter></paramdef>
                                  

            </funcprototype>
        </funcsynopsis>     
    </refsynopsisdiv>


<!-- ================================ PARAMETERS --> 

    <refsect1 id="parameters">
        <title>Parameters</title>
        <variablelist>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        program
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                        A program object with a successfully built executable.
                    </para>
               </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        kernel_name
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                        A function name in the program declared with the <constant>__kernel</constant> qualifier
                    </para>
               </listitem>
            </varlistentry>
            
            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        errcode_ret
                    </varname>
                </term>

                <listitem>
                    <para> <!-- parameter description -->
                        Returns an appropriate error code. If <varname>errcode_ret</varname> is NULL, no error code is returned.
                    </para>
               </listitem>
            </varlistentry>


        

        </variablelist>
    </refsect1>

    
<!-- ================================ NOTES  -->        
<!-- Use <function /> to refer ONLY to the function that this page describes. All other functions should use
     <citerefentry /><refentrytitle /> to make it a link. Use <varname /> for parameters. Use <constant /> for 
     constants (or anything to be set in monospace, non-bold type. -->

     <refsect1 id="notes"><title>Notes</title>
        <para>
        A kernel is a function declared in a program. A kernel is identified by the <citerefentry href="functionQualifiers"><refentrytitle>__kernel</refentrytitle></citerefentry> qualifier applied to any function in a program. A kernel object encapsulates the specific <constant>__kernel</constant> function declared in a program and the argument values to be used when executing this <constant>__kernel</constant> function.
        </para>
    </refsect1>


<!-- ================================ ERRORS  -->       


    <refsect1 id="errors"><title>Errors</title>
        <para>
            <function>clCreateKernel</function> returns a valid non-zero kernel object and <varname>errcode_ret</varname> 
            is set to <errorname>CL_SUCCESS</errorname> if
            the kernel object is created successfully. Otherwise, it returns a NULL value with one of the
            following error values returned in <varname>errcode_ret</varname>:
        </para>
        <itemizedlist mark="disc">
            <listitem>
                <errorname>CL_INVALID_PROGRAM</errorname> if <varname>program</varname> is not a valid program object.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_PROGRAM_EXECUTABLE</errorname> if there is no successfully built executable for
                <varname>program</varname>.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_KERNEL_NAME</errorname> if <varname>kernel_name</varname> is not found in <varname>program</varname>.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_KERNEL_DEFINITION</errorname> if the function definition for <constant>__kernel</constant> function
                given by <varname>kernel_name</varname> such as the number of arguments, the argument types are not the
                same for all devices for which the <varname>program</varname> executable has been built.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_VALUE</errorname> if <varname>kernel_name</varname> is NULL.
            </listitem>
            <listitem>
                <errorname>CL_OUT_OF_RESOURCES</errorname> if there is a failure to allocate resources required by the 
                OpenCL implementation on the device.
            </listitem>
            <listitem>
                <errorname>CL_OUT_OF_HOST_MEMORY</errorname> if there is a failure to allocate resources required by the
                OpenCL implementation on the host.  
            </listitem>     
        </itemizedlist>
    </refsect1>
    

<!-- ================================ EXAMPLE  -->  
<!-- DO NOT DELETE IN CASE AN EXAMPLE IS ADDED IN THE FUTURE -->
<!--    
    <refsect2 id="example1">
        <title>
            Example
        </title>

        <informaltable frame="none">
            <tgroup cols="1" align="left" colsep="0" rowsep="0">
                <colspec colname="col1" colnum="1" />
                <tbody>
                    <row>
                        <entry>
                            Example goes here - it will be set in "code" type with white space preserved.
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>   
    </refsect2>  
--> 


<!-- ================================ SPECIFICATION  -->        
<!-- Set the "uri" attribute in the <olink /> element to the "named destination" for the PDF page
-->     
    <refsect1 id="specification"><title>Specification</title>
        <para>
            <imageobject>
                <imagedata fileref="pdficon_small1.gif" format="gif" />
            </imageobject>
            
                      
            <olink uri="clCreateKernel">OpenCL Specification</olink>
        </para>
    </refsect1>     


<!-- ================================ ALSO SEE  -->     
   

    <refsect1 id="seealso"><title>Also see</title>
        <para>
            <citerefentry><refentrytitle>clCreateKernelsInProgram</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>clRetainKernel</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>clReleaseKernel</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>clSetKernelArg</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>clGetKernelInfo</refentrytitle></citerefentry>, 
            <citerefentry><refentrytitle>clGetKernelWorkGroupInfo</refentrytitle></citerefentry>, 
            <citerefentry href="classDiagram"><refentrytitle>Cardinality Diagram</refentrytitle></citerefentry>
        </para>
    </refsect1>

<!-- ================================ COPYRIGHT  -->  
<!-- Content included from copyright.inc.xsl -->

    <refsect3 id="Copyright"><title></title>
        <imageobject>
                <imagedata fileref="KhronosLogo.jpg" format="jpg" />
        </imageobject>
        <para />
    </refsect3>

</refentry>

