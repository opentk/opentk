<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glGetAttachedShaders">
    <refmeta>
        <refentrytitle>glGetAttachedShaders</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetAttachedShaders</refname>
        <refpurpose>return the handles of the shader objects attached to a program object</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetAttachedShaders</function></funcdef>
                <paramdef>GLuint <parameter>program</parameter></paramdef>
                <paramdef>GLsizei <parameter>maxCount</parameter></paramdef>
                <paramdef>GLsizei *<parameter>count</parameter></paramdef>
                <paramdef>GLuint *<parameter>shaders</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term><parameter>program</parameter></term>
                <listitem>
                    <para>Specifies the program object to be
                    queried.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>maxCount</parameter></term>
                <listitem>
                    <para>Specifies the size of the array for storing
                    the returned object names.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>count</parameter></term>
                <listitem>
                    <para>Returns the number of names actually returned
                    in <parameter>shaders</parameter>.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>shaders</parameter></term>
                <listitem>
                    <para>Specifies an array that is used to return the
                    names of attached shader objects.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para><function>glGetAttachedShaders</function> returns the
        names of the shader objects attached to
        <parameter>program</parameter>. The names of shader objects that
        are attached to <parameter>program</parameter> will be returned
        in <parameter>shaders.</parameter> The actual number of shader
        names written into <parameter>shaders</parameter> is returned in
        <parameter>count.</parameter> If no shader objects are attached
        to <parameter>program</parameter>, <parameter>count</parameter>
        is set to 0. The maximum number of shader names that may be
        returned in <parameter>shaders</parameter> is specified by
        <parameter>maxCount</parameter>. </para>

        <para>If the number of names actually returned is not required
        (for instance, if it has just been obtained by calling
        <citerefentry><refentrytitle>glGetProgramiv</refentrytitle></citerefentry>),
        a value of <constant>NULL</constant> may be passed for count. If
        no shader objects are attached to
        <parameter>program</parameter>, a value of 0 will be returned in
        <parameter>count</parameter>. The actual number of attached
        shaders can be obtained by calling
        <citerefentry><refentrytitle>glGetProgramiv</refentrytitle></citerefentry>
        with the value <constant>GL_ATTACHED_SHADERS</constant>.</para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para><constant>GL_INVALID_VALUE</constant> is generated if
        <parameter>program</parameter> is not a value generated by
        OpenGL.</para>

        <para><constant>GL_INVALID_OPERATION</constant> is generated if
        <parameter>program</parameter> is not a program object.</para>

        <para><constant>GL_INVALID_VALUE</constant> is generated if
        <parameter>maxCount</parameter> is less than 0.</para>
    </refsect1>
    <refsect1 id="associatedgets"><title>Associated Gets</title>
        <para><citerefentry><refentrytitle>glGetProgramiv</refentrytitle></citerefentry>
        with argument <constant>GL_ATTACHED_SHADERS</constant></para>

        <para><citerefentry><refentrytitle>glIsProgram</refentrytitle></citerefentry></para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para><citerefentry><refentrytitle>glAttachShader</refentrytitle></citerefentry>,
        <citerefentry><refentrytitle>glDetachShader</refentrytitle></citerefentry></para>.
    </refsect1>
    <refsect1 id="copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
