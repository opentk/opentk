<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry>
    <refentryinfo>
        <keywordset>
            <keyword>         
                clCreateSampler
            </keyword>
        </keywordset>
    </refentryinfo>

    <refmeta>
        <refentrytitle>       
            clCreateSampler
        </refentrytitle>

        <refmiscinfo>
            <copyright>
                <year>2007-2009</year>
                <holder>The Khronos Group Inc. 
 Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and/or associated documentation files (the
"Materials"), to deal in the Materials without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Materials, and to
permit persons to whom the Materials are furnished to do so, subject to
the condition that this copyright notice and permission notice shall be included
in all copies or substantial portions of the Materials.</holder>
            </copyright>
        </refmiscinfo>
        <manvolnum>2</manvolnum>
  
    </refmeta>


<!-- ================================ SYNOPSIS -->  

    <refnamediv id="clCreateSampler">
        <refname>     
            clCreateSampler
        </refname> 

        <refpurpose>          
            Creates a sampler object.
        </refpurpose> 
    </refnamediv> 

    <refsynopsisdiv xmlns:xlink="http://www.w3.org/1999/xlink"><title></title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>              
                    cl_sampler <function>clCreateSampler</function>
                </funcdef>

                <paramdef><link xlink:href="abstractDataTypes.html">cl_context</link><parameter>context</parameter></paramdef>
                <paramdef><link xlink:href="enums.html#cl_bool">cl_bool</link><parameter>normalized_coords</parameter></paramdef>
                <paramdef><link xlink:href="enums.html#cl_addressing_mode">cl_addressing_mode</link><parameter>addressing_mode</parameter></paramdef>
                <paramdef><link xlink:href="enums.html#cl_filter_mode">cl_filter_mode</link><parameter>filter_mode</parameter></paramdef>
                <paramdef><link xlink:href="scalarDataTypes.html">cl_int</link><parameter>*errcode_ret</parameter></paramdef>                              

            </funcprototype>
        </funcsynopsis>     
    </refsynopsisdiv>


<!-- ================================ PARAMETERS --> 

    <refsect1 id="parameters">
        <title>Parameters</title>
        <variablelist>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        context
                    </varname>
                </term>
                <listitem>
                    <para> <!-- parameter description -->
                        Must be a valid OpenCL context.
                    </para>
               </listitem>
            </varlistentry>
        
            
            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                      normalized_coords
                    </varname>
                </term>
                <listitem>
                    <para> <!-- parameter description -->
                        Determines if the image coordinates specified are normalized (if
<varname>normalized_coords</varname> is <constant>CL_TRUE</constant>) or not (if <varname>normalized_coords</varname> is <constant>CL_FALSE</constant>).
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        addressing_mode
                    </varname>
                </term>
                <listitem>
                    <para> <!-- parameter description -->
                        Specifies how out-of-range image coordinates are handled when reading from
an image. This can be set to <constant>CL_ADDRESS_REPEAT</constant>, <constant>CL_ADDRESS_CLAMP_TO_EDGE</constant>, <constant>CL_ADDRESS_CLAMP</constant>, and <constant>CL_ADDRESS_NONE</constant>.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        filtering_mode
                    </varname>
                </term>
                <listitem>
                    <para> <!-- parameter description -->
                        Specifies the type of filter that must be applied when reading an image. This can be <constant>CL_FILTER_NEAREST</constant> or <constant>CL_FILTER_LINEAR</constant>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>
                    <varname> <!-- parameter name -->
                        errcode_ret
                    </varname>
                </term>
                <listitem>
                    <para> <!-- parameter description -->
                        Returns an appropriate error code. If <varname>errcode_ret</varname> is NULL, no error code is returned.
                    </para>
                </listitem>
            </varlistentry>			
			
        </variablelist>
    </refsect1>

    
<!-- ================================ NOTES  -->        


    <refsect1 id="notes"><title>Notes</title>
        <para>
            A sampler object describes how to sample an image when the image is read in the kernel. The built-in functions to read from an image in a kernel take a sampler as an argument. The sampler arguments to the image read function can be sampler objects created using OpenCL functions and passed as argument values to the kernel or can be samplers declared inside a kernel. In this section we discuss how sampler objects are created using OpenCL functions.

        </para>

        
    </refsect1>
    

<!-- ================================ ERRORS  -->       
 

    <refsect1 id="errors"><title>Errors</title>
        <para>
            Returns a valid non-zero sampler object and <varname>errcode_ret</varname> is set to <errorname>CL_SUCCESS</errorname> if the sampler object is created successfully. Otherwise, it returns a NULL value with one of the following error values returned in <varname>errcode_ret</varname>:
        </para>
        <itemizedlist mark="disc">
            <listitem>
                <errorname>CL_INVALID_CONTEXT</errorname> if <varname>context</varname>
                is not a valid context.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_VALUE</errorname> if <varname>addressing_mode</varname>, 
				<varname>filter_mode</varname>, or <varname>normalized_coords</varname> or a  combination of these argument values are not valid.
            </listitem>
            <listitem>
                <errorname>CL_INVALID_OPERATION</errorname> if images are not supported by any device associated with <varname>context</varname> (i.e. <errorname>CL_DEVICE_IMAGE_SUPPORT</errorname> specified in the table of OpenCL Device Queries for <citerefentry><refentrytitle>clGetDeviceInfo</refentrytitle></citerefentry> is <errorname>CL_FALSE</errorname>). 
            </listitem>

            <listitem>
                <errorname>CL_OUT_OF_HOST_MEMORY</errorname> if there is a failure to allocate resources required by the OpenCL implementation on the host.
            </listitem>
        </itemizedlist>
    </refsect1>
    

<!-- ================================ EXAMPLE  -->  
<!-- DO NOT DELETE IN CASE AN EXAMPLE IS ADDED IN THE FUTURE -->
<!--    
    <refsect2 id="example1">
        <title>
            Example
        </title>

        <informaltable frame="none">
            <tgroup cols="1" align="left" colsep="0" rowsep="0">
                <colspec colname="col1" colnum="1" />
                <tbody>
                    <row>
                        <entry>
                            Example goes here - it will be set in "code" type with white space preserved.
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>   
    </refsect2>  
--> 


<!-- ================================ SPECIFICATION  -->        
<!-- Set the "uri" attribute in the <olink /> element to the "named destination" for the PDF page
-->     
    <refsect1 id="specification"><title>Specification</title>
        <para>
            <imageobject>
                <imagedata fileref="pdficon_small1.gif" format="gif" />
            </imageobject>
			
				      
            <olink uri="clCreateSampler">OpenCL Specification</olink>
        </para>
    </refsect1>     


<!-- ================================ ALSO SEE  -->     
   

    <refsect1 id="seealso"><title>Also see</title>
        <para>
<citerefentry><refentrytitle>clRetainSampler</refentrytitle></citerefentry>,  <citerefentry><refentrytitle>clReleaseSampler</refentrytitle></citerefentry>,  <citerefentry><refentrytitle>clGetSamplerInfo</refentrytitle></citerefentry>
        </para>
    </refsect1>

<!-- ================================ COPYRIGHT  -->  
<!-- Content included from copyright.inc.xsl -->

    <refsect3 id="Copyright"><title></title>
		<imageobject>
                <imagedata fileref="KhronosLogo.jpg" format="jpg" />
        </imageobject>
		<para />
    </refsect3>

</refentry>

