#pragma warning disable 219,612,618,1720
class Test {
    public static void Main() { }
    static void Test_AlcContextAttributes_2720() {
        var _Frequency = OpenTK.Audio.OpenAL.AlcContextAttributes.Frequency;
        var _Refresh = OpenTK.Audio.OpenAL.AlcContextAttributes.Refresh;
        var _Sync = OpenTK.Audio.OpenAL.AlcContextAttributes.Sync;
        var _MonoSources = OpenTK.Audio.OpenAL.AlcContextAttributes.MonoSources;
        var _StereoSources = OpenTK.Audio.OpenAL.AlcContextAttributes.StereoSources;
        var _EfxMaxAuxiliarySends = OpenTK.Audio.OpenAL.AlcContextAttributes.EfxMaxAuxiliarySends;
    }
    static void Test_AlcError_2721() {
        var _NoError = OpenTK.Audio.OpenAL.AlcError.NoError;
        var _InvalidDevice = OpenTK.Audio.OpenAL.AlcError.InvalidDevice;
        var _InvalidContext = OpenTK.Audio.OpenAL.AlcError.InvalidContext;
        var _InvalidEnum = OpenTK.Audio.OpenAL.AlcError.InvalidEnum;
        var _InvalidValue = OpenTK.Audio.OpenAL.AlcError.InvalidValue;
        var _OutOfMemory = OpenTK.Audio.OpenAL.AlcError.OutOfMemory;
    }
    static void Test_AlcGetString_2722() {
        var _DefaultDeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetString.DefaultDeviceSpecifier;
        var _Extensions = OpenTK.Audio.OpenAL.AlcGetString.Extensions;
        var _CaptureDefaultDeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetString.CaptureDefaultDeviceSpecifier;
        var _DefaultAllDevicesSpecifier = OpenTK.Audio.OpenAL.AlcGetString.DefaultAllDevicesSpecifier;
        var _CaptureDeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetString.CaptureDeviceSpecifier;
        var _DeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetString.DeviceSpecifier;
        var _AllDevicesSpecifier = OpenTK.Audio.OpenAL.AlcGetString.AllDevicesSpecifier;
    }
    static void Test_AlcGetStringList_2723() {
        var _CaptureDeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetStringList.CaptureDeviceSpecifier;
        var _DeviceSpecifier = OpenTK.Audio.OpenAL.AlcGetStringList.DeviceSpecifier;
        var _AllDevicesSpecifier = OpenTK.Audio.OpenAL.AlcGetStringList.AllDevicesSpecifier;
    }
    static void Test_AlcGetInteger_2724() {
        var _MajorVersion = OpenTK.Audio.OpenAL.AlcGetInteger.MajorVersion;
        var _MinorVersion = OpenTK.Audio.OpenAL.AlcGetInteger.MinorVersion;
        var _AttributesSize = OpenTK.Audio.OpenAL.AlcGetInteger.AttributesSize;
        var _AllAttributes = OpenTK.Audio.OpenAL.AlcGetInteger.AllAttributes;
        var _CaptureSamples = OpenTK.Audio.OpenAL.AlcGetInteger.CaptureSamples;
        var _EfxMajorVersion = OpenTK.Audio.OpenAL.AlcGetInteger.EfxMajorVersion;
        var _EfxMinorVersion = OpenTK.Audio.OpenAL.AlcGetInteger.EfxMinorVersion;
        var _EfxMaxAuxiliarySends = OpenTK.Audio.OpenAL.AlcGetInteger.EfxMaxAuxiliarySends;
    }
    static unsafe void Test_CreateContext_2725() {
        System.IntPtr _device = default(System.IntPtr);
        System.Int32* _attrlist = default(System.Int32*);
        OpenTK.ContextHandle r = OpenTK.Audio.OpenAL.Alc.CreateContext(_device,_attrlist);
    }
    static unsafe void Test_CreateContext_2726() {
        System.IntPtr _device = default(System.IntPtr);
        System.Int32[] _attriblist = default(System.Int32[]);
        OpenTK.ContextHandle r = OpenTK.Audio.OpenAL.Alc.CreateContext(_device,_attriblist);
    }
    static unsafe void Test_MakeContextCurrent_2727() {
        OpenTK.ContextHandle _context = default(OpenTK.ContextHandle);
        System.Boolean r = OpenTK.Audio.OpenAL.Alc.MakeContextCurrent(_context);
    }
    static unsafe void Test_ProcessContext_2728() {
        OpenTK.ContextHandle _context = default(OpenTK.ContextHandle);
        OpenTK.Audio.OpenAL.Alc.ProcessContext(_context);
    }
    static unsafe void Test_SuspendContext_2729() {
        OpenTK.ContextHandle _context = default(OpenTK.ContextHandle);
        OpenTK.Audio.OpenAL.Alc.SuspendContext(_context);
    }
    static unsafe void Test_DestroyContext_2730() {
        OpenTK.ContextHandle _context = default(OpenTK.ContextHandle);
        OpenTK.Audio.OpenAL.Alc.DestroyContext(_context);
    }
    static unsafe void Test_GetCurrentContext_2731() {
        OpenTK.ContextHandle r = OpenTK.Audio.OpenAL.Alc.GetCurrentContext();
    }
    static unsafe void Test_GetContextsDevice_2732() {
        OpenTK.ContextHandle _context = default(OpenTK.ContextHandle);
        System.IntPtr r = OpenTK.Audio.OpenAL.Alc.GetContextsDevice(_context);
    }
    static unsafe void Test_OpenDevice_2733() {
        System.String _devicename = default(System.String);
        System.IntPtr r = OpenTK.Audio.OpenAL.Alc.OpenDevice(_devicename);
    }
    static unsafe void Test_CloseDevice_2734() {
        System.IntPtr _device = default(System.IntPtr);
        System.Boolean r = OpenTK.Audio.OpenAL.Alc.CloseDevice(_device);
    }
    static unsafe void Test_GetError_2735() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.AlcError r = OpenTK.Audio.OpenAL.Alc.GetError(_device);
    }
    static unsafe void Test_IsExtensionPresent_2736() {
        System.IntPtr _device = default(System.IntPtr);
        System.String _extname = default(System.String);
        System.Boolean r = OpenTK.Audio.OpenAL.Alc.IsExtensionPresent(_device,_extname);
    }
    static unsafe void Test_GetProcAddress_2737() {
        System.IntPtr _device = default(System.IntPtr);
        System.String _funcname = default(System.String);
        System.IntPtr r = OpenTK.Audio.OpenAL.Alc.GetProcAddress(_device,_funcname);
    }
    static unsafe void Test_GetEnumValue_2738() {
        System.IntPtr _device = default(System.IntPtr);
        System.String _enumname = default(System.String);
        System.Int32 r = OpenTK.Audio.OpenAL.Alc.GetEnumValue(_device,_enumname);
    }
    static unsafe void Test_GetString_2739() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.AlcGetString _param = default(OpenTK.Audio.OpenAL.AlcGetString);
        System.String r = OpenTK.Audio.OpenAL.Alc.GetString(_device,_param);
    }
    static unsafe void Test_GetString_2740() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.AlcGetStringList _param = default(OpenTK.Audio.OpenAL.AlcGetStringList);
        System.Collections.Generic.IList<string> r = OpenTK.Audio.OpenAL.Alc.GetString(_device,_param);
    }
    static unsafe void Test_GetInteger_2741() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.AlcGetInteger _param = default(OpenTK.Audio.OpenAL.AlcGetInteger);
        System.Int32 _size = default(System.Int32);
        System.Int32 _data = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.GetInteger(_device,_param,_size,out _data);
    }
    static unsafe void Test_GetInteger_2742() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.AlcGetInteger _param = default(OpenTK.Audio.OpenAL.AlcGetInteger);
        System.Int32 _size = default(System.Int32);
        System.Int32[] _data = default(System.Int32[]);
        OpenTK.Audio.OpenAL.Alc.GetInteger(_device,_param,_size,_data);
    }
    static unsafe void Test_CaptureOpenDevice_2743() {
        System.String _devicename = default(System.String);
        System.UInt32 _frequency = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALFormat _format = default(OpenTK.Audio.OpenAL.ALFormat);
        System.Int32 _buffersize = default(System.Int32);
        System.IntPtr r = OpenTK.Audio.OpenAL.Alc.CaptureOpenDevice(_devicename,_frequency,_format,_buffersize);
    }
    static unsafe void Test_CaptureOpenDevice_2744() {
        System.String _devicename = default(System.String);
        System.Int32 _frequency = default(System.Int32);
        OpenTK.Audio.OpenAL.ALFormat _format = default(OpenTK.Audio.OpenAL.ALFormat);
        System.Int32 _buffersize = default(System.Int32);
        System.IntPtr r = OpenTK.Audio.OpenAL.Alc.CaptureOpenDevice(_devicename,_frequency,_format,_buffersize);
    }
    static unsafe void Test_CaptureCloseDevice_2745() {
        System.IntPtr _device = default(System.IntPtr);
        System.Boolean r = OpenTK.Audio.OpenAL.Alc.CaptureCloseDevice(_device);
    }
    static unsafe void Test_CaptureStart_2746() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.Alc.CaptureStart(_device);
    }
    static unsafe void Test_CaptureStop_2747() {
        System.IntPtr _device = default(System.IntPtr);
        OpenTK.Audio.OpenAL.Alc.CaptureStop(_device);
    }
    static unsafe void Test_CaptureSamples_2748() {
        System.IntPtr _device = default(System.IntPtr);
        System.IntPtr _buffer = default(System.IntPtr);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.CaptureSamples(_device,_buffer,_samples);
    }
    static unsafe void Test_CaptureSamples_2749() {
        System.IntPtr _device = default(System.IntPtr);
        int _buffer = default(int);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.CaptureSamples(_device,ref _buffer,_samples);
    }
    static unsafe void Test_CaptureSamples_2750() {
        System.IntPtr _device = default(System.IntPtr);
        int[] _buffer = default(int[]);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.CaptureSamples(_device,_buffer,_samples);
    }
    static unsafe void Test_CaptureSamples_2751() {
        System.IntPtr _device = default(System.IntPtr);
        int[,] _buffer = default(int[,]);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.CaptureSamples(_device,_buffer,_samples);
    }
    static unsafe void Test_CaptureSamples_2752() {
        System.IntPtr _device = default(System.IntPtr);
        int[,,] _buffer = default(int[,,]);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Audio.OpenAL.Alc.CaptureSamples(_device,_buffer,_samples);
    }
    static unsafe void Test_get_IsInitialized_2753() {
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsInitialized;
    }

    static unsafe void Test_GetEaxFromEfxEax_2755() {
        OpenTK.Audio.OpenAL.EffectsExtension.EaxReverb _input = default(OpenTK.Audio.OpenAL.EffectsExtension.EaxReverb);
        OpenTK.Audio.OpenAL.EffectsExtension.EfxEaxReverb _output = default(OpenTK.Audio.OpenAL.EffectsExtension.EfxEaxReverb);
        OpenTK.Audio.OpenAL.EffectsExtension.GetEaxFromEfxEax(ref _input,out _output);
    }
    static unsafe void Test_BindEffect_2756() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffectType _type = default(OpenTK.Audio.OpenAL.EfxEffectType);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindEffect(_eid,_type);
    }
    static unsafe void Test_BindEffect_2757() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffectType _type = default(OpenTK.Audio.OpenAL.EfxEffectType);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindEffect(_eid,_type);
    }
    static unsafe void Test_BindFilterToSource_2758() {
        System.UInt32 _source = default(System.UInt32);
        System.UInt32 _filter = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindFilterToSource(_source,_filter);
    }
    static unsafe void Test_BindFilterToSource_2759() {
        System.Int32 _source = default(System.Int32);
        System.Int32 _filter = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindFilterToSource(_source,_filter);
    }
    static unsafe void Test_BindEffectToAuxiliarySlot_2760() {
        System.UInt32 _auxiliaryeffectslot = default(System.UInt32);
        System.UInt32 _effect = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindEffectToAuxiliarySlot(_auxiliaryeffectslot,_effect);
    }
    static unsafe void Test_BindEffectToAuxiliarySlot_2761() {
        System.Int32 _auxiliaryeffectslot = default(System.Int32);
        System.Int32 _effect = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindEffectToAuxiliarySlot(_auxiliaryeffectslot,_effect);
    }
    static unsafe void Test_BindSourceToAuxiliarySlot_2762() {
        System.UInt32 _source = default(System.UInt32);
        System.UInt32 _slot = default(System.UInt32);
        System.Int32 _slotnumber = default(System.Int32);
        System.UInt32 _filter = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindSourceToAuxiliarySlot(_source,_slot,_slotnumber,_filter);
    }
    static unsafe void Test_BindSourceToAuxiliarySlot_2763() {
        System.Int32 _source = default(System.Int32);
        System.Int32 _slot = default(System.Int32);
        System.Int32 _slotnumber = default(System.Int32);
        System.Int32 _filter = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).BindSourceToAuxiliarySlot(_source,_slot,_slotnumber,_filter);
    }
    static unsafe void Test_GenEffects_2764() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _effects = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenEffects(_n,out _effects);
    }
    static unsafe void Test_GenEffects_2765() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _effects = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenEffects(_n,out _effects);
    }
    static unsafe void Test_GenEffects_2766() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenEffects(_n);
    }
    static unsafe void Test_GenEffect_2767() {
        System.Int32 r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenEffect();
    }
    static unsafe void Test_GenEffect_2768() {
        System.UInt32 _effect = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenEffect(out _effect);
    }
    static unsafe void Test_DeleteEffects_2769() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _effects = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffects(_n,ref _effects);
    }
    static unsafe void Test_DeleteEffects_2770() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _effects = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffects(_n,ref _effects);
    }
    static unsafe void Test_DeleteEffects_2771() {
        System.Int32[] _effects = default(System.Int32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffects(_effects);
    }
    static unsafe void Test_DeleteEffects_2772() {
        System.UInt32[] _effects = default(System.UInt32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffects(_effects);
    }
    static unsafe void Test_DeleteEffect_2773() {
        System.Int32 _effect = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffect(_effect);
    }
    static unsafe void Test_DeleteEffect_2774() {
        System.UInt32 _effect = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteEffect(ref _effect);
    }
    static unsafe void Test_IsEffect_2775() {
        System.UInt32 _eid = default(System.UInt32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsEffect(_eid);
    }
    static unsafe void Test_IsEffect_2776() {
        System.Int32 _eid = default(System.Int32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsEffect(_eid);
    }
    static unsafe void Test_Effect_2777() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffecti _param = default(OpenTK.Audio.OpenAL.EfxEffecti);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,_value);
    }
    static unsafe void Test_Effect_2778() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffecti _param = default(OpenTK.Audio.OpenAL.EfxEffecti);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,_value);
    }
    static unsafe void Test_Effect_2779() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffectf _param = default(OpenTK.Audio.OpenAL.EfxEffectf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,_value);
    }
    static unsafe void Test_Effect_2780() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffectf _param = default(OpenTK.Audio.OpenAL.EfxEffectf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,_value);
    }
    static unsafe void Test_Effect_2781() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffect3f _param = default(OpenTK.Audio.OpenAL.EfxEffect3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,ref _values);
    }
    static unsafe void Test_Effect_2782() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffect3f _param = default(OpenTK.Audio.OpenAL.EfxEffect3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Effect(_eid,_param,ref _values);
    }
    static unsafe void Test_GetEffect_2783() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffecti _pname = default(OpenTK.Audio.OpenAL.EfxEffecti);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_pname,out _value);
    }
    static unsafe void Test_GetEffect_2784() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffecti _pname = default(OpenTK.Audio.OpenAL.EfxEffecti);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_pname,out _value);
    }
    static unsafe void Test_GetEffect_2785() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffectf _pname = default(OpenTK.Audio.OpenAL.EfxEffectf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_pname,out _value);
    }
    static unsafe void Test_GetEffect_2786() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffectf _pname = default(OpenTK.Audio.OpenAL.EfxEffectf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_pname,out _value);
    }
    static unsafe void Test_GetEffect_2787() {
        System.UInt32 _eid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxEffect3f _param = default(OpenTK.Audio.OpenAL.EfxEffect3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_param,out _values);
    }
    static unsafe void Test_GetEffect_2788() {
        System.Int32 _eid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxEffect3f _param = default(OpenTK.Audio.OpenAL.EfxEffect3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetEffect(_eid,_param,out _values);
    }
    static unsafe void Test_GenFilters_2789() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _filters = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenFilters(_n,out _filters);
    }
    static unsafe void Test_GenFilters_2790() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _filters = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenFilters(_n,out _filters);
    }
    static unsafe void Test_GenFilters_2791() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenFilters(_n);
    }
    static unsafe void Test_GenFilter_2792() {
        System.Int32 r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenFilter();
    }
    static unsafe void Test_GenFilter_2793() {
        System.UInt32 _filter = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenFilter(out _filter);
    }
    static unsafe void Test_DeleteFilters_2794() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _filters = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilters(_n,ref _filters);
    }
    static unsafe void Test_DeleteFilters_2795() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _filters = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilters(_n,ref _filters);
    }
    static unsafe void Test_DeleteFilters_2796() {
        System.UInt32[] _filters = default(System.UInt32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilters(_filters);
    }
    static unsafe void Test_DeleteFilters_2797() {
        System.Int32[] _filters = default(System.Int32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilters(_filters);
    }
    static unsafe void Test_DeleteFilter_2798() {
        System.Int32 _filter = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilter(_filter);
    }
    static unsafe void Test_DeleteFilter_2799() {
        System.UInt32 _filter = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteFilter(ref _filter);
    }
    static unsafe void Test_IsFilter_2800() {
        System.UInt32 _fid = default(System.UInt32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsFilter(_fid);
    }
    static unsafe void Test_IsFilter_2801() {
        System.Int32 _fid = default(System.Int32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsFilter(_fid);
    }
    static unsafe void Test_Filter_2802() {
        System.UInt32 _fid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxFilteri _param = default(OpenTK.Audio.OpenAL.EfxFilteri);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Filter(_fid,_param,_value);
    }
    static unsafe void Test_Filter_2803() {
        System.Int32 _fid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxFilteri _param = default(OpenTK.Audio.OpenAL.EfxFilteri);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Filter(_fid,_param,_value);
    }
    static unsafe void Test_Filter_2804() {
        System.UInt32 _fid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxFilterf _param = default(OpenTK.Audio.OpenAL.EfxFilterf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Filter(_fid,_param,_value);
    }
    static unsafe void Test_Filter_2805() {
        System.Int32 _fid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxFilterf _param = default(OpenTK.Audio.OpenAL.EfxFilterf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).Filter(_fid,_param,_value);
    }
    static unsafe void Test_GetFilter_2806() {
        System.UInt32 _fid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxFilteri _pname = default(OpenTK.Audio.OpenAL.EfxFilteri);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetFilter(_fid,_pname,out _value);
    }
    static unsafe void Test_GetFilter_2807() {
        System.Int32 _fid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxFilteri _pname = default(OpenTK.Audio.OpenAL.EfxFilteri);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetFilter(_fid,_pname,out _value);
    }
    static unsafe void Test_GetFilter_2808() {
        System.UInt32 _fid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxFilterf _pname = default(OpenTK.Audio.OpenAL.EfxFilterf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetFilter(_fid,_pname,out _value);
    }
    static unsafe void Test_GetFilter_2809() {
        System.Int32 _fid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxFilterf _pname = default(OpenTK.Audio.OpenAL.EfxFilterf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetFilter(_fid,_pname,out _value);
    }
    static unsafe void Test_GenAuxiliaryEffectSlots_2810() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _slots = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenAuxiliaryEffectSlots(_n,out _slots);
    }
    static unsafe void Test_GenAuxiliaryEffectSlots_2811() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _slots = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenAuxiliaryEffectSlots(_n,out _slots);
    }
    static unsafe void Test_GenAuxiliaryEffectSlots_2812() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenAuxiliaryEffectSlots(_n);
    }
    static unsafe void Test_GenAuxiliaryEffectSlot_2813() {
        System.Int32 r = default(OpenTK.Audio.OpenAL.EffectsExtension).GenAuxiliaryEffectSlot();
    }
    static unsafe void Test_GenAuxiliaryEffectSlot_2814() {
        System.UInt32 _slot = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GenAuxiliaryEffectSlot(out _slot);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlots_2815() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _slots = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlots(_n,ref _slots);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlots_2816() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _slots = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlots(_n,ref _slots);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlots_2817() {
        System.Int32[] _slots = default(System.Int32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlots(_slots);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlots_2818() {
        System.UInt32[] _slots = default(System.UInt32[]);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlots(_slots);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlot_2819() {
        System.Int32 _slot = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlot(_slot);
    }
    static unsafe void Test_DeleteAuxiliaryEffectSlot_2820() {
        System.UInt32 _slot = default(System.UInt32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).DeleteAuxiliaryEffectSlot(ref _slot);
    }
    static unsafe void Test_IsAuxiliaryEffectSlot_2821() {
        System.UInt32 _slot = default(System.UInt32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsAuxiliaryEffectSlot(_slot);
    }
    static unsafe void Test_IsAuxiliaryEffectSlot_2822() {
        System.Int32 _slot = default(System.Int32);
        System.Boolean r = default(OpenTK.Audio.OpenAL.EffectsExtension).IsAuxiliaryEffectSlot(_slot);
    }
    static unsafe void Test_AuxiliaryEffectSlot_2823() {
        System.UInt32 _asid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryi _param = default(OpenTK.Audio.OpenAL.EfxAuxiliaryi);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).AuxiliaryEffectSlot(_asid,_param,_value);
    }
    static unsafe void Test_AuxiliaryEffectSlot_2824() {
        System.Int32 _asid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryi _param = default(OpenTK.Audio.OpenAL.EfxAuxiliaryi);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).AuxiliaryEffectSlot(_asid,_param,_value);
    }
    static unsafe void Test_AuxiliaryEffectSlot_2825() {
        System.UInt32 _asid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryf _param = default(OpenTK.Audio.OpenAL.EfxAuxiliaryf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).AuxiliaryEffectSlot(_asid,_param,_value);
    }
    static unsafe void Test_AuxiliaryEffectSlot_2826() {
        System.Int32 _asid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryf _param = default(OpenTK.Audio.OpenAL.EfxAuxiliaryf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).AuxiliaryEffectSlot(_asid,_param,_value);
    }
    static unsafe void Test_GetAuxiliaryEffectSlot_2827() {
        System.UInt32 _asid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryi _pname = default(OpenTK.Audio.OpenAL.EfxAuxiliaryi);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetAuxiliaryEffectSlot(_asid,_pname,out _value);
    }
    static unsafe void Test_GetAuxiliaryEffectSlot_2828() {
        System.Int32 _asid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryi _pname = default(OpenTK.Audio.OpenAL.EfxAuxiliaryi);
        System.Int32 _value = default(System.Int32);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetAuxiliaryEffectSlot(_asid,_pname,out _value);
    }
    static unsafe void Test_GetAuxiliaryEffectSlot_2829() {
        System.UInt32 _asid = default(System.UInt32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryf _pname = default(OpenTK.Audio.OpenAL.EfxAuxiliaryf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetAuxiliaryEffectSlot(_asid,_pname,out _value);
    }
    static unsafe void Test_GetAuxiliaryEffectSlot_2830() {
        System.Int32 _asid = default(System.Int32);
        OpenTK.Audio.OpenAL.EfxAuxiliaryf _pname = default(OpenTK.Audio.OpenAL.EfxAuxiliaryf);
        System.Single _value = default(System.Single);
        default(OpenTK.Audio.OpenAL.EffectsExtension).GetAuxiliaryEffectSlot(_asid,_pname,out _value);
    }
    static void Test_EfxEffectf_2831() {
        var _ReverbDensity = OpenTK.Audio.OpenAL.EfxEffectf.ReverbDensity;
        var _ReverbDiffusion = OpenTK.Audio.OpenAL.EfxEffectf.ReverbDiffusion;
        var _ReverbGain = OpenTK.Audio.OpenAL.EfxEffectf.ReverbGain;
        var _ReverbGainHF = OpenTK.Audio.OpenAL.EfxEffectf.ReverbGainHF;
        var _ReverbDecayTime = OpenTK.Audio.OpenAL.EfxEffectf.ReverbDecayTime;
        var _ReverbDecayHFRatio = OpenTK.Audio.OpenAL.EfxEffectf.ReverbDecayHFRatio;
        var _ReverbReflectionsGain = OpenTK.Audio.OpenAL.EfxEffectf.ReverbReflectionsGain;
        var _ReverbReflectionsDelay = OpenTK.Audio.OpenAL.EfxEffectf.ReverbReflectionsDelay;
        var _ReverbLateReverbGain = OpenTK.Audio.OpenAL.EfxEffectf.ReverbLateReverbGain;
        var _ReverbLateReverbDelay = OpenTK.Audio.OpenAL.EfxEffectf.ReverbLateReverbDelay;
        var _ReverbAirAbsorptionGainHF = OpenTK.Audio.OpenAL.EfxEffectf.ReverbAirAbsorptionGainHF;
        var _ReverbRoomRolloffFactor = OpenTK.Audio.OpenAL.EfxEffectf.ReverbRoomRolloffFactor;
        var _ChorusRate = OpenTK.Audio.OpenAL.EfxEffectf.ChorusRate;
        var _ChorusDepth = OpenTK.Audio.OpenAL.EfxEffectf.ChorusDepth;
        var _ChorusFeedback = OpenTK.Audio.OpenAL.EfxEffectf.ChorusFeedback;
        var _ChorusDelay = OpenTK.Audio.OpenAL.EfxEffectf.ChorusDelay;
        var _DistortionEdge = OpenTK.Audio.OpenAL.EfxEffectf.DistortionEdge;
        var _DistortionGain = OpenTK.Audio.OpenAL.EfxEffectf.DistortionGain;
        var _DistortionLowpassCutoff = OpenTK.Audio.OpenAL.EfxEffectf.DistortionLowpassCutoff;
        var _DistortionEQCenter = OpenTK.Audio.OpenAL.EfxEffectf.DistortionEQCenter;
        var _DistortionEQBandwidth = OpenTK.Audio.OpenAL.EfxEffectf.DistortionEQBandwidth;
        var _EchoDelay = OpenTK.Audio.OpenAL.EfxEffectf.EchoDelay;
        var _EchoLRDelay = OpenTK.Audio.OpenAL.EfxEffectf.EchoLRDelay;
        var _EchoDamping = OpenTK.Audio.OpenAL.EfxEffectf.EchoDamping;
        var _EchoFeedback = OpenTK.Audio.OpenAL.EfxEffectf.EchoFeedback;
        var _EchoSpread = OpenTK.Audio.OpenAL.EfxEffectf.EchoSpread;
        var _FlangerRate = OpenTK.Audio.OpenAL.EfxEffectf.FlangerRate;
        var _FlangerDepth = OpenTK.Audio.OpenAL.EfxEffectf.FlangerDepth;
        var _FlangerFeedback = OpenTK.Audio.OpenAL.EfxEffectf.FlangerFeedback;
        var _FlangerDelay = OpenTK.Audio.OpenAL.EfxEffectf.FlangerDelay;
        var _FrequencyShifterFrequency = OpenTK.Audio.OpenAL.EfxEffectf.FrequencyShifterFrequency;
        var _VocalMorpherRate = OpenTK.Audio.OpenAL.EfxEffectf.VocalMorpherRate;
        var _RingModulatorFrequency = OpenTK.Audio.OpenAL.EfxEffectf.RingModulatorFrequency;
        var _RingModulatorHighpassCutoff = OpenTK.Audio.OpenAL.EfxEffectf.RingModulatorHighpassCutoff;
        var _AutowahAttackTime = OpenTK.Audio.OpenAL.EfxEffectf.AutowahAttackTime;
        var _AutowahReleaseTime = OpenTK.Audio.OpenAL.EfxEffectf.AutowahReleaseTime;
        var _AutowahResonance = OpenTK.Audio.OpenAL.EfxEffectf.AutowahResonance;
        var _AutowahPeakGain = OpenTK.Audio.OpenAL.EfxEffectf.AutowahPeakGain;
        var _EqualizerLowGain = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerLowGain;
        var _EqualizerLowCutoff = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerLowCutoff;
        var _EqualizerMid1Gain = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid1Gain;
        var _EqualizerMid1Center = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid1Center;
        var _EqualizerMid1Width = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid1Width;
        var _EqualizerMid2Gain = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid2Gain;
        var _EqualizerMid2Center = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid2Center;
        var _EqualizerMid2Width = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerMid2Width;
        var _EqualizerHighGain = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerHighGain;
        var _EqualizerHighCutoff = OpenTK.Audio.OpenAL.EfxEffectf.EqualizerHighCutoff;
        var _EaxReverbDensity = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbDensity;
        var _EaxReverbDiffusion = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbDiffusion;
        var _EaxReverbGain = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbGain;
        var _EaxReverbGainHF = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbGainHF;
        var _EaxReverbGainLF = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbGainLF;
        var _EaxReverbDecayTime = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbDecayTime;
        var _EaxReverbDecayHFRatio = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbDecayHFRatio;
        var _EaxReverbDecayLFRatio = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbDecayLFRatio;
        var _EaxReverbReflectionsGain = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbReflectionsGain;
        var _EaxReverbReflectionsDelay = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbReflectionsDelay;
        var _EaxReverbLateReverbGain = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbLateReverbGain;
        var _EaxReverbLateReverbDelay = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbLateReverbDelay;
        var _EaxReverbEchoTime = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbEchoTime;
        var _EaxReverbEchoDepth = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbEchoDepth;
        var _EaxReverbModulationTime = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbModulationTime;
        var _EaxReverbModulationDepth = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbModulationDepth;
        var _EaxReverbAirAbsorptionGainHF = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbAirAbsorptionGainHF;
        var _EaxReverbHFReference = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbHFReference;
        var _EaxReverbLFReference = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbLFReference;
        var _EaxReverbRoomRolloffFactor = OpenTK.Audio.OpenAL.EfxEffectf.EaxReverbRoomRolloffFactor;
    }
    static void Test_EfxEffect3f_2832() {
        var _EaxReverbLateReverbPan = OpenTK.Audio.OpenAL.EfxEffect3f.EaxReverbLateReverbPan;
        var _EaxReverbReflectionsPan = OpenTK.Audio.OpenAL.EfxEffect3f.EaxReverbReflectionsPan;
    }
    static void Test_EfxEffecti_2833() {
        var _ChorusWaveform = OpenTK.Audio.OpenAL.EfxEffecti.ChorusWaveform;
        var _ChorusPhase = OpenTK.Audio.OpenAL.EfxEffecti.ChorusPhase;
        var _FlangerWaveform = OpenTK.Audio.OpenAL.EfxEffecti.FlangerWaveform;
        var _FlangerPhase = OpenTK.Audio.OpenAL.EfxEffecti.FlangerPhase;
        var _FrequencyShifterLeftDirection = OpenTK.Audio.OpenAL.EfxEffecti.FrequencyShifterLeftDirection;
        var _FrequencyShifterRightDirection = OpenTK.Audio.OpenAL.EfxEffecti.FrequencyShifterRightDirection;
        var _VocalMorpherPhonemeA = OpenTK.Audio.OpenAL.EfxEffecti.VocalMorpherPhonemeA;
        var _VocalMorpherPhonemeACoarseTuning = OpenTK.Audio.OpenAL.EfxEffecti.VocalMorpherPhonemeACoarseTuning;
        var _VocalMorpherPhonemeB = OpenTK.Audio.OpenAL.EfxEffecti.VocalMorpherPhonemeB;
        var _VocalMorpherPhonemeBCoarseTuning = OpenTK.Audio.OpenAL.EfxEffecti.VocalMorpherPhonemeBCoarseTuning;
        var _VocalMorpherWaveform = OpenTK.Audio.OpenAL.EfxEffecti.VocalMorpherWaveform;
        var _PitchShifterCoarseTune = OpenTK.Audio.OpenAL.EfxEffecti.PitchShifterCoarseTune;
        var _PitchShifterFineTune = OpenTK.Audio.OpenAL.EfxEffecti.PitchShifterFineTune;
        var _RingModulatorWaveform = OpenTK.Audio.OpenAL.EfxEffecti.RingModulatorWaveform;
        var _CompressorOnoff = OpenTK.Audio.OpenAL.EfxEffecti.CompressorOnoff;
        var _ReverbDecayHFLimit = OpenTK.Audio.OpenAL.EfxEffecti.ReverbDecayHFLimit;
        var _EaxReverbDecayHFLimit = OpenTK.Audio.OpenAL.EfxEffecti.EaxReverbDecayHFLimit;
        var _EffectType = OpenTK.Audio.OpenAL.EfxEffecti.EffectType;
    }
    static void Test_EfxFormantFilterSettings_2834() {
        var _VocalMorpherPhonemeA = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeA;
        var _VocalMorpherPhonemeE = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeE;
        var _VocalMorpherPhonemeI = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeI;
        var _VocalMorpherPhonemeO = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeO;
        var _VocalMorpherPhonemeU = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeU;
        var _VocalMorpherPhonemeAA = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeAA;
        var _VocalMorpherPhonemeAE = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeAE;
        var _VocalMorpherPhonemeAH = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeAH;
        var _VocalMorpherPhonemeAO = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeAO;
        var _VocalMorpherPhonemeEH = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeEH;
        var _VocalMorpherPhonemeER = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeER;
        var _VocalMorpherPhonemeIH = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeIH;
        var _VocalMorpherPhonemeIY = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeIY;
        var _VocalMorpherPhonemeUH = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeUH;
        var _VocalMorpherPhonemeUW = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeUW;
        var _VocalMorpherPhonemeB = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeB;
        var _VocalMorpherPhonemeD = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeD;
        var _VocalMorpherPhonemeF = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeF;
        var _VocalMorpherPhonemeG = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeG;
        var _VocalMorpherPhonemeJ = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeJ;
        var _VocalMorpherPhonemeK = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeK;
        var _VocalMorpherPhonemeL = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeL;
        var _VocalMorpherPhonemeM = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeM;
        var _VocalMorpherPhonemeN = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeN;
        var _VocalMorpherPhonemeP = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeP;
        var _VocalMorpherPhonemeR = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeR;
        var _VocalMorpherPhonemeS = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeS;
        var _VocalMorpherPhonemeT = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeT;
        var _VocalMorpherPhonemeV = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeV;
        var _VocalMorpherPhonemeZ = OpenTK.Audio.OpenAL.EfxFormantFilterSettings.VocalMorpherPhonemeZ;
    }
    static void Test_EfxEffectType_2835() {
        var _Null = OpenTK.Audio.OpenAL.EfxEffectType.Null;
        var _Reverb = OpenTK.Audio.OpenAL.EfxEffectType.Reverb;
        var _Chorus = OpenTK.Audio.OpenAL.EfxEffectType.Chorus;
        var _Distortion = OpenTK.Audio.OpenAL.EfxEffectType.Distortion;
        var _Echo = OpenTK.Audio.OpenAL.EfxEffectType.Echo;
        var _Flanger = OpenTK.Audio.OpenAL.EfxEffectType.Flanger;
        var _FrequencyShifter = OpenTK.Audio.OpenAL.EfxEffectType.FrequencyShifter;
        var _VocalMorpher = OpenTK.Audio.OpenAL.EfxEffectType.VocalMorpher;
        var _PitchShifter = OpenTK.Audio.OpenAL.EfxEffectType.PitchShifter;
        var _RingModulator = OpenTK.Audio.OpenAL.EfxEffectType.RingModulator;
        var _Autowah = OpenTK.Audio.OpenAL.EfxEffectType.Autowah;
        var _Compressor = OpenTK.Audio.OpenAL.EfxEffectType.Compressor;
        var _Equalizer = OpenTK.Audio.OpenAL.EfxEffectType.Equalizer;
        var _EaxReverb = OpenTK.Audio.OpenAL.EfxEffectType.EaxReverb;
    }
    static void Test_EfxAuxiliaryi_2836() {
        var _EffectslotEffect = OpenTK.Audio.OpenAL.EfxAuxiliaryi.EffectslotEffect;
        var _EffectslotAuxiliarySendAuto = OpenTK.Audio.OpenAL.EfxAuxiliaryi.EffectslotAuxiliarySendAuto;
    }
    static void Test_EfxAuxiliaryf_2837() {
        var _EffectslotGain = OpenTK.Audio.OpenAL.EfxAuxiliaryf.EffectslotGain;
    }
    static void Test_EfxFilterf_2838() {
        var _LowpassGain = OpenTK.Audio.OpenAL.EfxFilterf.LowpassGain;
        var _LowpassGainHF = OpenTK.Audio.OpenAL.EfxFilterf.LowpassGainHF;
        var _HighpassGain = OpenTK.Audio.OpenAL.EfxFilterf.HighpassGain;
        var _HighpassGainLF = OpenTK.Audio.OpenAL.EfxFilterf.HighpassGainLF;
        var _BandpassGain = OpenTK.Audio.OpenAL.EfxFilterf.BandpassGain;
        var _BandpassGainLF = OpenTK.Audio.OpenAL.EfxFilterf.BandpassGainLF;
        var _BandpassGainHF = OpenTK.Audio.OpenAL.EfxFilterf.BandpassGainHF;
    }
    static void Test_EfxFilteri_2839() {
        var _FilterType = OpenTK.Audio.OpenAL.EfxFilteri.FilterType;
    }
    static void Test_EfxFilterType_2840() {
        var _Null = OpenTK.Audio.OpenAL.EfxFilterType.Null;
        var _Lowpass = OpenTK.Audio.OpenAL.EfxFilterType.Lowpass;
        var _Highpass = OpenTK.Audio.OpenAL.EfxFilterType.Highpass;
        var _Bandpass = OpenTK.Audio.OpenAL.EfxFilterType.Bandpass;
    }
    static unsafe void Test_get_IsInitialized_2841() {
        System.Boolean r = default(OpenTK.Audio.OpenAL.XRamExtension).IsInitialized;
    }

    static unsafe void Test_get_GetRamSize_2843() {
        System.Int32 r = default(OpenTK.Audio.OpenAL.XRamExtension).GetRamSize;
    }
    static unsafe void Test_get_GetRamFree_2844() {
        System.Int32 r = default(OpenTK.Audio.OpenAL.XRamExtension).GetRamFree;
    }
    static unsafe void Test_SetBufferMode_2845() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Audio.OpenAL.XRamExtension.XRamStorage _mode = default(OpenTK.Audio.OpenAL.XRamExtension.XRamStorage);
        System.Boolean r = default(OpenTK.Audio.OpenAL.XRamExtension).SetBufferMode(_n,ref _buffer,_mode);
    }
    static unsafe void Test_SetBufferMode_2846() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Audio.OpenAL.XRamExtension.XRamStorage _mode = default(OpenTK.Audio.OpenAL.XRamExtension.XRamStorage);
        System.Boolean r = default(OpenTK.Audio.OpenAL.XRamExtension).SetBufferMode(_n,ref _buffer,_mode);
    }
    static unsafe void Test_GetBufferMode_2847() {
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Audio.OpenAL.XRamExtension.XRamStorage r = default(OpenTK.Audio.OpenAL.XRamExtension).GetBufferMode(ref _buffer);
    }
    static unsafe void Test_GetBufferMode_2848() {
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Audio.OpenAL.XRamExtension.XRamStorage r = default(OpenTK.Audio.OpenAL.XRamExtension).GetBufferMode(ref _buffer);
    }
    static unsafe void Test_Enable_2849() {
        OpenTK.Audio.OpenAL.ALCapability _capability = default(OpenTK.Audio.OpenAL.ALCapability);
        OpenTK.Audio.OpenAL.AL.Enable(_capability);
    }
    static unsafe void Test_Disable_2850() {
        OpenTK.Audio.OpenAL.ALCapability _capability = default(OpenTK.Audio.OpenAL.ALCapability);
        OpenTK.Audio.OpenAL.AL.Disable(_capability);
    }
    static unsafe void Test_IsEnabled_2851() {
        OpenTK.Audio.OpenAL.ALCapability _capability = default(OpenTK.Audio.OpenAL.ALCapability);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsEnabled(_capability);
    }
    static unsafe void Test_Get_2852() {
        OpenTK.Audio.OpenAL.ALGetString _param = default(OpenTK.Audio.OpenAL.ALGetString);
        System.String r = OpenTK.Audio.OpenAL.AL.Get(_param);
    }
    static unsafe void Test_GetErrorString_2853() {
        OpenTK.Audio.OpenAL.ALError _param = default(OpenTK.Audio.OpenAL.ALError);
        System.String r = OpenTK.Audio.OpenAL.AL.GetErrorString(_param);
    }
    static unsafe void Test_Get_2854() {
        OpenTK.Audio.OpenAL.ALGetInteger _param = default(OpenTK.Audio.OpenAL.ALGetInteger);
        System.Int32 r = OpenTK.Audio.OpenAL.AL.Get(_param);
    }
    static unsafe void Test_Get_2855() {
        OpenTK.Audio.OpenAL.ALGetFloat _param = default(OpenTK.Audio.OpenAL.ALGetFloat);
        System.Single r = OpenTK.Audio.OpenAL.AL.Get(_param);
    }
    static unsafe void Test_GetError_2856() {
        OpenTK.Audio.OpenAL.ALError r = OpenTK.Audio.OpenAL.AL.GetError();
    }
    static unsafe void Test_IsExtensionPresent_2857() {
        System.String _extname = default(System.String);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsExtensionPresent(_extname);
    }
    static unsafe void Test_GetProcAddress_2858() {
        System.String _fname = default(System.String);
        System.IntPtr r = OpenTK.Audio.OpenAL.AL.GetProcAddress(_fname);
    }
    static unsafe void Test_GetEnumValue_2859() {
        System.String _ename = default(System.String);
        System.Int32 r = OpenTK.Audio.OpenAL.AL.GetEnumValue(_ename);
    }
    static unsafe void Test_Listener_2860() {
        OpenTK.Audio.OpenAL.ALListenerf _param = default(OpenTK.Audio.OpenAL.ALListenerf);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Listener(_param,_value);
    }
    static unsafe void Test_Listener_2861() {
        OpenTK.Audio.OpenAL.ALListener3f _param = default(OpenTK.Audio.OpenAL.ALListener3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Listener(_param,_value1,_value2,_value3);
    }
    static unsafe void Test_Listener_2862() {
        OpenTK.Audio.OpenAL.ALListener3f _param = default(OpenTK.Audio.OpenAL.ALListener3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.Listener(_param,ref _values);
    }
    static unsafe void Test_Listener_2863() {
        OpenTK.Audio.OpenAL.ALListenerfv _param = default(OpenTK.Audio.OpenAL.ALListenerfv);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Audio.OpenAL.AL.Listener(_param,ref _values);
    }
    static unsafe void Test_Listener_2864() {
        OpenTK.Audio.OpenAL.ALListenerfv _param = default(OpenTK.Audio.OpenAL.ALListenerfv);
        OpenTK.Vector3 _at = default(OpenTK.Vector3);
        OpenTK.Vector3 _up = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.Listener(_param,ref _at,ref _up);
    }
    static unsafe void Test_GetListener_2865() {
        OpenTK.Audio.OpenAL.ALListenerf _param = default(OpenTK.Audio.OpenAL.ALListenerf);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetListener(_param,out _value);
    }
    static unsafe void Test_GetListener_2866() {
        OpenTK.Audio.OpenAL.ALListener3f _param = default(OpenTK.Audio.OpenAL.ALListener3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetListener(_param,out _value1,out _value2,out _value3);
    }
    static unsafe void Test_GetListener_2867() {
        OpenTK.Audio.OpenAL.ALListener3f _param = default(OpenTK.Audio.OpenAL.ALListener3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.GetListener(_param,out _values);
    }
    static unsafe void Test_GetListener_2868() {
        OpenTK.Audio.OpenAL.ALListenerfv _param = default(OpenTK.Audio.OpenAL.ALListenerfv);
        System.Single* _values = default(System.Single*);
        OpenTK.Audio.OpenAL.AL.GetListener(_param,_values);
    }
    static unsafe void Test_GetListener_2869() {
        OpenTK.Audio.OpenAL.ALListenerfv _param = default(OpenTK.Audio.OpenAL.ALListenerfv);
        OpenTK.Vector3 _at = default(OpenTK.Vector3);
        OpenTK.Vector3 _up = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.GetListener(_param,out _at,out _up);
    }
    static unsafe void Test_GenSources_2870() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _sources = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.GenSources(_n,out _sources);
    }
    static unsafe void Test_GenSources_2871() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _sources = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GenSources(_n,out _sources);
    }
    static unsafe void Test_GenSources_2872() {
        System.Int32[] _sources = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.GenSources(_sources);
    }
    static unsafe void Test_GenSources_2873() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] r = OpenTK.Audio.OpenAL.AL.GenSources(_n);
    }
    static unsafe void Test_GenSource_2874() {
        System.Int32 r = OpenTK.Audio.OpenAL.AL.GenSource();
    }
    static unsafe void Test_GenSource_2875() {
        System.UInt32 _source = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.GenSource(out _source);
    }
    static unsafe void Test_DeleteSources_2876() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _sources = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.DeleteSources(_n,_sources);
    }
    static unsafe void Test_DeleteSources_2877() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _sources = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.DeleteSources(_n,ref _sources);
    }
    static unsafe void Test_DeleteSources_2878() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _sources = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.DeleteSources(_n,ref _sources);
    }
    static unsafe void Test_DeleteSources_2879() {
        System.UInt32[] _sources = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.DeleteSources(_sources);
    }
    static unsafe void Test_DeleteSources_2880() {
        System.Int32[] _sources = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.DeleteSources(_sources);
    }
    static unsafe void Test_DeleteSource_2881() {
        System.UInt32 _source = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.DeleteSource(ref _source);
    }
    static unsafe void Test_DeleteSource_2882() {
        System.Int32 _source = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.DeleteSource(_source);
    }
    static unsafe void Test_IsSource_2883() {
        System.UInt32 _sid = default(System.UInt32);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsSource(_sid);
    }
    static unsafe void Test_IsSource_2884() {
        System.Int32 _sid = default(System.Int32);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsSource(_sid);
    }
    static unsafe void Test_Source_2885() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourcef _param = default(OpenTK.Audio.OpenAL.ALSourcef);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_Source_2886() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourcef _param = default(OpenTK.Audio.OpenAL.ALSourcef);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_Source_2887() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value1,_value2,_value3);
    }
    static unsafe void Test_Source_2888() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value1,_value2,_value3);
    }
    static unsafe void Test_Source_2889() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,ref _values);
    }
    static unsafe void Test_Source_2890() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,ref _values);
    }
    static unsafe void Test_Source_2891() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourcei _param = default(OpenTK.Audio.OpenAL.ALSourcei);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_Source_2892() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourcei _param = default(OpenTK.Audio.OpenAL.ALSourcei);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_Source_2893() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourceb _param = default(OpenTK.Audio.OpenAL.ALSourceb);
        System.Boolean _value = default(System.Boolean);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_Source_2894() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourceb _param = default(OpenTK.Audio.OpenAL.ALSourceb);
        System.Boolean _value = default(System.Boolean);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value);
    }
    static unsafe void Test_BindBufferToSource_2895() {
        System.UInt32 _source = default(System.UInt32);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.BindBufferToSource(_source,_buffer);
    }
    static unsafe void Test_BindBufferToSource_2896() {
        System.Int32 _source = default(System.Int32);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.BindBufferToSource(_source,_buffer);
    }
    static unsafe void Test_Source_2897() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSource3i _param = default(OpenTK.Audio.OpenAL.ALSource3i);
        System.Int32 _value1 = default(System.Int32);
        System.Int32 _value2 = default(System.Int32);
        System.Int32 _value3 = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value1,_value2,_value3);
    }
    static unsafe void Test_Source_2898() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSource3i _param = default(OpenTK.Audio.OpenAL.ALSource3i);
        System.Int32 _value1 = default(System.Int32);
        System.Int32 _value2 = default(System.Int32);
        System.Int32 _value3 = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.Source(_sid,_param,_value1,_value2,_value3);
    }
    static unsafe void Test_GetSource_2899() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourcef _param = default(OpenTK.Audio.OpenAL.ALSourcef);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_GetSource_2900() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourcef _param = default(OpenTK.Audio.OpenAL.ALSourcef);
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_GetSource_2901() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value1,out _value2,out _value3);
    }
    static unsafe void Test_GetSource_2902() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        System.Single _value1 = default(System.Single);
        System.Single _value2 = default(System.Single);
        System.Single _value3 = default(System.Single);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value1,out _value2,out _value3);
    }
    static unsafe void Test_GetSource_2903() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _values);
    }
    static unsafe void Test_GetSource_2904() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSource3f _param = default(OpenTK.Audio.OpenAL.ALSource3f);
        OpenTK.Vector3 _values = default(OpenTK.Vector3);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _values);
    }
    static unsafe void Test_GetSource_2905() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALGetSourcei _param = default(OpenTK.Audio.OpenAL.ALGetSourcei);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_GetSource_2906() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALGetSourcei _param = default(OpenTK.Audio.OpenAL.ALGetSourcei);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_GetSource_2907() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourceb _param = default(OpenTK.Audio.OpenAL.ALSourceb);
        System.Boolean _value = default(System.Boolean);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_GetSource_2908() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourceb _param = default(OpenTK.Audio.OpenAL.ALSourceb);
        System.Boolean _value = default(System.Boolean);
        OpenTK.Audio.OpenAL.AL.GetSource(_sid,_param,out _value);
    }
    static unsafe void Test_SourcePlay_2909() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32* _sids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_ns,_sids);
    }
    static unsafe void Test_SourcePlay_2910() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32[] _sids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_ns,_sids);
    }
    static unsafe void Test_SourcePlay_2911() {
        System.Int32 _ns = default(System.Int32);
        System.Int32[] _sids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_ns,_sids);
    }
    static unsafe void Test_SourcePlay_2912() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32 _sids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_ns,ref _sids);
    }
    static unsafe void Test_SourceStop_2913() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32* _sids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourceStop(_ns,_sids);
    }
    static unsafe void Test_SourceStop_2914() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32[] _sids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourceStop(_ns,_sids);
    }
    static unsafe void Test_SourceStop_2915() {
        System.Int32 _ns = default(System.Int32);
        System.Int32[] _sids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourceStop(_ns,_sids);
    }
    static unsafe void Test_SourceStop_2916() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32 _sids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceStop(_ns,ref _sids);
    }
    static unsafe void Test_SourceRewind_2917() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32* _sids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_ns,_sids);
    }
    static unsafe void Test_SourceRewind_2918() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32[] _sids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_ns,_sids);
    }
    static unsafe void Test_SourceRewind_2919() {
        System.Int32 _ns = default(System.Int32);
        System.Int32[] _sids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_ns,_sids);
    }
    static unsafe void Test_SourceRewind_2920() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32 _sids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_ns,ref _sids);
    }
    static unsafe void Test_SourcePause_2921() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32* _sids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourcePause(_ns,_sids);
    }
    static unsafe void Test_SourcePause_2922() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32[] _sids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourcePause(_ns,_sids);
    }
    static unsafe void Test_SourcePause_2923() {
        System.Int32 _ns = default(System.Int32);
        System.Int32[] _sids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourcePause(_ns,_sids);
    }
    static unsafe void Test_SourcePause_2924() {
        System.Int32 _ns = default(System.Int32);
        System.UInt32 _sids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourcePause(_ns,ref _sids);
    }
    static unsafe void Test_SourcePlay_2925() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_sid);
    }
    static unsafe void Test_SourcePlay_2926() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourcePlay(_sid);
    }
    static unsafe void Test_SourceStop_2927() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceStop(_sid);
    }
    static unsafe void Test_SourceStop_2928() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourceStop(_sid);
    }
    static unsafe void Test_SourceRewind_2929() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_sid);
    }
    static unsafe void Test_SourceRewind_2930() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourceRewind(_sid);
    }
    static unsafe void Test_SourcePause_2931() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourcePause(_sid);
    }
    static unsafe void Test_SourcePause_2932() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourcePause(_sid);
    }
    static unsafe void Test_SourceQueueBuffers_2933() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32* _bids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourceQueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceQueueBuffers_2934() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32[] _bids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourceQueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceQueueBuffers_2935() {
        System.Int32 _sid = default(System.Int32);
        System.Int32 _numEntries = default(System.Int32);
        System.Int32[] _bids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourceQueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceQueueBuffers_2936() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32 _bids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceQueueBuffers(_sid,_numEntries,ref _bids);
    }
    static unsafe void Test_SourceQueueBuffer_2937() {
        System.Int32 _source = default(System.Int32);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourceQueueBuffer(_source,_buffer);
    }
    static unsafe void Test_SourceUnqueueBuffers_2938() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32* _bids = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceUnqueueBuffers_2939() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32[] _bids = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceUnqueueBuffers_2940() {
        System.Int32 _sid = default(System.Int32);
        System.Int32 _numEntries = default(System.Int32);
        System.Int32[] _bids = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries,_bids);
    }
    static unsafe void Test_SourceUnqueueBuffers_2941() {
        System.UInt32 _sid = default(System.UInt32);
        System.Int32 _numEntries = default(System.Int32);
        System.UInt32 _bids = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries,ref _bids);
    }
    static unsafe void Test_SourceUnqueueBuffers_2942() {
        System.Int32 _sid = default(System.Int32);
        System.Int32 _numEntries = default(System.Int32);
        System.Int32 _bids = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries,ref _bids);
    }
    static unsafe void Test_SourceUnqueueBuffer_2943() {
        System.Int32 _sid = default(System.Int32);
        System.Int32 r = OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffer(_sid);
    }
    static unsafe void Test_SourceUnqueueBuffers_2944() {
        System.Int32 _sid = default(System.Int32);
        System.Int32 _numEntries = default(System.Int32);
        System.Int32[] r = OpenTK.Audio.OpenAL.AL.SourceUnqueueBuffers(_sid,_numEntries);
    }
    static unsafe void Test_GenBuffers_2945() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_2946() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_2947() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_2948() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] r = OpenTK.Audio.OpenAL.AL.GenBuffers(_n);
    }
    static unsafe void Test_GenBuffer_2949() {
        System.Int32 r = OpenTK.Audio.OpenAL.AL.GenBuffer();
    }
    static unsafe void Test_GenBuffer_2950() {
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.GenBuffer(out _buffer);
    }
    static unsafe void Test_DeleteBuffers_2951() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Audio.OpenAL.AL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_2952() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_2953() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_2954() {
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Audio.OpenAL.AL.DeleteBuffers(_buffers);
    }
    static unsafe void Test_DeleteBuffers_2955() {
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Audio.OpenAL.AL.DeleteBuffers(_buffers);
    }
    static unsafe void Test_DeleteBuffer_2956() {
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Audio.OpenAL.AL.DeleteBuffer(ref _buffer);
    }
    static unsafe void Test_DeleteBuffer_2957() {
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.DeleteBuffer(_buffer);
    }
    static unsafe void Test_IsBuffer_2958() {
        System.UInt32 _bid = default(System.UInt32);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsBuffer(_bid);
    }
    static unsafe void Test_IsBuffer_2959() {
        System.Int32 _bid = default(System.Int32);
        System.Boolean r = OpenTK.Audio.OpenAL.AL.IsBuffer(_bid);
    }
    static unsafe void Test_BufferData_2960() {
        System.UInt32 _bid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALFormat _format = default(OpenTK.Audio.OpenAL.ALFormat);
        System.IntPtr _buffer = default(System.IntPtr);
        System.Int32 _size = default(System.Int32);
        System.Int32 _freq = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.BufferData(_bid,_format,_buffer,_size,_freq);
    }
    static unsafe void Test_BufferData_2961() {
        System.Int32 _bid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALFormat _format = default(OpenTK.Audio.OpenAL.ALFormat);
        System.IntPtr _buffer = default(System.IntPtr);
        System.Int32 _size = default(System.Int32);
        System.Int32 _freq = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.BufferData(_bid,_format,_buffer,_size,_freq);
    }
    static unsafe void Test_BufferData_2962() {
        System.Int32 _bid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALFormat _format = default(OpenTK.Audio.OpenAL.ALFormat);
        int[] _buffer = default(int[]);
        System.Int32 _size = default(System.Int32);
        System.Int32 _freq = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.BufferData<int>(_bid,_format,_buffer,_size,_freq);
    }
    static unsafe void Test_GetBuffer_2963() {
        System.UInt32 _bid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALGetBufferi _param = default(OpenTK.Audio.OpenAL.ALGetBufferi);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GetBuffer(_bid,_param,out _value);
    }
    static unsafe void Test_GetBuffer_2964() {
        System.Int32 _bid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALGetBufferi _param = default(OpenTK.Audio.OpenAL.ALGetBufferi);
        System.Int32 _value = default(System.Int32);
        OpenTK.Audio.OpenAL.AL.GetBuffer(_bid,_param,out _value);
    }
    static unsafe void Test_DopplerFactor_2965() {
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.DopplerFactor(_value);
    }
    static unsafe void Test_DopplerVelocity_2966() {
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.DopplerVelocity(_value);
    }
    static unsafe void Test_SpeedOfSound_2967() {
        System.Single _value = default(System.Single);
        OpenTK.Audio.OpenAL.AL.SpeedOfSound(_value);
    }
    static unsafe void Test_DistanceModel_2968() {
        OpenTK.Audio.OpenAL.ALDistanceModel _distancemodel = default(OpenTK.Audio.OpenAL.ALDistanceModel);
        OpenTK.Audio.OpenAL.AL.DistanceModel(_distancemodel);
    }
    static unsafe void Test_GetSourceState_2969() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourceState r = OpenTK.Audio.OpenAL.AL.GetSourceState(_sid);
    }
    static unsafe void Test_GetSourceState_2970() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourceState r = OpenTK.Audio.OpenAL.AL.GetSourceState(_sid);
    }
    static unsafe void Test_GetSourceType_2971() {
        System.UInt32 _sid = default(System.UInt32);
        OpenTK.Audio.OpenAL.ALSourceType r = OpenTK.Audio.OpenAL.AL.GetSourceType(_sid);
    }
    static unsafe void Test_GetSourceType_2972() {
        System.Int32 _sid = default(System.Int32);
        OpenTK.Audio.OpenAL.ALSourceType r = OpenTK.Audio.OpenAL.AL.GetSourceType(_sid);
    }
    static unsafe void Test_GetDistanceModel_2973() {
        OpenTK.Audio.OpenAL.ALDistanceModel r = OpenTK.Audio.OpenAL.AL.GetDistanceModel();
    }
    static void Test_ALCapability_2974() {
        var _Invalid = OpenTK.Audio.OpenAL.ALCapability.Invalid;
    }
    static void Test_ALListenerf_2975() {
        var _Gain = OpenTK.Audio.OpenAL.ALListenerf.Gain;
        var _EfxMetersPerUnit = OpenTK.Audio.OpenAL.ALListenerf.EfxMetersPerUnit;
    }
    static void Test_ALListener3f_2976() {
        var _Position = OpenTK.Audio.OpenAL.ALListener3f.Position;
        var _Velocity = OpenTK.Audio.OpenAL.ALListener3f.Velocity;
    }
    static void Test_ALListenerfv_2977() {
        var _Orientation = OpenTK.Audio.OpenAL.ALListenerfv.Orientation;
    }
    static void Test_ALSourcef_2978() {
        var _ReferenceDistance = OpenTK.Audio.OpenAL.ALSourcef.ReferenceDistance;
        var _MaxDistance = OpenTK.Audio.OpenAL.ALSourcef.MaxDistance;
        var _RolloffFactor = OpenTK.Audio.OpenAL.ALSourcef.RolloffFactor;
        var _Pitch = OpenTK.Audio.OpenAL.ALSourcef.Pitch;
        var _Gain = OpenTK.Audio.OpenAL.ALSourcef.Gain;
        var _MinGain = OpenTK.Audio.OpenAL.ALSourcef.MinGain;
        var _MaxGain = OpenTK.Audio.OpenAL.ALSourcef.MaxGain;
        var _ConeInnerAngle = OpenTK.Audio.OpenAL.ALSourcef.ConeInnerAngle;
        var _ConeOuterAngle = OpenTK.Audio.OpenAL.ALSourcef.ConeOuterAngle;
        var _ConeOuterGain = OpenTK.Audio.OpenAL.ALSourcef.ConeOuterGain;
        var _SecOffset = OpenTK.Audio.OpenAL.ALSourcef.SecOffset;
        var _EfxAirAbsorptionFactor = OpenTK.Audio.OpenAL.ALSourcef.EfxAirAbsorptionFactor;
        var _EfxRoomRolloffFactor = OpenTK.Audio.OpenAL.ALSourcef.EfxRoomRolloffFactor;
        var _EfxConeOuterGainHighFrequency = OpenTK.Audio.OpenAL.ALSourcef.EfxConeOuterGainHighFrequency;
    }
    static void Test_ALSource3f_2979() {
        var _Position = OpenTK.Audio.OpenAL.ALSource3f.Position;
        var _Velocity = OpenTK.Audio.OpenAL.ALSource3f.Velocity;
        var _Direction = OpenTK.Audio.OpenAL.ALSource3f.Direction;
    }
    static void Test_ALSourceb_2980() {
        var _SourceRelative = OpenTK.Audio.OpenAL.ALSourceb.SourceRelative;
        var _Looping = OpenTK.Audio.OpenAL.ALSourceb.Looping;
        var _EfxDirectFilterGainHighFrequencyAuto = OpenTK.Audio.OpenAL.ALSourceb.EfxDirectFilterGainHighFrequencyAuto;
        var _EfxAuxiliarySendFilterGainAuto = OpenTK.Audio.OpenAL.ALSourceb.EfxAuxiliarySendFilterGainAuto;
        var _EfxAuxiliarySendFilterGainHighFrequencyAuto = OpenTK.Audio.OpenAL.ALSourceb.EfxAuxiliarySendFilterGainHighFrequencyAuto;
    }
    static void Test_ALSourcei_2981() {
        var _ByteOffset = OpenTK.Audio.OpenAL.ALSourcei.ByteOffset;
        var _SampleOffset = OpenTK.Audio.OpenAL.ALSourcei.SampleOffset;
        var _Buffer = OpenTK.Audio.OpenAL.ALSourcei.Buffer;
        var _SourceType = OpenTK.Audio.OpenAL.ALSourcei.SourceType;
        var _EfxDirectFilter = OpenTK.Audio.OpenAL.ALSourcei.EfxDirectFilter;
    }
    static void Test_ALSource3i_2982() {
        var _EfxAuxiliarySendFilter = OpenTK.Audio.OpenAL.ALSource3i.EfxAuxiliarySendFilter;
    }
    static void Test_ALGetSourcei_2983() {
        var _ByteOffset = OpenTK.Audio.OpenAL.ALGetSourcei.ByteOffset;
        var _SampleOffset = OpenTK.Audio.OpenAL.ALGetSourcei.SampleOffset;
        var _Buffer = OpenTK.Audio.OpenAL.ALGetSourcei.Buffer;
        var _SourceState = OpenTK.Audio.OpenAL.ALGetSourcei.SourceState;
        var _BuffersQueued = OpenTK.Audio.OpenAL.ALGetSourcei.BuffersQueued;
        var _BuffersProcessed = OpenTK.Audio.OpenAL.ALGetSourcei.BuffersProcessed;
        var _SourceType = OpenTK.Audio.OpenAL.ALGetSourcei.SourceType;
    }
    static void Test_ALSourceState_2984() {
        var _Initial = OpenTK.Audio.OpenAL.ALSourceState.Initial;
        var _Playing = OpenTK.Audio.OpenAL.ALSourceState.Playing;
        var _Paused = OpenTK.Audio.OpenAL.ALSourceState.Paused;
        var _Stopped = OpenTK.Audio.OpenAL.ALSourceState.Stopped;
    }
    static void Test_ALSourceType_2985() {
        var _Static = OpenTK.Audio.OpenAL.ALSourceType.Static;
        var _Streaming = OpenTK.Audio.OpenAL.ALSourceType.Streaming;
        var _Undetermined = OpenTK.Audio.OpenAL.ALSourceType.Undetermined;
    }
    static void Test_ALFormat_2986() {
        var _Mono8 = OpenTK.Audio.OpenAL.ALFormat.Mono8;
        var _Mono16 = OpenTK.Audio.OpenAL.ALFormat.Mono16;
        var _Stereo8 = OpenTK.Audio.OpenAL.ALFormat.Stereo8;
        var _Stereo16 = OpenTK.Audio.OpenAL.ALFormat.Stereo16;
        var _MonoALawExt = OpenTK.Audio.OpenAL.ALFormat.MonoALawExt;
        var _StereoALawExt = OpenTK.Audio.OpenAL.ALFormat.StereoALawExt;
        var _MonoMuLawExt = OpenTK.Audio.OpenAL.ALFormat.MonoMuLawExt;
        var _StereoMuLawExt = OpenTK.Audio.OpenAL.ALFormat.StereoMuLawExt;
        var _VorbisExt = OpenTK.Audio.OpenAL.ALFormat.VorbisExt;
        var _Mp3Ext = OpenTK.Audio.OpenAL.ALFormat.Mp3Ext;
        var _MonoIma4Ext = OpenTK.Audio.OpenAL.ALFormat.MonoIma4Ext;
        var _StereoIma4Ext = OpenTK.Audio.OpenAL.ALFormat.StereoIma4Ext;
        var _MonoFloat32Ext = OpenTK.Audio.OpenAL.ALFormat.MonoFloat32Ext;
        var _StereoFloat32Ext = OpenTK.Audio.OpenAL.ALFormat.StereoFloat32Ext;
        var _MonoDoubleExt = OpenTK.Audio.OpenAL.ALFormat.MonoDoubleExt;
        var _StereoDoubleExt = OpenTK.Audio.OpenAL.ALFormat.StereoDoubleExt;
        var _Multi51Chn16Ext = OpenTK.Audio.OpenAL.ALFormat.Multi51Chn16Ext;
        var _Multi51Chn32Ext = OpenTK.Audio.OpenAL.ALFormat.Multi51Chn32Ext;
        var _Multi51Chn8Ext = OpenTK.Audio.OpenAL.ALFormat.Multi51Chn8Ext;
        var _Multi61Chn16Ext = OpenTK.Audio.OpenAL.ALFormat.Multi61Chn16Ext;
        var _Multi61Chn32Ext = OpenTK.Audio.OpenAL.ALFormat.Multi61Chn32Ext;
        var _Multi61Chn8Ext = OpenTK.Audio.OpenAL.ALFormat.Multi61Chn8Ext;
        var _Multi71Chn16Ext = OpenTK.Audio.OpenAL.ALFormat.Multi71Chn16Ext;
        var _Multi71Chn32Ext = OpenTK.Audio.OpenAL.ALFormat.Multi71Chn32Ext;
        var _Multi71Chn8Ext = OpenTK.Audio.OpenAL.ALFormat.Multi71Chn8Ext;
        var _MultiQuad16Ext = OpenTK.Audio.OpenAL.ALFormat.MultiQuad16Ext;
        var _MultiQuad32Ext = OpenTK.Audio.OpenAL.ALFormat.MultiQuad32Ext;
        var _MultiQuad8Ext = OpenTK.Audio.OpenAL.ALFormat.MultiQuad8Ext;
        var _MultiRear16Ext = OpenTK.Audio.OpenAL.ALFormat.MultiRear16Ext;
        var _MultiRear32Ext = OpenTK.Audio.OpenAL.ALFormat.MultiRear32Ext;
        var _MultiRear8Ext = OpenTK.Audio.OpenAL.ALFormat.MultiRear8Ext;
    }
    static void Test_ALGetBufferi_2987() {
        var _Frequency = OpenTK.Audio.OpenAL.ALGetBufferi.Frequency;
        var _Bits = OpenTK.Audio.OpenAL.ALGetBufferi.Bits;
        var _Channels = OpenTK.Audio.OpenAL.ALGetBufferi.Channels;
        var _Size = OpenTK.Audio.OpenAL.ALGetBufferi.Size;
    }
    static void Test_ALBufferState_2988() {
        var _Unused = OpenTK.Audio.OpenAL.ALBufferState.Unused;
        var _Pending = OpenTK.Audio.OpenAL.ALBufferState.Pending;
        var _Processed = OpenTK.Audio.OpenAL.ALBufferState.Processed;
    }
    static void Test_ALError_2989() {
        var _NoError = OpenTK.Audio.OpenAL.ALError.NoError;
        var _InvalidName = OpenTK.Audio.OpenAL.ALError.InvalidName;
        var _IllegalEnum = OpenTK.Audio.OpenAL.ALError.IllegalEnum;
        var _InvalidEnum = OpenTK.Audio.OpenAL.ALError.InvalidEnum;
        var _InvalidValue = OpenTK.Audio.OpenAL.ALError.InvalidValue;
        var _IllegalCommand = OpenTK.Audio.OpenAL.ALError.IllegalCommand;
        var _InvalidOperation = OpenTK.Audio.OpenAL.ALError.InvalidOperation;
        var _OutOfMemory = OpenTK.Audio.OpenAL.ALError.OutOfMemory;
    }
    static void Test_ALGetString_2990() {
        var _Vendor = OpenTK.Audio.OpenAL.ALGetString.Vendor;
        var _Version = OpenTK.Audio.OpenAL.ALGetString.Version;
        var _Renderer = OpenTK.Audio.OpenAL.ALGetString.Renderer;
        var _Extensions = OpenTK.Audio.OpenAL.ALGetString.Extensions;
    }
    static void Test_ALGetFloat_2991() {
        var _DopplerFactor = OpenTK.Audio.OpenAL.ALGetFloat.DopplerFactor;
        var _DopplerVelocity = OpenTK.Audio.OpenAL.ALGetFloat.DopplerVelocity;
        var _SpeedOfSound = OpenTK.Audio.OpenAL.ALGetFloat.SpeedOfSound;
    }
    static void Test_ALGetInteger_2992() {
        var _DistanceModel = OpenTK.Audio.OpenAL.ALGetInteger.DistanceModel;
    }
    static void Test_ALDistanceModel_2993() {
        var _None = OpenTK.Audio.OpenAL.ALDistanceModel.None;
        var _InverseDistance = OpenTK.Audio.OpenAL.ALDistanceModel.InverseDistance;
        var _InverseDistanceClamped = OpenTK.Audio.OpenAL.ALDistanceModel.InverseDistanceClamped;
        var _LinearDistance = OpenTK.Audio.OpenAL.ALDistanceModel.LinearDistance;
        var _LinearDistanceClamped = OpenTK.Audio.OpenAL.ALDistanceModel.LinearDistanceClamped;
        var _ExponentDistance = OpenTK.Audio.OpenAL.ALDistanceModel.ExponentDistance;
        var _ExponentDistanceClamped = OpenTK.Audio.OpenAL.ALDistanceModel.ExponentDistanceClamped;
    }
    static void Test_All_2994() {
        var _False = OpenTK.Graphics.ES10.All.False;
        var _NoError = OpenTK.Graphics.ES10.All.NoError;
        var _NoneOes = OpenTK.Graphics.ES10.All.NoneOes;
        var _Zero = OpenTK.Graphics.ES10.All.Zero;
        var _Points = OpenTK.Graphics.ES10.All.Points;
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES10.All.ColorBufferBit7Qcom;
        var _DepthBufferBit = OpenTK.Graphics.ES10.All.DepthBufferBit;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit2Qcom;
        var _StencilBufferBit = OpenTK.Graphics.ES10.All.StencilBufferBit;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit5Qcom;
        var _ColorBufferBit = OpenTK.Graphics.ES10.All.ColorBufferBit;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES10.All.DepthBufferBit7Qcom;
        var _Lines = OpenTK.Graphics.ES10.All.Lines;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit0Qcom;
        var _LineLoop = OpenTK.Graphics.ES10.All.LineLoop;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit1Qcom;
        var _LineStrip = OpenTK.Graphics.ES10.All.LineStrip;
        var _Triangles = OpenTK.Graphics.ES10.All.Triangles;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit2Qcom;
        var _TriangleStrip = OpenTK.Graphics.ES10.All.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES10.All.TriangleFan;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES10.All.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit0Qcom;
        var _Add = OpenTK.Graphics.ES10.All.Add;
        var _Never = OpenTK.Graphics.ES10.All.Never;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit1Qcom;
        var _Less = OpenTK.Graphics.ES10.All.Less;
        var _Equal = OpenTK.Graphics.ES10.All.Equal;
        var _Lequal = OpenTK.Graphics.ES10.All.Lequal;
        var _Greater = OpenTK.Graphics.ES10.All.Greater;
        var _Notequal = OpenTK.Graphics.ES10.All.Notequal;
        var _Gequal = OpenTK.Graphics.ES10.All.Gequal;
        var _Always = OpenTK.Graphics.ES10.All.Always;
        var _SrcColor = OpenTK.Graphics.ES10.All.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES10.All.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES10.All.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES10.All.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES10.All.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES10.All.OneMinusDstAlpha;
        var _DstColor = OpenTK.Graphics.ES10.All.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES10.All.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES10.All.SrcAlphaSaturate;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit2Qcom;
        var _Front = OpenTK.Graphics.ES10.All.Front;
        var _Back = OpenTK.Graphics.ES10.All.Back;
        var _FrontAndBack = OpenTK.Graphics.ES10.All.FrontAndBack;
        var _InvalidEnum = OpenTK.Graphics.ES10.All.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES10.All.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES10.All.InvalidOperation;
        var _StackOverflow = OpenTK.Graphics.ES10.All.StackOverflow;
        var _StackUnderflow = OpenTK.Graphics.ES10.All.StackUnderflow;
        var _OutOfMemory = OpenTK.Graphics.ES10.All.OutOfMemory;
        var _InvalidFramebufferOperationOes = OpenTK.Graphics.ES10.All.InvalidFramebufferOperationOes;
        var _Exp = OpenTK.Graphics.ES10.All.Exp;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit3Qcom;
        var _Exp2 = OpenTK.Graphics.ES10.All.Exp2;
        var _Cw = OpenTK.Graphics.ES10.All.Cw;
        var _Ccw = OpenTK.Graphics.ES10.All.Ccw;
        var _CurrentColor = OpenTK.Graphics.ES10.All.CurrentColor;
        var _CurrentNormal = OpenTK.Graphics.ES10.All.CurrentNormal;
        var _CurrentTextureCoords = OpenTK.Graphics.ES10.All.CurrentTextureCoords;
        var _PointSmooth = OpenTK.Graphics.ES10.All.PointSmooth;
        var _PointSize = OpenTK.Graphics.ES10.All.PointSize;
        var _SmoothPointSizeRange = OpenTK.Graphics.ES10.All.SmoothPointSizeRange;
        var _LineSmooth = OpenTK.Graphics.ES10.All.LineSmooth;
        var _LineWidth = OpenTK.Graphics.ES10.All.LineWidth;
        var _SmoothLineWidthRange = OpenTK.Graphics.ES10.All.SmoothLineWidthRange;
        var _CullFace = OpenTK.Graphics.ES10.All.CullFace;
        var _CullFaceMode = OpenTK.Graphics.ES10.All.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES10.All.FrontFace;
        var _Lighting = OpenTK.Graphics.ES10.All.Lighting;
        var _LightModelTwoSide = OpenTK.Graphics.ES10.All.LightModelTwoSide;
        var _LightModelAmbient = OpenTK.Graphics.ES10.All.LightModelAmbient;
        var _ShadeModel = OpenTK.Graphics.ES10.All.ShadeModel;
        var _ColorMaterial = OpenTK.Graphics.ES10.All.ColorMaterial;
        var _Fog = OpenTK.Graphics.ES10.All.Fog;
        var _FogDensity = OpenTK.Graphics.ES10.All.FogDensity;
        var _FogStart = OpenTK.Graphics.ES10.All.FogStart;
        var _FogEnd = OpenTK.Graphics.ES10.All.FogEnd;
        var _FogMode = OpenTK.Graphics.ES10.All.FogMode;
        var _FogColor = OpenTK.Graphics.ES10.All.FogColor;
        var _DepthRange = OpenTK.Graphics.ES10.All.DepthRange;
        var _DepthTest = OpenTK.Graphics.ES10.All.DepthTest;
        var _DepthWritemask = OpenTK.Graphics.ES10.All.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES10.All.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES10.All.DepthFunc;
        var _StencilTest = OpenTK.Graphics.ES10.All.StencilTest;
        var _StencilClearValue = OpenTK.Graphics.ES10.All.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES10.All.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES10.All.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES10.All.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES10.All.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES10.All.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES10.All.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES10.All.StencilWritemask;
        var _MatrixMode = OpenTK.Graphics.ES10.All.MatrixMode;
        var _Normalize = OpenTK.Graphics.ES10.All.Normalize;
        var _Viewport = OpenTK.Graphics.ES10.All.Viewport;
        var _ModelviewStackDepth = OpenTK.Graphics.ES10.All.ModelviewStackDepth;
        var _ProjectionStackDepth = OpenTK.Graphics.ES10.All.ProjectionStackDepth;
        var _TextureStackDepth = OpenTK.Graphics.ES10.All.TextureStackDepth;
        var _ModelviewMatrix = OpenTK.Graphics.ES10.All.ModelviewMatrix;
        var _ProjectionMatrix = OpenTK.Graphics.ES10.All.ProjectionMatrix;
        var _TextureMatrix = OpenTK.Graphics.ES10.All.TextureMatrix;
        var _AlphaTest = OpenTK.Graphics.ES10.All.AlphaTest;
        var _AlphaTestFunc = OpenTK.Graphics.ES10.All.AlphaTestFunc;
        var _AlphaTestRef = OpenTK.Graphics.ES10.All.AlphaTestRef;
        var _Dither = OpenTK.Graphics.ES10.All.Dither;
        var _BlendDst = OpenTK.Graphics.ES10.All.BlendDst;
        var _BlendSrc = OpenTK.Graphics.ES10.All.BlendSrc;
        var _Blend = OpenTK.Graphics.ES10.All.Blend;
        var _LogicOpMode = OpenTK.Graphics.ES10.All.LogicOpMode;
        var _ColorLogicOp = OpenTK.Graphics.ES10.All.ColorLogicOp;
        var _ScissorBox = OpenTK.Graphics.ES10.All.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES10.All.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES10.All.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES10.All.ColorWritemask;
        var _PerspectiveCorrectionHint = OpenTK.Graphics.ES10.All.PerspectiveCorrectionHint;
        var _PointSmoothHint = OpenTK.Graphics.ES10.All.PointSmoothHint;
        var _LineSmoothHint = OpenTK.Graphics.ES10.All.LineSmoothHint;
        var _FogHint = OpenTK.Graphics.ES10.All.FogHint;
        var _UnpackAlignment = OpenTK.Graphics.ES10.All.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES10.All.PackAlignment;
        var _AlphaScale = OpenTK.Graphics.ES10.All.AlphaScale;
        var _MaxLights = OpenTK.Graphics.ES10.All.MaxLights;
        var _MaxClipPlanes = OpenTK.Graphics.ES10.All.MaxClipPlanes;
        var _MaxClipPlanesImg = OpenTK.Graphics.ES10.All.MaxClipPlanesImg;
        var _MaxTextureSize = OpenTK.Graphics.ES10.All.MaxTextureSize;
        var _MaxModelviewStackDepth = OpenTK.Graphics.ES10.All.MaxModelviewStackDepth;
        var _MaxProjectionStackDepth = OpenTK.Graphics.ES10.All.MaxProjectionStackDepth;
        var _MaxTextureStackDepth = OpenTK.Graphics.ES10.All.MaxTextureStackDepth;
        var _MaxViewportDims = OpenTK.Graphics.ES10.All.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES10.All.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES10.All.RedBits;
        var _GreenBits = OpenTK.Graphics.ES10.All.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES10.All.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES10.All.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES10.All.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES10.All.StencilBits;
        var _Texture2D = OpenTK.Graphics.ES10.All.Texture2D;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit4Qcom;
        var _DontCare = OpenTK.Graphics.ES10.All.DontCare;
        var _Fastest = OpenTK.Graphics.ES10.All.Fastest;
        var _Nicest = OpenTK.Graphics.ES10.All.Nicest;
        var _Ambient = OpenTK.Graphics.ES10.All.Ambient;
        var _Diffuse = OpenTK.Graphics.ES10.All.Diffuse;
        var _Specular = OpenTK.Graphics.ES10.All.Specular;
        var _Position = OpenTK.Graphics.ES10.All.Position;
        var _SpotDirection = OpenTK.Graphics.ES10.All.SpotDirection;
        var _SpotExponent = OpenTK.Graphics.ES10.All.SpotExponent;
        var _SpotCutoff = OpenTK.Graphics.ES10.All.SpotCutoff;
        var _ConstantAttenuation = OpenTK.Graphics.ES10.All.ConstantAttenuation;
        var _LinearAttenuation = OpenTK.Graphics.ES10.All.LinearAttenuation;
        var _QuadraticAttenuation = OpenTK.Graphics.ES10.All.QuadraticAttenuation;
        var _Byte = OpenTK.Graphics.ES10.All.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES10.All.UnsignedByte;
        var _Short = OpenTK.Graphics.ES10.All.Short;
        var _UnsignedShort = OpenTK.Graphics.ES10.All.UnsignedShort;
        var _UnsignedInt = OpenTK.Graphics.ES10.All.UnsignedInt;
        var _Float = OpenTK.Graphics.ES10.All.Float;
        var _Fixed = OpenTK.Graphics.ES10.All.Fixed;
        var _FixedOes = OpenTK.Graphics.ES10.All.FixedOes;
        var _Clear = OpenTK.Graphics.ES10.All.Clear;
        var _And = OpenTK.Graphics.ES10.All.And;
        var _AndReverse = OpenTK.Graphics.ES10.All.AndReverse;
        var _Copy = OpenTK.Graphics.ES10.All.Copy;
        var _AndInverted = OpenTK.Graphics.ES10.All.AndInverted;
        var _Noop = OpenTK.Graphics.ES10.All.Noop;
        var _Xor = OpenTK.Graphics.ES10.All.Xor;
        var _Or = OpenTK.Graphics.ES10.All.Or;
        var _Nor = OpenTK.Graphics.ES10.All.Nor;
        var _Equiv = OpenTK.Graphics.ES10.All.Equiv;
        var _Invert = OpenTK.Graphics.ES10.All.Invert;
        var _OrReverse = OpenTK.Graphics.ES10.All.OrReverse;
        var _CopyInverted = OpenTK.Graphics.ES10.All.CopyInverted;
        var _OrInverted = OpenTK.Graphics.ES10.All.OrInverted;
        var _Nand = OpenTK.Graphics.ES10.All.Nand;
        var _Set = OpenTK.Graphics.ES10.All.Set;
        var _Emission = OpenTK.Graphics.ES10.All.Emission;
        var _Shininess = OpenTK.Graphics.ES10.All.Shininess;
        var _AmbientAndDiffuse = OpenTK.Graphics.ES10.All.AmbientAndDiffuse;
        var _Modelview = OpenTK.Graphics.ES10.All.Modelview;
        var _Projection = OpenTK.Graphics.ES10.All.Projection;
        var _Texture = OpenTK.Graphics.ES10.All.Texture;
        var _ColorExt = OpenTK.Graphics.ES10.All.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES10.All.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES10.All.StencilExt;
        var _Alpha = OpenTK.Graphics.ES10.All.Alpha;
        var _Rgb = OpenTK.Graphics.ES10.All.Rgb;
        var _Rgba = OpenTK.Graphics.ES10.All.Rgba;
        var _Luminance = OpenTK.Graphics.ES10.All.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES10.All.LuminanceAlpha;
        var _Flat = OpenTK.Graphics.ES10.All.Flat;
        var _Smooth = OpenTK.Graphics.ES10.All.Smooth;
        var _Keep = OpenTK.Graphics.ES10.All.Keep;
        var _Replace = OpenTK.Graphics.ES10.All.Replace;
        var _Incr = OpenTK.Graphics.ES10.All.Incr;
        var _Decr = OpenTK.Graphics.ES10.All.Decr;
        var _Vendor = OpenTK.Graphics.ES10.All.Vendor;
        var _Renderer = OpenTK.Graphics.ES10.All.Renderer;
        var _Version = OpenTK.Graphics.ES10.All.Version;
        var _Extensions = OpenTK.Graphics.ES10.All.Extensions;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit5Qcom;
        var _Modulate = OpenTK.Graphics.ES10.All.Modulate;
        var _Decal = OpenTK.Graphics.ES10.All.Decal;
        var _TextureEnvMode = OpenTK.Graphics.ES10.All.TextureEnvMode;
        var _TextureEnvColor = OpenTK.Graphics.ES10.All.TextureEnvColor;
        var _TextureEnv = OpenTK.Graphics.ES10.All.TextureEnv;
        var _TextureGenModeOes = OpenTK.Graphics.ES10.All.TextureGenModeOes;
        var _Nearest = OpenTK.Graphics.ES10.All.Nearest;
        var _Linear = OpenTK.Graphics.ES10.All.Linear;
        var _NearestMipmapNearest = OpenTK.Graphics.ES10.All.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES10.All.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES10.All.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES10.All.LinearMipmapLinear;
        var _TextureMagFilter = OpenTK.Graphics.ES10.All.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES10.All.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES10.All.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES10.All.TextureWrapT;
        var _Repeat = OpenTK.Graphics.ES10.All.Repeat;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES10.All.PolygonOffsetUnits;
        var _ClipPlane0 = OpenTK.Graphics.ES10.All.ClipPlane0;
        var _ClipPlane0Img = OpenTK.Graphics.ES10.All.ClipPlane0Img;
        var _ClipPlane1 = OpenTK.Graphics.ES10.All.ClipPlane1;
        var _ClipPlane1Img = OpenTK.Graphics.ES10.All.ClipPlane1Img;
        var _ClipPlane2 = OpenTK.Graphics.ES10.All.ClipPlane2;
        var _ClipPlane2Img = OpenTK.Graphics.ES10.All.ClipPlane2Img;
        var _ClipPlane3 = OpenTK.Graphics.ES10.All.ClipPlane3;
        var _ClipPlane3Img = OpenTK.Graphics.ES10.All.ClipPlane3Img;
        var _ClipPlane4 = OpenTK.Graphics.ES10.All.ClipPlane4;
        var _ClipPlane4Img = OpenTK.Graphics.ES10.All.ClipPlane4Img;
        var _ClipPlane5 = OpenTK.Graphics.ES10.All.ClipPlane5;
        var _ClipPlane5Img = OpenTK.Graphics.ES10.All.ClipPlane5Img;
        var _Light0 = OpenTK.Graphics.ES10.All.Light0;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit6Qcom;
        var _Light1 = OpenTK.Graphics.ES10.All.Light1;
        var _Light2 = OpenTK.Graphics.ES10.All.Light2;
        var _Light3 = OpenTK.Graphics.ES10.All.Light3;
        var _Light4 = OpenTK.Graphics.ES10.All.Light4;
        var _Light5 = OpenTK.Graphics.ES10.All.Light5;
        var _Light6 = OpenTK.Graphics.ES10.All.Light6;
        var _Light7 = OpenTK.Graphics.ES10.All.Light7;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES10.All.MultisampleBufferBit7Qcom;
        var _FuncAddOes = OpenTK.Graphics.ES10.All.FuncAddOes;
        var _MinExt = OpenTK.Graphics.ES10.All.MinExt;
        var _MaxExt = OpenTK.Graphics.ES10.All.MaxExt;
        var _BlendEquationOes = OpenTK.Graphics.ES10.All.BlendEquationOes;
        var _BlendEquationRgbOes = OpenTK.Graphics.ES10.All.BlendEquationRgbOes;
        var _FuncSubtractOes = OpenTK.Graphics.ES10.All.FuncSubtractOes;
        var _FuncReverseSubtractOes = OpenTK.Graphics.ES10.All.FuncReverseSubtractOes;
        var _UnsignedShort4444 = OpenTK.Graphics.ES10.All.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES10.All.UnsignedShort5551;
        var _PolygonOffsetFill = OpenTK.Graphics.ES10.All.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES10.All.PolygonOffsetFactor;
        var _RescaleNormal = OpenTK.Graphics.ES10.All.RescaleNormal;
        var _Rgb8Oes = OpenTK.Graphics.ES10.All.Rgb8Oes;
        var _Rgba4Oes = OpenTK.Graphics.ES10.All.Rgba4Oes;
        var _Rgb5A1Oes = OpenTK.Graphics.ES10.All.Rgb5A1Oes;
        var _Rgba8Oes = OpenTK.Graphics.ES10.All.Rgba8Oes;
        var _TextureBinding2D = OpenTK.Graphics.ES10.All.TextureBinding2D;
        var _VertexArray = OpenTK.Graphics.ES10.All.VertexArray;
        var _NormalArray = OpenTK.Graphics.ES10.All.NormalArray;
        var _ColorArray = OpenTK.Graphics.ES10.All.ColorArray;
        var _TextureCoordArray = OpenTK.Graphics.ES10.All.TextureCoordArray;
        var _VertexArraySize = OpenTK.Graphics.ES10.All.VertexArraySize;
        var _VertexArrayType = OpenTK.Graphics.ES10.All.VertexArrayType;
        var _VertexArrayStride = OpenTK.Graphics.ES10.All.VertexArrayStride;
        var _NormalArrayType = OpenTK.Graphics.ES10.All.NormalArrayType;
        var _NormalArrayStride = OpenTK.Graphics.ES10.All.NormalArrayStride;
        var _ColorArraySize = OpenTK.Graphics.ES10.All.ColorArraySize;
        var _ColorArrayType = OpenTK.Graphics.ES10.All.ColorArrayType;
        var _ColorArrayStride = OpenTK.Graphics.ES10.All.ColorArrayStride;
        var _TextureCoordArraySize = OpenTK.Graphics.ES10.All.TextureCoordArraySize;
        var _TextureCoordArrayType = OpenTK.Graphics.ES10.All.TextureCoordArrayType;
        var _TextureCoordArrayStride = OpenTK.Graphics.ES10.All.TextureCoordArrayStride;
        var _VertexArrayPointer = OpenTK.Graphics.ES10.All.VertexArrayPointer;
        var _NormalArrayPointer = OpenTK.Graphics.ES10.All.NormalArrayPointer;
        var _ColorArrayPointer = OpenTK.Graphics.ES10.All.ColorArrayPointer;
        var _TextureCoordArrayPointer = OpenTK.Graphics.ES10.All.TextureCoordArrayPointer;
        var _Multisample = OpenTK.Graphics.ES10.All.Multisample;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES10.All.SampleAlphaToCoverage;
        var _SampleAlphaToOne = OpenTK.Graphics.ES10.All.SampleAlphaToOne;
        var _SampleCoverage = OpenTK.Graphics.ES10.All.SampleCoverage;
        var _SampleBuffers = OpenTK.Graphics.ES10.All.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES10.All.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES10.All.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES10.All.SampleCoverageInvert;
        var _BlendDstRgbOes = OpenTK.Graphics.ES10.All.BlendDstRgbOes;
        var _BlendSrcRgbOes = OpenTK.Graphics.ES10.All.BlendSrcRgbOes;
        var _BlendDstAlphaOes = OpenTK.Graphics.ES10.All.BlendDstAlphaOes;
        var _BlendSrcAlphaOes = OpenTK.Graphics.ES10.All.BlendSrcAlphaOes;
        var _BgraExt = OpenTK.Graphics.ES10.All.BgraExt;
        var _BgraImg = OpenTK.Graphics.ES10.All.BgraImg;
        var _PointSizeMin = OpenTK.Graphics.ES10.All.PointSizeMin;
        var _PointSizeMax = OpenTK.Graphics.ES10.All.PointSizeMax;
        var _PointFadeThresholdSize = OpenTK.Graphics.ES10.All.PointFadeThresholdSize;
        var _PointDistanceAttenuation = OpenTK.Graphics.ES10.All.PointDistanceAttenuation;
        var _ClampToEdge = OpenTK.Graphics.ES10.All.ClampToEdge;
        var _GenerateMipmap = OpenTK.Graphics.ES10.All.GenerateMipmap;
        var _GenerateMipmapHint = OpenTK.Graphics.ES10.All.GenerateMipmapHint;
        var _DepthComponent16Oes = OpenTK.Graphics.ES10.All.DepthComponent16Oes;
        var _DepthComponent24Oes = OpenTK.Graphics.ES10.All.DepthComponent24Oes;
        var _DepthComponent32Oes = OpenTK.Graphics.ES10.All.DepthComponent32Oes;
        var _UnsignedShort565 = OpenTK.Graphics.ES10.All.UnsignedShort565;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES10.All.UnsignedShort4444RevExt;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES10.All.UnsignedShort4444RevImg;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES10.All.UnsignedShort1555RevExt;
        var _MirroredRepeatOes = OpenTK.Graphics.ES10.All.MirroredRepeatOes;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES10.All.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES10.All.AliasedLineWidthRange;
        var _Texture0 = OpenTK.Graphics.ES10.All.Texture0;
        var _Texture1 = OpenTK.Graphics.ES10.All.Texture1;
        var _Texture2 = OpenTK.Graphics.ES10.All.Texture2;
        var _Texture3 = OpenTK.Graphics.ES10.All.Texture3;
        var _Texture4 = OpenTK.Graphics.ES10.All.Texture4;
        var _Texture5 = OpenTK.Graphics.ES10.All.Texture5;
        var _Texture6 = OpenTK.Graphics.ES10.All.Texture6;
        var _Texture7 = OpenTK.Graphics.ES10.All.Texture7;
        var _Texture8 = OpenTK.Graphics.ES10.All.Texture8;
        var _Texture9 = OpenTK.Graphics.ES10.All.Texture9;
        var _Texture10 = OpenTK.Graphics.ES10.All.Texture10;
        var _Texture11 = OpenTK.Graphics.ES10.All.Texture11;
        var _Texture12 = OpenTK.Graphics.ES10.All.Texture12;
        var _Texture13 = OpenTK.Graphics.ES10.All.Texture13;
        var _Texture14 = OpenTK.Graphics.ES10.All.Texture14;
        var _Texture15 = OpenTK.Graphics.ES10.All.Texture15;
        var _Texture16 = OpenTK.Graphics.ES10.All.Texture16;
        var _Texture17 = OpenTK.Graphics.ES10.All.Texture17;
        var _Texture18 = OpenTK.Graphics.ES10.All.Texture18;
        var _Texture19 = OpenTK.Graphics.ES10.All.Texture19;
        var _Texture20 = OpenTK.Graphics.ES10.All.Texture20;
        var _Texture21 = OpenTK.Graphics.ES10.All.Texture21;
        var _Texture22 = OpenTK.Graphics.ES10.All.Texture22;
        var _Texture23 = OpenTK.Graphics.ES10.All.Texture23;
        var _Texture24 = OpenTK.Graphics.ES10.All.Texture24;
        var _Texture25 = OpenTK.Graphics.ES10.All.Texture25;
        var _Texture26 = OpenTK.Graphics.ES10.All.Texture26;
        var _Texture27 = OpenTK.Graphics.ES10.All.Texture27;
        var _Texture28 = OpenTK.Graphics.ES10.All.Texture28;
        var _Texture29 = OpenTK.Graphics.ES10.All.Texture29;
        var _Texture30 = OpenTK.Graphics.ES10.All.Texture30;
        var _Texture31 = OpenTK.Graphics.ES10.All.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES10.All.ActiveTexture;
        var _ClientActiveTexture = OpenTK.Graphics.ES10.All.ClientActiveTexture;
        var _MaxTextureUnits = OpenTK.Graphics.ES10.All.MaxTextureUnits;
        var _Subtract = OpenTK.Graphics.ES10.All.Subtract;
        var _MaxRenderbufferSizeOes = OpenTK.Graphics.ES10.All.MaxRenderbufferSizeOes;
        var _AllCompletedNv = OpenTK.Graphics.ES10.All.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES10.All.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES10.All.FenceConditionNv;
        var _DepthStencilOes = OpenTK.Graphics.ES10.All.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES10.All.UnsignedInt248Oes;
        var _MaxTextureLodBiasExt = OpenTK.Graphics.ES10.All.MaxTextureLodBiasExt;
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES10.All.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES10.All.MaxTextureMaxAnisotropyExt;
        var _TextureFilterControlExt = OpenTK.Graphics.ES10.All.TextureFilterControlExt;
        var _TextureLodBiasExt = OpenTK.Graphics.ES10.All.TextureLodBiasExt;
        var _IncrWrapOes = OpenTK.Graphics.ES10.All.IncrWrapOes;
        var _DecrWrapOes = OpenTK.Graphics.ES10.All.DecrWrapOes;
        var _NormalMapOes = OpenTK.Graphics.ES10.All.NormalMapOes;
        var _ReflectionMapOes = OpenTK.Graphics.ES10.All.ReflectionMapOes;
        var _TextureCubeMapOes = OpenTK.Graphics.ES10.All.TextureCubeMapOes;
        var _TextureBindingCubeMapOes = OpenTK.Graphics.ES10.All.TextureBindingCubeMapOes;
        var _TextureCubeMapPositiveXOes = OpenTK.Graphics.ES10.All.TextureCubeMapPositiveXOes;
        var _TextureCubeMapNegativeXOes = OpenTK.Graphics.ES10.All.TextureCubeMapNegativeXOes;
        var _TextureCubeMapPositiveYOes = OpenTK.Graphics.ES10.All.TextureCubeMapPositiveYOes;
        var _TextureCubeMapNegativeYOes = OpenTK.Graphics.ES10.All.TextureCubeMapNegativeYOes;
        var _TextureCubeMapPositiveZOes = OpenTK.Graphics.ES10.All.TextureCubeMapPositiveZOes;
        var _TextureCubeMapNegativeZOes = OpenTK.Graphics.ES10.All.TextureCubeMapNegativeZOes;
        var _MaxCubeMapTextureSizeOes = OpenTK.Graphics.ES10.All.MaxCubeMapTextureSizeOes;
        var _Combine = OpenTK.Graphics.ES10.All.Combine;
        var _CombineRgb = OpenTK.Graphics.ES10.All.CombineRgb;
        var _CombineAlpha = OpenTK.Graphics.ES10.All.CombineAlpha;
        var _RgbScale = OpenTK.Graphics.ES10.All.RgbScale;
        var _AddSigned = OpenTK.Graphics.ES10.All.AddSigned;
        var _Interpolate = OpenTK.Graphics.ES10.All.Interpolate;
        var _Constant = OpenTK.Graphics.ES10.All.Constant;
        var _PrimaryColor = OpenTK.Graphics.ES10.All.PrimaryColor;
        var _Previous = OpenTK.Graphics.ES10.All.Previous;
        var _Src0Rgb = OpenTK.Graphics.ES10.All.Src0Rgb;
        var _Src1Rgb = OpenTK.Graphics.ES10.All.Src1Rgb;
        var _Src2Rgb = OpenTK.Graphics.ES10.All.Src2Rgb;
        var _Src0Alpha = OpenTK.Graphics.ES10.All.Src0Alpha;
        var _Src1Alpha = OpenTK.Graphics.ES10.All.Src1Alpha;
        var _Src2Alpha = OpenTK.Graphics.ES10.All.Src2Alpha;
        var _Operand0Rgb = OpenTK.Graphics.ES10.All.Operand0Rgb;
        var _Operand1Rgb = OpenTK.Graphics.ES10.All.Operand1Rgb;
        var _Operand2Rgb = OpenTK.Graphics.ES10.All.Operand2Rgb;
        var _Operand0Alpha = OpenTK.Graphics.ES10.All.Operand0Alpha;
        var _Operand1Alpha = OpenTK.Graphics.ES10.All.Operand1Alpha;
        var _Operand2Alpha = OpenTK.Graphics.ES10.All.Operand2Alpha;
        var _VertexArrayBindingOes = OpenTK.Graphics.ES10.All.VertexArrayBindingOes;
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES10.All.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES10.All.CompressedTextureFormats;
        var _MaxVertexUnitsOes = OpenTK.Graphics.ES10.All.MaxVertexUnitsOes;
        var _WeightArrayTypeOes = OpenTK.Graphics.ES10.All.WeightArrayTypeOes;
        var _WeightArrayStrideOes = OpenTK.Graphics.ES10.All.WeightArrayStrideOes;
        var _WeightArraySizeOes = OpenTK.Graphics.ES10.All.WeightArraySizeOes;
        var _WeightArrayPointerOes = OpenTK.Graphics.ES10.All.WeightArrayPointerOes;
        var _WeightArrayOes = OpenTK.Graphics.ES10.All.WeightArrayOes;
        var _Dot3Rgb = OpenTK.Graphics.ES10.All.Dot3Rgb;
        var _Dot3Rgba = OpenTK.Graphics.ES10.All.Dot3Rgba;
        var _Dot3RgbaImg = OpenTK.Graphics.ES10.All.Dot3RgbaImg;
        var _BufferSize = OpenTK.Graphics.ES10.All.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES10.All.BufferUsage;
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES10.All.AtcRgbaInterpolatedAlphaAmd;
        var _GL_3DcXAmd = OpenTK.Graphics.ES10.All.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES10.All.GL_3DcXyAmd;
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES10.All.WriteonlyRenderingQcom;
        var _BlendEquationAlphaOes = OpenTK.Graphics.ES10.All.BlendEquationAlphaOes;
        var _MatrixPaletteOes = OpenTK.Graphics.ES10.All.MatrixPaletteOes;
        var _MaxPaletteMatricesOes = OpenTK.Graphics.ES10.All.MaxPaletteMatricesOes;
        var _CurrentPaletteMatrixOes = OpenTK.Graphics.ES10.All.CurrentPaletteMatrixOes;
        var _MatrixIndexArrayOes = OpenTK.Graphics.ES10.All.MatrixIndexArrayOes;
        var _MatrixIndexArraySizeOes = OpenTK.Graphics.ES10.All.MatrixIndexArraySizeOes;
        var _MatrixIndexArrayTypeOes = OpenTK.Graphics.ES10.All.MatrixIndexArrayTypeOes;
        var _MatrixIndexArrayStrideOes = OpenTK.Graphics.ES10.All.MatrixIndexArrayStrideOes;
        var _MatrixIndexArrayPointerOes = OpenTK.Graphics.ES10.All.MatrixIndexArrayPointerOes;
        var _PointSpriteOes = OpenTK.Graphics.ES10.All.PointSpriteOes;
        var _CoordReplaceOes = OpenTK.Graphics.ES10.All.CoordReplaceOes;
        var _ArrayBuffer = OpenTK.Graphics.ES10.All.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES10.All.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES10.All.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES10.All.ElementArrayBufferBinding;
        var _VertexArrayBufferBinding = OpenTK.Graphics.ES10.All.VertexArrayBufferBinding;
        var _NormalArrayBufferBinding = OpenTK.Graphics.ES10.All.NormalArrayBufferBinding;
        var _ColorArrayBufferBinding = OpenTK.Graphics.ES10.All.ColorArrayBufferBinding;
        var _TextureCoordArrayBufferBinding = OpenTK.Graphics.ES10.All.TextureCoordArrayBufferBinding;
        var _WeightArrayBufferBindingOes = OpenTK.Graphics.ES10.All.WeightArrayBufferBindingOes;
        var _WriteOnlyOes = OpenTK.Graphics.ES10.All.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES10.All.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES10.All.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES10.All.BufferMapPointerOes;
        var _StaticDraw = OpenTK.Graphics.ES10.All.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES10.All.DynamicDraw;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES10.All.Depth24Stencil8Oes;
        var _PointSizeArrayTypeOes = OpenTK.Graphics.ES10.All.PointSizeArrayTypeOes;
        var _PointSizeArrayStrideOes = OpenTK.Graphics.ES10.All.PointSizeArrayStrideOes;
        var _PointSizeArrayPointerOes = OpenTK.Graphics.ES10.All.PointSizeArrayPointerOes;
        var _ModelviewMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.All.ModelviewMatrixFloatAsIntBitsOes;
        var _ProjectionMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.All.ProjectionMatrixFloatAsIntBitsOes;
        var _TextureMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.All.TextureMatrixFloatAsIntBitsOes;
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES10.All.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES10.All.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES10.All.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES10.All.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES10.All.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES10.All.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES10.All.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES10.All.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES10.All.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES10.All.Palette8Rgb5A1Oes;
        var _ImplementationColorReadTypeOes = OpenTK.Graphics.ES10.All.ImplementationColorReadTypeOes;
        var _ImplementationColorReadFormatOes = OpenTK.Graphics.ES10.All.ImplementationColorReadFormatOes;
        var _PointSizeArrayOes = OpenTK.Graphics.ES10.All.PointSizeArrayOes;
        var _TextureCropRectOes = OpenTK.Graphics.ES10.All.TextureCropRectOes;
        var _MatrixIndexArrayBufferBindingOes = OpenTK.Graphics.ES10.All.MatrixIndexArrayBufferBindingOes;
        var _PointSizeArrayBufferBindingOes = OpenTK.Graphics.ES10.All.PointSizeArrayBufferBindingOes;
        var _TextureWidthQcom = OpenTK.Graphics.ES10.All.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES10.All.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES10.All.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES10.All.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES10.All.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES10.All.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES10.All.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES10.All.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES10.All.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES10.All.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES10.All.StateRestore;
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES10.All.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES10.All.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES10.All.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES10.All.CompressedRgbaPvrtc2Bppv1Img;
        var _ModulateColorImg = OpenTK.Graphics.ES10.All.ModulateColorImg;
        var _RecipAddSignedAlphaImg = OpenTK.Graphics.ES10.All.RecipAddSignedAlphaImg;
        var _TextureAlphaModulateImg = OpenTK.Graphics.ES10.All.TextureAlphaModulateImg;
        var _FactorAlphaModulateImg = OpenTK.Graphics.ES10.All.FactorAlphaModulateImg;
        var _FragmentAlphaModulateImg = OpenTK.Graphics.ES10.All.FragmentAlphaModulateImg;
        var _AddBlendImg = OpenTK.Graphics.ES10.All.AddBlendImg;
        var _AtcRgbAmd = OpenTK.Graphics.ES10.All.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES10.All.AtcRgbaExplicitAlphaAmd;
        var _FramebufferBindingOes = OpenTK.Graphics.ES10.All.FramebufferBindingOes;
        var _RenderbufferBindingOes = OpenTK.Graphics.ES10.All.RenderbufferBindingOes;
        var _FramebufferAttachmentObjectTypeOes = OpenTK.Graphics.ES10.All.FramebufferAttachmentObjectTypeOes;
        var _FramebufferAttachmentObjectNameOes = OpenTK.Graphics.ES10.All.FramebufferAttachmentObjectNameOes;
        var _FramebufferAttachmentTextureLevelOes = OpenTK.Graphics.ES10.All.FramebufferAttachmentTextureLevelOes;
        var _FramebufferAttachmentTextureCubeMapFaceOes = OpenTK.Graphics.ES10.All.FramebufferAttachmentTextureCubeMapFaceOes;
        var _FramebufferCompleteOes = OpenTK.Graphics.ES10.All.FramebufferCompleteOes;
        var _FramebufferIncompleteAttachmentOes = OpenTK.Graphics.ES10.All.FramebufferIncompleteAttachmentOes;
        var _FramebufferIncompleteMissingAttachmentOes = OpenTK.Graphics.ES10.All.FramebufferIncompleteMissingAttachmentOes;
        var _FramebufferIncompleteDimensionsOes = OpenTK.Graphics.ES10.All.FramebufferIncompleteDimensionsOes;
        var _FramebufferIncompleteFormatsOes = OpenTK.Graphics.ES10.All.FramebufferIncompleteFormatsOes;
        var _FramebufferUnsupportedOes = OpenTK.Graphics.ES10.All.FramebufferUnsupportedOes;
        var _ColorAttachment0Oes = OpenTK.Graphics.ES10.All.ColorAttachment0Oes;
        var _DepthAttachmentOes = OpenTK.Graphics.ES10.All.DepthAttachmentOes;
        var _StencilAttachmentOes = OpenTK.Graphics.ES10.All.StencilAttachmentOes;
        var _FramebufferOes = OpenTK.Graphics.ES10.All.FramebufferOes;
        var _RenderbufferOes = OpenTK.Graphics.ES10.All.RenderbufferOes;
        var _RenderbufferWidthOes = OpenTK.Graphics.ES10.All.RenderbufferWidthOes;
        var _RenderbufferHeightOes = OpenTK.Graphics.ES10.All.RenderbufferHeightOes;
        var _RenderbufferInternalFormatOes = OpenTK.Graphics.ES10.All.RenderbufferInternalFormatOes;
        var _StencilIndex1Oes = OpenTK.Graphics.ES10.All.StencilIndex1Oes;
        var _StencilIndex4Oes = OpenTK.Graphics.ES10.All.StencilIndex4Oes;
        var _StencilIndex8Oes = OpenTK.Graphics.ES10.All.StencilIndex8Oes;
        var _RenderbufferRedSizeOes = OpenTK.Graphics.ES10.All.RenderbufferRedSizeOes;
        var _RenderbufferGreenSizeOes = OpenTK.Graphics.ES10.All.RenderbufferGreenSizeOes;
        var _RenderbufferBlueSizeOes = OpenTK.Graphics.ES10.All.RenderbufferBlueSizeOes;
        var _RenderbufferAlphaSizeOes = OpenTK.Graphics.ES10.All.RenderbufferAlphaSizeOes;
        var _RenderbufferDepthSizeOes = OpenTK.Graphics.ES10.All.RenderbufferDepthSizeOes;
        var _RenderbufferStencilSizeOes = OpenTK.Graphics.ES10.All.RenderbufferStencilSizeOes;
        var _TextureGenStrOes = OpenTK.Graphics.ES10.All.TextureGenStrOes;
        var _Rgb565Oes = OpenTK.Graphics.ES10.All.Rgb565Oes;
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES10.All.Etc1Rgb8Oes;
        var _TextureExternalOes = OpenTK.Graphics.ES10.All.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES10.All.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES10.All.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES10.All.RequiredTextureImageUnitsOes;
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES10.All.PerfmonGlobalModeQcom;
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES10.All.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES10.All.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES10.All.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES10.All.TextureSamplesImg;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES10.All.AmdCompressed3DcTexture;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES10.All.AmdCompressedAtcTexture;
        var _AppleTexture2DLimitedNpot = OpenTK.Graphics.ES10.All.AppleTexture2DLimitedNpot;
        var _ExtBlendMinmax = OpenTK.Graphics.ES10.All.ExtBlendMinmax;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES10.All.ExtDiscardFramebuffer;
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES10.All.ExtMultiDrawArrays;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES10.All.ExtReadFormatBgra;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES10.All.ExtTextureFilterAnisotropic;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES10.All.ExtTextureFormatBgra8888;
        var _ExtTextureLodBias = OpenTK.Graphics.ES10.All.ExtTextureLodBias;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES10.All.ImgMultisampledRenderToTexture;
        var _ImgReadFormat = OpenTK.Graphics.ES10.All.ImgReadFormat;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES10.All.ImgTextureCompressionPvrtc;
        var _ImgTextureEnvEnhancedFixedFunction = OpenTK.Graphics.ES10.All.ImgTextureEnvEnhancedFixedFunction;
        var _ImgUserClipPlane = OpenTK.Graphics.ES10.All.ImgUserClipPlane;
        var _NvFence = OpenTK.Graphics.ES10.All.NvFence;
        var _OesBlendEquationSeparate = OpenTK.Graphics.ES10.All.OesBlendEquationSeparate;
        var _OesBlendFuncSeparate = OpenTK.Graphics.ES10.All.OesBlendFuncSeparate;
        var _OesBlendSubtract = OpenTK.Graphics.ES10.All.OesBlendSubtract;
        var _OesByteCoordinates = OpenTK.Graphics.ES10.All.OesByteCoordinates;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES10.All.OesCompressedEtc1Rgb8Texture;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES10.All.OesCompressedPalettedTexture;
        var _OesDepth24 = OpenTK.Graphics.ES10.All.OesDepth24;
        var _OesDepth32 = OpenTK.Graphics.ES10.All.OesDepth32;
        var _OesDrawTexture = OpenTK.Graphics.ES10.All.OesDrawTexture;
        var _OesEglImage = OpenTK.Graphics.ES10.All.OesEglImage;
        var _OesEglImageExternal = OpenTK.Graphics.ES10.All.OesEglImageExternal;
        var _OesElementIndexUint = OpenTK.Graphics.ES10.All.OesElementIndexUint;
        var _OesExtendedMatrixPalette = OpenTK.Graphics.ES10.All.OesExtendedMatrixPalette;
        var _OesFboRenderMipmap = OpenTK.Graphics.ES10.All.OesFboRenderMipmap;
        var _OesFixedPoint = OpenTK.Graphics.ES10.All.OesFixedPoint;
        var _OesFramebufferObject = OpenTK.Graphics.ES10.All.OesFramebufferObject;
        var _OesMapbuffer = OpenTK.Graphics.ES10.All.OesMapbuffer;
        var _OesMatrixGet = OpenTK.Graphics.ES10.All.OesMatrixGet;
        var _OesMatrixPalette = OpenTK.Graphics.ES10.All.OesMatrixPalette;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES10.All.OesPackedDepthStencil;
        var _OesPointSizeArray = OpenTK.Graphics.ES10.All.OesPointSizeArray;
        var _OesPointSprite = OpenTK.Graphics.ES10.All.OesPointSprite;
        var _OesQueryMatrix = OpenTK.Graphics.ES10.All.OesQueryMatrix;
        var _OesReadFormat = OpenTK.Graphics.ES10.All.OesReadFormat;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES10.All.OesRgb8Rgba8;
        var _OesSinglePrecision = OpenTK.Graphics.ES10.All.OesSinglePrecision;
        var _OesStencil1 = OpenTK.Graphics.ES10.All.OesStencil1;
        var _OesStencil4 = OpenTK.Graphics.ES10.All.OesStencil4;
        var _OesStencil8 = OpenTK.Graphics.ES10.All.OesStencil8;
        var _OesStencilWrap = OpenTK.Graphics.ES10.All.OesStencilWrap;
        var _OesTextureCubeMap = OpenTK.Graphics.ES10.All.OesTextureCubeMap;
        var _OesTextureEnvCrossbar = OpenTK.Graphics.ES10.All.OesTextureEnvCrossbar;
        var _OesTextureMirroredRepeat = OpenTK.Graphics.ES10.All.OesTextureMirroredRepeat;
        var _OesVertexArrayObject = OpenTK.Graphics.ES10.All.OesVertexArrayObject;
        var _One = OpenTK.Graphics.ES10.All.One;
        var _QcomDriverControl = OpenTK.Graphics.ES10.All.QcomDriverControl;
        var _QcomExtendedGet = OpenTK.Graphics.ES10.All.QcomExtendedGet;
        var _QcomExtendedGet2 = OpenTK.Graphics.ES10.All.QcomExtendedGet2;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES10.All.QcomPerfmonGlobalMode;
        var _QcomTiledRendering = OpenTK.Graphics.ES10.All.QcomTiledRendering;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES10.All.QcomWriteonlyRendering;
        var _True = OpenTK.Graphics.ES10.All.True;
        var _VersionEsCl10 = OpenTK.Graphics.ES10.All.VersionEsCl10;
        var _VersionEsCl11 = OpenTK.Graphics.ES10.All.VersionEsCl11;
        var _VersionEsCm10 = OpenTK.Graphics.ES10.All.VersionEsCm10;
        var _VersionEsCm11 = OpenTK.Graphics.ES10.All.VersionEsCm11;
    }
    static void Test_AlphaFunction_2995() {
        var _Never = OpenTK.Graphics.ES10.AlphaFunction.Never;
        var _Less = OpenTK.Graphics.ES10.AlphaFunction.Less;
        var _Equal = OpenTK.Graphics.ES10.AlphaFunction.Equal;
        var _Lequal = OpenTK.Graphics.ES10.AlphaFunction.Lequal;
        var _Greater = OpenTK.Graphics.ES10.AlphaFunction.Greater;
        var _Notequal = OpenTK.Graphics.ES10.AlphaFunction.Notequal;
        var _Gequal = OpenTK.Graphics.ES10.AlphaFunction.Gequal;
        var _Always = OpenTK.Graphics.ES10.AlphaFunction.Always;
    }
    static void Test_Amdcompressed3Dctexture_2996() {
        var _GL_3DcXAmd = OpenTK.Graphics.ES10.Amdcompressed3Dctexture.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES10.Amdcompressed3Dctexture.GL_3DcXyAmd;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES10.Amdcompressed3Dctexture.AmdCompressed3DcTexture;
    }
    static void Test_AmdcompressedAtctexture_2997() {
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES10.AmdcompressedAtctexture.AtcRgbaInterpolatedAlphaAmd;
        var _AtcRgbAmd = OpenTK.Graphics.ES10.AmdcompressedAtctexture.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES10.AmdcompressedAtctexture.AtcRgbaExplicitAlphaAmd;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES10.AmdcompressedAtctexture.AmdCompressedAtcTexture;
    }
    static void Test_Appletexture2DlimitedNpot_2998() {
        var _AppleTexture2DLimitedNpot = OpenTK.Graphics.ES10.Appletexture2DlimitedNpot.AppleTexture2DLimitedNpot;
    }
    static void Test_BeginMode_2999() {
        var _Points = OpenTK.Graphics.ES10.BeginMode.Points;
        var _Lines = OpenTK.Graphics.ES10.BeginMode.Lines;
        var _LineLoop = OpenTK.Graphics.ES10.BeginMode.LineLoop;
        var _LineStrip = OpenTK.Graphics.ES10.BeginMode.LineStrip;
        var _Triangles = OpenTK.Graphics.ES10.BeginMode.Triangles;
        var _TriangleStrip = OpenTK.Graphics.ES10.BeginMode.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES10.BeginMode.TriangleFan;
    }
    static void Test_BlendequationrgboessameAsBlendequationoes_3000() {
        var _BlendEquationRgbOes = OpenTK.Graphics.ES10.BlendequationrgboessameAsBlendequationoes.BlendEquationRgbOes;
        var _BlendEquationAlphaOes = OpenTK.Graphics.ES10.BlendequationrgboessameAsBlendequationoes.BlendEquationAlphaOes;
    }
    static void Test_BlendingFactorDest_3001() {
        var _Zero = OpenTK.Graphics.ES10.BlendingFactorDest.Zero;
        var _SrcColor = OpenTK.Graphics.ES10.BlendingFactorDest.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES10.BlendingFactorDest.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES10.BlendingFactorDest.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES10.BlendingFactorDest.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES10.BlendingFactorDest.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES10.BlendingFactorDest.OneMinusDstAlpha;
        var _One = OpenTK.Graphics.ES10.BlendingFactorDest.One;
    }
    static void Test_BlendingFactorSrc_3002() {
        var _DstColor = OpenTK.Graphics.ES10.BlendingFactorSrc.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES10.BlendingFactorSrc.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES10.BlendingFactorSrc.SrcAlphaSaturate;
    }
    static void Test_Boolean_3003() {
        var _False = OpenTK.Graphics.ES10.Boolean.False;
        var _True = OpenTK.Graphics.ES10.Boolean.True;
    }
    static void Test_BufferObjects_3004() {
        var _BufferSize = OpenTK.Graphics.ES10.BufferObjects.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES10.BufferObjects.BufferUsage;
        var _ArrayBuffer = OpenTK.Graphics.ES10.BufferObjects.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES10.BufferObjects.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.ElementArrayBufferBinding;
        var _VertexArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.VertexArrayBufferBinding;
        var _NormalArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.NormalArrayBufferBinding;
        var _ColorArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.ColorArrayBufferBinding;
        var _TextureCoordArrayBufferBinding = OpenTK.Graphics.ES10.BufferObjects.TextureCoordArrayBufferBinding;
        var _StaticDraw = OpenTK.Graphics.ES10.BufferObjects.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES10.BufferObjects.DynamicDraw;
    }
    static void Test_ClearBufferMask_3005() {
        var _DepthBufferBit = OpenTK.Graphics.ES10.ClearBufferMask.DepthBufferBit;
        var _StencilBufferBit = OpenTK.Graphics.ES10.ClearBufferMask.StencilBufferBit;
        var _ColorBufferBit = OpenTK.Graphics.ES10.ClearBufferMask.ColorBufferBit;
    }
    static void Test_ClipPlaneName_3006() {
        var _ClipPlane0 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane0;
        var _ClipPlane1 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane1;
        var _ClipPlane2 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane2;
        var _ClipPlane3 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane3;
        var _ClipPlane4 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane4;
        var _ClipPlane5 = OpenTK.Graphics.ES10.ClipPlaneName.ClipPlane5;
    }
    static void Test_CullFaceMode_3007() {
        var _Front = OpenTK.Graphics.ES10.CullFaceMode.Front;
        var _Back = OpenTK.Graphics.ES10.CullFaceMode.Back;
        var _FrontAndBack = OpenTK.Graphics.ES10.CullFaceMode.FrontAndBack;
    }
    static void Test_DataType_3008() {
        var _Byte = OpenTK.Graphics.ES10.DataType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES10.DataType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES10.DataType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES10.DataType.UnsignedShort;
        var _Float = OpenTK.Graphics.ES10.DataType.Float;
        var _Fixed = OpenTK.Graphics.ES10.DataType.Fixed;
    }
    static void Test_EnableCap_3009() {
        var _PointSmooth = OpenTK.Graphics.ES10.EnableCap.PointSmooth;
        var _LineSmooth = OpenTK.Graphics.ES10.EnableCap.LineSmooth;
        var _CullFace = OpenTK.Graphics.ES10.EnableCap.CullFace;
        var _Lighting = OpenTK.Graphics.ES10.EnableCap.Lighting;
        var _ColorMaterial = OpenTK.Graphics.ES10.EnableCap.ColorMaterial;
        var _Fog = OpenTK.Graphics.ES10.EnableCap.Fog;
        var _DepthTest = OpenTK.Graphics.ES10.EnableCap.DepthTest;
        var _StencilTest = OpenTK.Graphics.ES10.EnableCap.StencilTest;
        var _Normalize = OpenTK.Graphics.ES10.EnableCap.Normalize;
        var _AlphaTest = OpenTK.Graphics.ES10.EnableCap.AlphaTest;
        var _Dither = OpenTK.Graphics.ES10.EnableCap.Dither;
        var _Blend = OpenTK.Graphics.ES10.EnableCap.Blend;
        var _ColorLogicOp = OpenTK.Graphics.ES10.EnableCap.ColorLogicOp;
        var _ScissorTest = OpenTK.Graphics.ES10.EnableCap.ScissorTest;
        var _Texture2D = OpenTK.Graphics.ES10.EnableCap.Texture2D;
        var _PolygonOffsetFill = OpenTK.Graphics.ES10.EnableCap.PolygonOffsetFill;
        var _RescaleNormal = OpenTK.Graphics.ES10.EnableCap.RescaleNormal;
        var _VertexArray = OpenTK.Graphics.ES10.EnableCap.VertexArray;
        var _NormalArray = OpenTK.Graphics.ES10.EnableCap.NormalArray;
        var _ColorArray = OpenTK.Graphics.ES10.EnableCap.ColorArray;
        var _TextureCoordArray = OpenTK.Graphics.ES10.EnableCap.TextureCoordArray;
        var _Multisample = OpenTK.Graphics.ES10.EnableCap.Multisample;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES10.EnableCap.SampleAlphaToCoverage;
        var _SampleAlphaToOne = OpenTK.Graphics.ES10.EnableCap.SampleAlphaToOne;
        var _SampleCoverage = OpenTK.Graphics.ES10.EnableCap.SampleCoverage;
    }
    static void Test_ErrorCode_3010() {
        var _NoError = OpenTK.Graphics.ES10.ErrorCode.NoError;
        var _InvalidEnum = OpenTK.Graphics.ES10.ErrorCode.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES10.ErrorCode.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES10.ErrorCode.InvalidOperation;
        var _StackOverflow = OpenTK.Graphics.ES10.ErrorCode.StackOverflow;
        var _StackUnderflow = OpenTK.Graphics.ES10.ErrorCode.StackUnderflow;
        var _OutOfMemory = OpenTK.Graphics.ES10.ErrorCode.OutOfMemory;
    }
    static void Test_ExtblendMinmax_3011() {
        var _MinExt = OpenTK.Graphics.ES10.ExtblendMinmax.MinExt;
        var _MaxExt = OpenTK.Graphics.ES10.ExtblendMinmax.MaxExt;
        var _ExtBlendMinmax = OpenTK.Graphics.ES10.ExtblendMinmax.ExtBlendMinmax;
    }
    static void Test_ExtdiscardFramebuffer_3012() {
        var _ColorExt = OpenTK.Graphics.ES10.ExtdiscardFramebuffer.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES10.ExtdiscardFramebuffer.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES10.ExtdiscardFramebuffer.StencilExt;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES10.ExtdiscardFramebuffer.ExtDiscardFramebuffer;
    }
    static void Test_ExtmultiDrawArrays_3013() {
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES10.ExtmultiDrawArrays.ExtMultiDrawArrays;
    }
    static void Test_ExtreadFormatBgra_3014() {
        var _BgraExt = OpenTK.Graphics.ES10.ExtreadFormatBgra.BgraExt;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES10.ExtreadFormatBgra.UnsignedShort4444RevExt;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES10.ExtreadFormatBgra.UnsignedShort1555RevExt;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES10.ExtreadFormatBgra.ExtReadFormatBgra;
    }
    static void Test_ExttextureFilterAnisotropic_3015() {
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES10.ExttextureFilterAnisotropic.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES10.ExttextureFilterAnisotropic.MaxTextureMaxAnisotropyExt;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES10.ExttextureFilterAnisotropic.ExtTextureFilterAnisotropic;
    }
    static void Test_ExttextureFormatBgra8888_3016() {
        var _BgraExt = OpenTK.Graphics.ES10.ExttextureFormatBgra8888.BgraExt;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES10.ExttextureFormatBgra8888.ExtTextureFormatBgra8888;
    }
    static void Test_ExttextureLodBias_3017() {
        var _MaxTextureLodBiasExt = OpenTK.Graphics.ES10.ExttextureLodBias.MaxTextureLodBiasExt;
        var _TextureFilterControlExt = OpenTK.Graphics.ES10.ExttextureLodBias.TextureFilterControlExt;
        var _TextureLodBiasExt = OpenTK.Graphics.ES10.ExttextureLodBias.TextureLodBiasExt;
        var _ExtTextureLodBias = OpenTK.Graphics.ES10.ExttextureLodBias.ExtTextureLodBias;
    }
    static void Test_FogMode_3018() {
        var _Exp = OpenTK.Graphics.ES10.FogMode.Exp;
        var _Exp2 = OpenTK.Graphics.ES10.FogMode.Exp2;
    }
    static void Test_FogParameter_3019() {
        var _FogDensity = OpenTK.Graphics.ES10.FogParameter.FogDensity;
        var _FogStart = OpenTK.Graphics.ES10.FogParameter.FogStart;
        var _FogEnd = OpenTK.Graphics.ES10.FogParameter.FogEnd;
        var _FogMode = OpenTK.Graphics.ES10.FogParameter.FogMode;
        var _FogColor = OpenTK.Graphics.ES10.FogParameter.FogColor;
    }
    static void Test_FrontFaceDirection_3020() {
        var _Cw = OpenTK.Graphics.ES10.FrontFaceDirection.Cw;
        var _Ccw = OpenTK.Graphics.ES10.FrontFaceDirection.Ccw;
    }
    static void Test_GetPName_3021() {
        var _CurrentColor = OpenTK.Graphics.ES10.GetPName.CurrentColor;
        var _CurrentNormal = OpenTK.Graphics.ES10.GetPName.CurrentNormal;
        var _CurrentTextureCoords = OpenTK.Graphics.ES10.GetPName.CurrentTextureCoords;
        var _PointSize = OpenTK.Graphics.ES10.GetPName.PointSize;
        var _SmoothPointSizeRange = OpenTK.Graphics.ES10.GetPName.SmoothPointSizeRange;
        var _LineWidth = OpenTK.Graphics.ES10.GetPName.LineWidth;
        var _SmoothLineWidthRange = OpenTK.Graphics.ES10.GetPName.SmoothLineWidthRange;
        var _CullFaceMode = OpenTK.Graphics.ES10.GetPName.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES10.GetPName.FrontFace;
        var _ShadeModel = OpenTK.Graphics.ES10.GetPName.ShadeModel;
        var _DepthRange = OpenTK.Graphics.ES10.GetPName.DepthRange;
        var _DepthWritemask = OpenTK.Graphics.ES10.GetPName.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES10.GetPName.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES10.GetPName.DepthFunc;
        var _StencilClearValue = OpenTK.Graphics.ES10.GetPName.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES10.GetPName.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES10.GetPName.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES10.GetPName.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES10.GetPName.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES10.GetPName.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES10.GetPName.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES10.GetPName.StencilWritemask;
        var _MatrixMode = OpenTK.Graphics.ES10.GetPName.MatrixMode;
        var _Viewport = OpenTK.Graphics.ES10.GetPName.Viewport;
        var _ModelviewStackDepth = OpenTK.Graphics.ES10.GetPName.ModelviewStackDepth;
        var _ProjectionStackDepth = OpenTK.Graphics.ES10.GetPName.ProjectionStackDepth;
        var _TextureStackDepth = OpenTK.Graphics.ES10.GetPName.TextureStackDepth;
        var _ModelviewMatrix = OpenTK.Graphics.ES10.GetPName.ModelviewMatrix;
        var _ProjectionMatrix = OpenTK.Graphics.ES10.GetPName.ProjectionMatrix;
        var _TextureMatrix = OpenTK.Graphics.ES10.GetPName.TextureMatrix;
        var _AlphaTestFunc = OpenTK.Graphics.ES10.GetPName.AlphaTestFunc;
        var _AlphaTestRef = OpenTK.Graphics.ES10.GetPName.AlphaTestRef;
        var _BlendDst = OpenTK.Graphics.ES10.GetPName.BlendDst;
        var _BlendSrc = OpenTK.Graphics.ES10.GetPName.BlendSrc;
        var _LogicOpMode = OpenTK.Graphics.ES10.GetPName.LogicOpMode;
        var _ScissorBox = OpenTK.Graphics.ES10.GetPName.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES10.GetPName.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES10.GetPName.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES10.GetPName.ColorWritemask;
        var _UnpackAlignment = OpenTK.Graphics.ES10.GetPName.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES10.GetPName.PackAlignment;
        var _MaxLights = OpenTK.Graphics.ES10.GetPName.MaxLights;
        var _MaxClipPlanes = OpenTK.Graphics.ES10.GetPName.MaxClipPlanes;
        var _MaxTextureSize = OpenTK.Graphics.ES10.GetPName.MaxTextureSize;
        var _MaxModelviewStackDepth = OpenTK.Graphics.ES10.GetPName.MaxModelviewStackDepth;
        var _MaxProjectionStackDepth = OpenTK.Graphics.ES10.GetPName.MaxProjectionStackDepth;
        var _MaxTextureStackDepth = OpenTK.Graphics.ES10.GetPName.MaxTextureStackDepth;
        var _MaxViewportDims = OpenTK.Graphics.ES10.GetPName.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES10.GetPName.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES10.GetPName.RedBits;
        var _GreenBits = OpenTK.Graphics.ES10.GetPName.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES10.GetPName.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES10.GetPName.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES10.GetPName.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES10.GetPName.StencilBits;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES10.GetPName.PolygonOffsetUnits;
        var _PolygonOffsetFill = OpenTK.Graphics.ES10.GetPName.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES10.GetPName.PolygonOffsetFactor;
        var _TextureBinding2D = OpenTK.Graphics.ES10.GetPName.TextureBinding2D;
        var _VertexArraySize = OpenTK.Graphics.ES10.GetPName.VertexArraySize;
        var _VertexArrayType = OpenTK.Graphics.ES10.GetPName.VertexArrayType;
        var _VertexArrayStride = OpenTK.Graphics.ES10.GetPName.VertexArrayStride;
        var _NormalArrayType = OpenTK.Graphics.ES10.GetPName.NormalArrayType;
        var _NormalArrayStride = OpenTK.Graphics.ES10.GetPName.NormalArrayStride;
        var _ColorArraySize = OpenTK.Graphics.ES10.GetPName.ColorArraySize;
        var _ColorArrayType = OpenTK.Graphics.ES10.GetPName.ColorArrayType;
        var _ColorArrayStride = OpenTK.Graphics.ES10.GetPName.ColorArrayStride;
        var _TextureCoordArraySize = OpenTK.Graphics.ES10.GetPName.TextureCoordArraySize;
        var _TextureCoordArrayType = OpenTK.Graphics.ES10.GetPName.TextureCoordArrayType;
        var _TextureCoordArrayStride = OpenTK.Graphics.ES10.GetPName.TextureCoordArrayStride;
        var _VertexArrayPointer = OpenTK.Graphics.ES10.GetPName.VertexArrayPointer;
        var _NormalArrayPointer = OpenTK.Graphics.ES10.GetPName.NormalArrayPointer;
        var _ColorArrayPointer = OpenTK.Graphics.ES10.GetPName.ColorArrayPointer;
        var _TextureCoordArrayPointer = OpenTK.Graphics.ES10.GetPName.TextureCoordArrayPointer;
        var _SampleBuffers = OpenTK.Graphics.ES10.GetPName.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES10.GetPName.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES10.GetPName.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES10.GetPName.SampleCoverageInvert;
        var _PointSizeMin = OpenTK.Graphics.ES10.GetPName.PointSizeMin;
        var _PointSizeMax = OpenTK.Graphics.ES10.GetPName.PointSizeMax;
        var _PointFadeThresholdSize = OpenTK.Graphics.ES10.GetPName.PointFadeThresholdSize;
        var _PointDistanceAttenuation = OpenTK.Graphics.ES10.GetPName.PointDistanceAttenuation;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES10.GetPName.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES10.GetPName.AliasedLineWidthRange;
        var _MaxTextureUnits = OpenTK.Graphics.ES10.GetPName.MaxTextureUnits;
    }
    static void Test_GetTextureParameter_3022() {
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES10.GetTextureParameter.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES10.GetTextureParameter.CompressedTextureFormats;
    }
    static void Test_HintMode_3023() {
        var _DontCare = OpenTK.Graphics.ES10.HintMode.DontCare;
        var _Fastest = OpenTK.Graphics.ES10.HintMode.Fastest;
        var _Nicest = OpenTK.Graphics.ES10.HintMode.Nicest;
    }
    static void Test_HintTarget_3024() {
        var _PerspectiveCorrectionHint = OpenTK.Graphics.ES10.HintTarget.PerspectiveCorrectionHint;
        var _PointSmoothHint = OpenTK.Graphics.ES10.HintTarget.PointSmoothHint;
        var _LineSmoothHint = OpenTK.Graphics.ES10.HintTarget.LineSmoothHint;
        var _FogHint = OpenTK.Graphics.ES10.HintTarget.FogHint;
        var _GenerateMipmapHint = OpenTK.Graphics.ES10.HintTarget.GenerateMipmapHint;
    }
    static void Test_ImgmultisampledRenderToTexture_3025() {
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES10.ImgmultisampledRenderToTexture.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES10.ImgmultisampledRenderToTexture.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES10.ImgmultisampledRenderToTexture.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES10.ImgmultisampledRenderToTexture.TextureSamplesImg;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES10.ImgmultisampledRenderToTexture.ImgMultisampledRenderToTexture;
    }
    static void Test_ImgreadFormat_3026() {
        var _BgraImg = OpenTK.Graphics.ES10.ImgreadFormat.BgraImg;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES10.ImgreadFormat.UnsignedShort4444RevImg;
        var _ImgReadFormat = OpenTK.Graphics.ES10.ImgreadFormat.ImgReadFormat;
    }
    static void Test_ImgtextureCompressionPvrtc_3027() {
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES10.ImgtextureCompressionPvrtc.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES10.ImgtextureCompressionPvrtc.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES10.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES10.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc2Bppv1Img;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES10.ImgtextureCompressionPvrtc.ImgTextureCompressionPvrtc;
    }
    static void Test_ImgtextureEnvEnhancedFixedFunction_3028() {
        var _Dot3RgbaImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.Dot3RgbaImg;
        var _ModulateColorImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.ModulateColorImg;
        var _RecipAddSignedAlphaImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.RecipAddSignedAlphaImg;
        var _TextureAlphaModulateImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.TextureAlphaModulateImg;
        var _FactorAlphaModulateImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.FactorAlphaModulateImg;
        var _FragmentAlphaModulateImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.FragmentAlphaModulateImg;
        var _AddBlendImg = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.AddBlendImg;
        var _ImgTextureEnvEnhancedFixedFunction = OpenTK.Graphics.ES10.ImgtextureEnvEnhancedFixedFunction.ImgTextureEnvEnhancedFixedFunction;
    }
    static void Test_ImguserClipPlane_3029() {
        var _MaxClipPlanesImg = OpenTK.Graphics.ES10.ImguserClipPlane.MaxClipPlanesImg;
        var _ClipPlane0Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane0Img;
        var _ClipPlane1Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane1Img;
        var _ClipPlane2Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane2Img;
        var _ClipPlane3Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane3Img;
        var _ClipPlane4Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane4Img;
        var _ClipPlane5Img = OpenTK.Graphics.ES10.ImguserClipPlane.ClipPlane5Img;
        var _ImgUserClipPlane = OpenTK.Graphics.ES10.ImguserClipPlane.ImgUserClipPlane;
    }
    static void Test_LightModelParameter_3030() {
        var _LightModelTwoSide = OpenTK.Graphics.ES10.LightModelParameter.LightModelTwoSide;
        var _LightModelAmbient = OpenTK.Graphics.ES10.LightModelParameter.LightModelAmbient;
    }
    static void Test_LightName_3031() {
        var _Light0 = OpenTK.Graphics.ES10.LightName.Light0;
        var _Light1 = OpenTK.Graphics.ES10.LightName.Light1;
        var _Light2 = OpenTK.Graphics.ES10.LightName.Light2;
        var _Light3 = OpenTK.Graphics.ES10.LightName.Light3;
        var _Light4 = OpenTK.Graphics.ES10.LightName.Light4;
        var _Light5 = OpenTK.Graphics.ES10.LightName.Light5;
        var _Light6 = OpenTK.Graphics.ES10.LightName.Light6;
        var _Light7 = OpenTK.Graphics.ES10.LightName.Light7;
    }
    static void Test_LightParameter_3032() {
        var _Ambient = OpenTK.Graphics.ES10.LightParameter.Ambient;
        var _Diffuse = OpenTK.Graphics.ES10.LightParameter.Diffuse;
        var _Specular = OpenTK.Graphics.ES10.LightParameter.Specular;
        var _Position = OpenTK.Graphics.ES10.LightParameter.Position;
        var _SpotDirection = OpenTK.Graphics.ES10.LightParameter.SpotDirection;
        var _SpotExponent = OpenTK.Graphics.ES10.LightParameter.SpotExponent;
        var _SpotCutoff = OpenTK.Graphics.ES10.LightParameter.SpotCutoff;
        var _ConstantAttenuation = OpenTK.Graphics.ES10.LightParameter.ConstantAttenuation;
        var _LinearAttenuation = OpenTK.Graphics.ES10.LightParameter.LinearAttenuation;
        var _QuadraticAttenuation = OpenTK.Graphics.ES10.LightParameter.QuadraticAttenuation;
    }
    static void Test_LogicOp_3033() {
        var _Clear = OpenTK.Graphics.ES10.LogicOp.Clear;
        var _And = OpenTK.Graphics.ES10.LogicOp.And;
        var _AndReverse = OpenTK.Graphics.ES10.LogicOp.AndReverse;
        var _Copy = OpenTK.Graphics.ES10.LogicOp.Copy;
        var _AndInverted = OpenTK.Graphics.ES10.LogicOp.AndInverted;
        var _Noop = OpenTK.Graphics.ES10.LogicOp.Noop;
        var _Xor = OpenTK.Graphics.ES10.LogicOp.Xor;
        var _Or = OpenTK.Graphics.ES10.LogicOp.Or;
        var _Nor = OpenTK.Graphics.ES10.LogicOp.Nor;
        var _Equiv = OpenTK.Graphics.ES10.LogicOp.Equiv;
        var _Invert = OpenTK.Graphics.ES10.LogicOp.Invert;
        var _OrReverse = OpenTK.Graphics.ES10.LogicOp.OrReverse;
        var _CopyInverted = OpenTK.Graphics.ES10.LogicOp.CopyInverted;
        var _OrInverted = OpenTK.Graphics.ES10.LogicOp.OrInverted;
        var _Nand = OpenTK.Graphics.ES10.LogicOp.Nand;
        var _Set = OpenTK.Graphics.ES10.LogicOp.Set;
    }
    static void Test_MaterialParameter_3034() {
        var _Emission = OpenTK.Graphics.ES10.MaterialParameter.Emission;
        var _Shininess = OpenTK.Graphics.ES10.MaterialParameter.Shininess;
        var _AmbientAndDiffuse = OpenTK.Graphics.ES10.MaterialParameter.AmbientAndDiffuse;
    }
    static void Test_MatrixMode_3035() {
        var _Modelview = OpenTK.Graphics.ES10.MatrixMode.Modelview;
        var _Projection = OpenTK.Graphics.ES10.MatrixMode.Projection;
        var _Texture = OpenTK.Graphics.ES10.MatrixMode.Texture;
    }
    static void Test_Nvfence_3036() {
        var _AllCompletedNv = OpenTK.Graphics.ES10.Nvfence.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES10.Nvfence.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES10.Nvfence.FenceConditionNv;
        var _NvFence = OpenTK.Graphics.ES10.Nvfence.NvFence;
    }
    static void Test_OesblendEquationSeparate_3037() {
        var _OesBlendEquationSeparate = OpenTK.Graphics.ES10.OesblendEquationSeparate.OesBlendEquationSeparate;
    }
    static void Test_OesblendFuncSeparate_3038() {
        var _BlendDstRgbOes = OpenTK.Graphics.ES10.OesblendFuncSeparate.BlendDstRgbOes;
        var _BlendSrcRgbOes = OpenTK.Graphics.ES10.OesblendFuncSeparate.BlendSrcRgbOes;
        var _BlendDstAlphaOes = OpenTK.Graphics.ES10.OesblendFuncSeparate.BlendDstAlphaOes;
        var _BlendSrcAlphaOes = OpenTK.Graphics.ES10.OesblendFuncSeparate.BlendSrcAlphaOes;
        var _OesBlendFuncSeparate = OpenTK.Graphics.ES10.OesblendFuncSeparate.OesBlendFuncSeparate;
    }
    static void Test_OesblendSubtract_3039() {
        var _FuncAddOes = OpenTK.Graphics.ES10.OesblendSubtract.FuncAddOes;
        var _BlendEquationOes = OpenTK.Graphics.ES10.OesblendSubtract.BlendEquationOes;
        var _FuncSubtractOes = OpenTK.Graphics.ES10.OesblendSubtract.FuncSubtractOes;
        var _FuncReverseSubtractOes = OpenTK.Graphics.ES10.OesblendSubtract.FuncReverseSubtractOes;
        var _OesBlendSubtract = OpenTK.Graphics.ES10.OesblendSubtract.OesBlendSubtract;
    }
    static void Test_OesbyteCoordinates_3040() {
        var _OesByteCoordinates = OpenTK.Graphics.ES10.OesbyteCoordinates.OesByteCoordinates;
    }
    static void Test_OescompressedEtc1Rgb8Texture_3041() {
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES10.OescompressedEtc1Rgb8Texture.Etc1Rgb8Oes;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES10.OescompressedEtc1Rgb8Texture.OesCompressedEtc1Rgb8Texture;
    }
    static void Test_OescompressedPalettedTexture_3042() {
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES10.OescompressedPalettedTexture.Palette8Rgb5A1Oes;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES10.OescompressedPalettedTexture.OesCompressedPalettedTexture;
    }
    static void Test_Oesdepth24_3043() {
        var _DepthComponent24Oes = OpenTK.Graphics.ES10.Oesdepth24.DepthComponent24Oes;
        var _OesDepth24 = OpenTK.Graphics.ES10.Oesdepth24.OesDepth24;
    }
    static void Test_Oesdepth32_3044() {
        var _DepthComponent32Oes = OpenTK.Graphics.ES10.Oesdepth32.DepthComponent32Oes;
        var _OesDepth32 = OpenTK.Graphics.ES10.Oesdepth32.OesDepth32;
    }
    static void Test_OesdrawTexture_3045() {
        var _TextureCropRectOes = OpenTK.Graphics.ES10.OesdrawTexture.TextureCropRectOes;
        var _OesDrawTexture = OpenTK.Graphics.ES10.OesdrawTexture.OesDrawTexture;
    }
    static void Test_Oeseglimage_3046() {
        var _OesEglImage = OpenTK.Graphics.ES10.Oeseglimage.OesEglImage;
    }
    static void Test_OeseglimageExternal_3047() {
        var _TextureExternalOes = OpenTK.Graphics.ES10.OeseglimageExternal.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES10.OeseglimageExternal.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES10.OeseglimageExternal.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES10.OeseglimageExternal.RequiredTextureImageUnitsOes;
        var _OesEglImageExternal = OpenTK.Graphics.ES10.OeseglimageExternal.OesEglImageExternal;
    }
    static void Test_OeselementIndexUint_3048() {
        var _UnsignedInt = OpenTK.Graphics.ES10.OeselementIndexUint.UnsignedInt;
        var _OesElementIndexUint = OpenTK.Graphics.ES10.OeselementIndexUint.OesElementIndexUint;
    }
    static void Test_OesextendedMatrixPalette_3049() {
        var _OesExtendedMatrixPalette = OpenTK.Graphics.ES10.OesextendedMatrixPalette.OesExtendedMatrixPalette;
    }
    static void Test_OesfboRenderMipmap_3050() {
        var _OesFboRenderMipmap = OpenTK.Graphics.ES10.OesfboRenderMipmap.OesFboRenderMipmap;
    }
    static void Test_OesfixedPoint_3051() {
        var _FixedOes = OpenTK.Graphics.ES10.OesfixedPoint.FixedOes;
        var _OesFixedPoint = OpenTK.Graphics.ES10.OesfixedPoint.OesFixedPoint;
    }
    static void Test_OesframebufferObject_3052() {
        var _NoneOes = OpenTK.Graphics.ES10.OesframebufferObject.NoneOes;
        var _InvalidFramebufferOperationOes = OpenTK.Graphics.ES10.OesframebufferObject.InvalidFramebufferOperationOes;
        var _Rgba4Oes = OpenTK.Graphics.ES10.OesframebufferObject.Rgba4Oes;
        var _Rgb5A1Oes = OpenTK.Graphics.ES10.OesframebufferObject.Rgb5A1Oes;
        var _DepthComponent16Oes = OpenTK.Graphics.ES10.OesframebufferObject.DepthComponent16Oes;
        var _MaxRenderbufferSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.MaxRenderbufferSizeOes;
        var _FramebufferBindingOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferBindingOes;
        var _RenderbufferBindingOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferBindingOes;
        var _FramebufferAttachmentObjectTypeOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferAttachmentObjectTypeOes;
        var _FramebufferAttachmentObjectNameOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferAttachmentObjectNameOes;
        var _FramebufferAttachmentTextureLevelOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferAttachmentTextureLevelOes;
        var _FramebufferAttachmentTextureCubeMapFaceOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferAttachmentTextureCubeMapFaceOes;
        var _FramebufferCompleteOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferCompleteOes;
        var _FramebufferIncompleteAttachmentOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferIncompleteAttachmentOes;
        var _FramebufferIncompleteMissingAttachmentOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferIncompleteMissingAttachmentOes;
        var _FramebufferIncompleteDimensionsOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferIncompleteDimensionsOes;
        var _FramebufferIncompleteFormatsOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferIncompleteFormatsOes;
        var _FramebufferUnsupportedOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferUnsupportedOes;
        var _ColorAttachment0Oes = OpenTK.Graphics.ES10.OesframebufferObject.ColorAttachment0Oes;
        var _DepthAttachmentOes = OpenTK.Graphics.ES10.OesframebufferObject.DepthAttachmentOes;
        var _StencilAttachmentOes = OpenTK.Graphics.ES10.OesframebufferObject.StencilAttachmentOes;
        var _FramebufferOes = OpenTK.Graphics.ES10.OesframebufferObject.FramebufferOes;
        var _RenderbufferOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferOes;
        var _RenderbufferWidthOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferWidthOes;
        var _RenderbufferHeightOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferHeightOes;
        var _RenderbufferInternalFormatOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferInternalFormatOes;
        var _RenderbufferRedSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferRedSizeOes;
        var _RenderbufferGreenSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferGreenSizeOes;
        var _RenderbufferBlueSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferBlueSizeOes;
        var _RenderbufferAlphaSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferAlphaSizeOes;
        var _RenderbufferDepthSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferDepthSizeOes;
        var _RenderbufferStencilSizeOes = OpenTK.Graphics.ES10.OesframebufferObject.RenderbufferStencilSizeOes;
        var _Rgb565Oes = OpenTK.Graphics.ES10.OesframebufferObject.Rgb565Oes;
        var _OesFramebufferObject = OpenTK.Graphics.ES10.OesframebufferObject.OesFramebufferObject;
    }
    static void Test_Oesmapbuffer_3053() {
        var _WriteOnlyOes = OpenTK.Graphics.ES10.Oesmapbuffer.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES10.Oesmapbuffer.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES10.Oesmapbuffer.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES10.Oesmapbuffer.BufferMapPointerOes;
        var _OesMapbuffer = OpenTK.Graphics.ES10.Oesmapbuffer.OesMapbuffer;
    }
    static void Test_OesmatrixGet_3054() {
        var _ModelviewMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.OesmatrixGet.ModelviewMatrixFloatAsIntBitsOes;
        var _ProjectionMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.OesmatrixGet.ProjectionMatrixFloatAsIntBitsOes;
        var _TextureMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES10.OesmatrixGet.TextureMatrixFloatAsIntBitsOes;
        var _OesMatrixGet = OpenTK.Graphics.ES10.OesmatrixGet.OesMatrixGet;
    }
    static void Test_OesmatrixPalette_3055() {
        var _MaxVertexUnitsOes = OpenTK.Graphics.ES10.OesmatrixPalette.MaxVertexUnitsOes;
        var _WeightArrayTypeOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArrayTypeOes;
        var _WeightArrayStrideOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArrayStrideOes;
        var _WeightArraySizeOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArraySizeOes;
        var _WeightArrayPointerOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArrayPointerOes;
        var _WeightArrayOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArrayOes;
        var _MatrixPaletteOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixPaletteOes;
        var _MaxPaletteMatricesOes = OpenTK.Graphics.ES10.OesmatrixPalette.MaxPaletteMatricesOes;
        var _CurrentPaletteMatrixOes = OpenTK.Graphics.ES10.OesmatrixPalette.CurrentPaletteMatrixOes;
        var _MatrixIndexArrayOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArrayOes;
        var _MatrixIndexArraySizeOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArraySizeOes;
        var _MatrixIndexArrayTypeOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArrayTypeOes;
        var _MatrixIndexArrayStrideOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArrayStrideOes;
        var _MatrixIndexArrayPointerOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArrayPointerOes;
        var _WeightArrayBufferBindingOes = OpenTK.Graphics.ES10.OesmatrixPalette.WeightArrayBufferBindingOes;
        var _MatrixIndexArrayBufferBindingOes = OpenTK.Graphics.ES10.OesmatrixPalette.MatrixIndexArrayBufferBindingOes;
        var _OesMatrixPalette = OpenTK.Graphics.ES10.OesmatrixPalette.OesMatrixPalette;
    }
    static void Test_OespackedDepthStencil_3056() {
        var _DepthStencilOes = OpenTK.Graphics.ES10.OespackedDepthStencil.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES10.OespackedDepthStencil.UnsignedInt248Oes;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES10.OespackedDepthStencil.Depth24Stencil8Oes;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES10.OespackedDepthStencil.OesPackedDepthStencil;
    }
    static void Test_OespointSizeArray_3057() {
        var _PointSizeArrayTypeOes = OpenTK.Graphics.ES10.OespointSizeArray.PointSizeArrayTypeOes;
        var _PointSizeArrayStrideOes = OpenTK.Graphics.ES10.OespointSizeArray.PointSizeArrayStrideOes;
        var _PointSizeArrayPointerOes = OpenTK.Graphics.ES10.OespointSizeArray.PointSizeArrayPointerOes;
        var _PointSizeArrayOes = OpenTK.Graphics.ES10.OespointSizeArray.PointSizeArrayOes;
        var _PointSizeArrayBufferBindingOes = OpenTK.Graphics.ES10.OespointSizeArray.PointSizeArrayBufferBindingOes;
        var _OesPointSizeArray = OpenTK.Graphics.ES10.OespointSizeArray.OesPointSizeArray;
    }
    static void Test_OespointSprite_3058() {
        var _PointSpriteOes = OpenTK.Graphics.ES10.OespointSprite.PointSpriteOes;
        var _CoordReplaceOes = OpenTK.Graphics.ES10.OespointSprite.CoordReplaceOes;
        var _OesPointSprite = OpenTK.Graphics.ES10.OespointSprite.OesPointSprite;
    }
    static void Test_OesqueryMatrix_3059() {
        var _OesQueryMatrix = OpenTK.Graphics.ES10.OesqueryMatrix.OesQueryMatrix;
    }
    static void Test_OesreadFormat_3060() {
        var _ImplementationColorReadTypeOes = OpenTK.Graphics.ES10.OesreadFormat.ImplementationColorReadTypeOes;
        var _ImplementationColorReadFormatOes = OpenTK.Graphics.ES10.OesreadFormat.ImplementationColorReadFormatOes;
        var _OesReadFormat = OpenTK.Graphics.ES10.OesreadFormat.OesReadFormat;
    }
    static void Test_Oesrgb8Rgba8_3061() {
        var _Rgb8Oes = OpenTK.Graphics.ES10.Oesrgb8Rgba8.Rgb8Oes;
        var _Rgba8Oes = OpenTK.Graphics.ES10.Oesrgb8Rgba8.Rgba8Oes;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES10.Oesrgb8Rgba8.OesRgb8Rgba8;
    }
    static void Test_OessinglePrecision_3062() {
        var _OesSinglePrecision = OpenTK.Graphics.ES10.OessinglePrecision.OesSinglePrecision;
    }
    static void Test_Oesstencil1_3063() {
        var _StencilIndex1Oes = OpenTK.Graphics.ES10.Oesstencil1.StencilIndex1Oes;
        var _OesStencil1 = OpenTK.Graphics.ES10.Oesstencil1.OesStencil1;
    }
    static void Test_Oesstencil4_3064() {
        var _StencilIndex4Oes = OpenTK.Graphics.ES10.Oesstencil4.StencilIndex4Oes;
        var _OesStencil4 = OpenTK.Graphics.ES10.Oesstencil4.OesStencil4;
    }
    static void Test_Oesstencil8_3065() {
        var _StencilIndex8Oes = OpenTK.Graphics.ES10.Oesstencil8.StencilIndex8Oes;
        var _OesStencil8 = OpenTK.Graphics.ES10.Oesstencil8.OesStencil8;
    }
    static void Test_OesstencilWrap_3066() {
        var _IncrWrapOes = OpenTK.Graphics.ES10.OesstencilWrap.IncrWrapOes;
        var _DecrWrapOes = OpenTK.Graphics.ES10.OesstencilWrap.DecrWrapOes;
        var _OesStencilWrap = OpenTK.Graphics.ES10.OesstencilWrap.OesStencilWrap;
    }
    static void Test_OestextureCubeMap_3067() {
        var _TextureGenModeOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureGenModeOes;
        var _NormalMapOes = OpenTK.Graphics.ES10.OestextureCubeMap.NormalMapOes;
        var _ReflectionMapOes = OpenTK.Graphics.ES10.OestextureCubeMap.ReflectionMapOes;
        var _TextureCubeMapOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapOes;
        var _TextureBindingCubeMapOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureBindingCubeMapOes;
        var _TextureCubeMapPositiveXOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapPositiveXOes;
        var _TextureCubeMapNegativeXOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapNegativeXOes;
        var _TextureCubeMapPositiveYOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapPositiveYOes;
        var _TextureCubeMapNegativeYOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapNegativeYOes;
        var _TextureCubeMapPositiveZOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapPositiveZOes;
        var _TextureCubeMapNegativeZOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureCubeMapNegativeZOes;
        var _MaxCubeMapTextureSizeOes = OpenTK.Graphics.ES10.OestextureCubeMap.MaxCubeMapTextureSizeOes;
        var _TextureGenStrOes = OpenTK.Graphics.ES10.OestextureCubeMap.TextureGenStrOes;
        var _OesTextureCubeMap = OpenTK.Graphics.ES10.OestextureCubeMap.OesTextureCubeMap;
    }
    static void Test_OestextureEnvCrossbar_3068() {
        var _OesTextureEnvCrossbar = OpenTK.Graphics.ES10.OestextureEnvCrossbar.OesTextureEnvCrossbar;
    }
    static void Test_OestextureMirroredRepeat_3069() {
        var _MirroredRepeatOes = OpenTK.Graphics.ES10.OestextureMirroredRepeat.MirroredRepeatOes;
        var _OesTextureMirroredRepeat = OpenTK.Graphics.ES10.OestextureMirroredRepeat.OesTextureMirroredRepeat;
    }
    static void Test_OesvertexArrayObject_3070() {
        var _VertexArrayBindingOes = OpenTK.Graphics.ES10.OesvertexArrayObject.VertexArrayBindingOes;
        var _OesVertexArrayObject = OpenTK.Graphics.ES10.OesvertexArrayObject.OesVertexArrayObject;
    }
    static void Test_OpenGlescoreVersions_3071() {
        var _VersionEsCl10 = OpenTK.Graphics.ES10.OpenGlescoreVersions.VersionEsCl10;
        var _VersionEsCl11 = OpenTK.Graphics.ES10.OpenGlescoreVersions.VersionEsCl11;
        var _VersionEsCm10 = OpenTK.Graphics.ES10.OpenGlescoreVersions.VersionEsCm10;
        var _VersionEsCm11 = OpenTK.Graphics.ES10.OpenGlescoreVersions.VersionEsCm11;
    }
    static void Test_PixelFormat_3072() {
        var _Alpha = OpenTK.Graphics.ES10.PixelFormat.Alpha;
        var _Rgb = OpenTK.Graphics.ES10.PixelFormat.Rgb;
        var _Rgba = OpenTK.Graphics.ES10.PixelFormat.Rgba;
        var _Luminance = OpenTK.Graphics.ES10.PixelFormat.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES10.PixelFormat.LuminanceAlpha;
    }
    static void Test_PixelStoreParameter_3073() {
        var _UnpackAlignment = OpenTK.Graphics.ES10.PixelStoreParameter.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES10.PixelStoreParameter.PackAlignment;
    }
    static void Test_PixelType_3074() {
        var _UnsignedShort4444 = OpenTK.Graphics.ES10.PixelType.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES10.PixelType.UnsignedShort5551;
        var _UnsignedShort565 = OpenTK.Graphics.ES10.PixelType.UnsignedShort565;
    }
    static void Test_QcomdriverControl_3075() {
        var _QcomDriverControl = OpenTK.Graphics.ES10.QcomdriverControl.QcomDriverControl;
    }
    static void Test_QcomextendedGet_3076() {
        var _TextureWidthQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES10.QcomextendedGet.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES10.QcomextendedGet.StateRestore;
        var _QcomExtendedGet = OpenTK.Graphics.ES10.QcomextendedGet.QcomExtendedGet;
    }
    static void Test_QcomextendedGet2_3077() {
        var _QcomExtendedGet2 = OpenTK.Graphics.ES10.QcomextendedGet2.QcomExtendedGet2;
    }
    static void Test_QcomperfmonGlobalMode_3078() {
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES10.QcomperfmonGlobalMode.PerfmonGlobalModeQcom;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES10.QcomperfmonGlobalMode.QcomPerfmonGlobalMode;
    }
    static void Test_QcomtiledRendering_3079() {
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.ColorBufferBit7Qcom;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit2Qcom;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit5Qcom;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.DepthBufferBit7Qcom;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit0Qcom;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit1Qcom;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit2Qcom;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit0Qcom;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit1Qcom;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit2Qcom;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit3Qcom;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit4Qcom;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit5Qcom;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit6Qcom;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES10.QcomtiledRendering.MultisampleBufferBit7Qcom;
        var _QcomTiledRendering = OpenTK.Graphics.ES10.QcomtiledRendering.QcomTiledRendering;
    }
    static void Test_QcomwriteonlyRendering_3080() {
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES10.QcomwriteonlyRendering.WriteonlyRenderingQcom;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES10.QcomwriteonlyRendering.QcomWriteonlyRendering;
    }
    static void Test_ShadingModel_3081() {
        var _Flat = OpenTK.Graphics.ES10.ShadingModel.Flat;
        var _Smooth = OpenTK.Graphics.ES10.ShadingModel.Smooth;
    }
    static void Test_StencilOp_3082() {
        var _Keep = OpenTK.Graphics.ES10.StencilOp.Keep;
        var _Replace = OpenTK.Graphics.ES10.StencilOp.Replace;
        var _Incr = OpenTK.Graphics.ES10.StencilOp.Incr;
        var _Decr = OpenTK.Graphics.ES10.StencilOp.Decr;
    }
    static void Test_StringName_3083() {
        var _Vendor = OpenTK.Graphics.ES10.StringName.Vendor;
        var _Renderer = OpenTK.Graphics.ES10.StringName.Renderer;
        var _Version = OpenTK.Graphics.ES10.StringName.Version;
        var _Extensions = OpenTK.Graphics.ES10.StringName.Extensions;
    }
    static void Test_TextureCombineDot3_3084() {
        var _AlphaScale = OpenTK.Graphics.ES10.TextureCombineDot3.AlphaScale;
        var _Subtract = OpenTK.Graphics.ES10.TextureCombineDot3.Subtract;
        var _Combine = OpenTK.Graphics.ES10.TextureCombineDot3.Combine;
        var _CombineRgb = OpenTK.Graphics.ES10.TextureCombineDot3.CombineRgb;
        var _CombineAlpha = OpenTK.Graphics.ES10.TextureCombineDot3.CombineAlpha;
        var _RgbScale = OpenTK.Graphics.ES10.TextureCombineDot3.RgbScale;
        var _AddSigned = OpenTK.Graphics.ES10.TextureCombineDot3.AddSigned;
        var _Interpolate = OpenTK.Graphics.ES10.TextureCombineDot3.Interpolate;
        var _Constant = OpenTK.Graphics.ES10.TextureCombineDot3.Constant;
        var _PrimaryColor = OpenTK.Graphics.ES10.TextureCombineDot3.PrimaryColor;
        var _Previous = OpenTK.Graphics.ES10.TextureCombineDot3.Previous;
        var _Src0Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Src0Rgb;
        var _Src1Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Src1Rgb;
        var _Src2Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Src2Rgb;
        var _Src0Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Src0Alpha;
        var _Src1Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Src1Alpha;
        var _Src2Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Src2Alpha;
        var _Operand0Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Operand0Rgb;
        var _Operand1Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Operand1Rgb;
        var _Operand2Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Operand2Rgb;
        var _Operand0Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Operand0Alpha;
        var _Operand1Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Operand1Alpha;
        var _Operand2Alpha = OpenTK.Graphics.ES10.TextureCombineDot3.Operand2Alpha;
        var _Dot3Rgb = OpenTK.Graphics.ES10.TextureCombineDot3.Dot3Rgb;
        var _Dot3Rgba = OpenTK.Graphics.ES10.TextureCombineDot3.Dot3Rgba;
    }
    static void Test_TextureEnvMode_3085() {
        var _Add = OpenTK.Graphics.ES10.TextureEnvMode.Add;
        var _Modulate = OpenTK.Graphics.ES10.TextureEnvMode.Modulate;
        var _Decal = OpenTK.Graphics.ES10.TextureEnvMode.Decal;
    }
    static void Test_TextureEnvParameter_3086() {
        var _TextureEnvMode = OpenTK.Graphics.ES10.TextureEnvParameter.TextureEnvMode;
        var _TextureEnvColor = OpenTK.Graphics.ES10.TextureEnvParameter.TextureEnvColor;
    }
    static void Test_TextureEnvTarget_3087() {
        var _TextureEnv = OpenTK.Graphics.ES10.TextureEnvTarget.TextureEnv;
    }
    static void Test_TextureMagFilter_3088() {
        var _Nearest = OpenTK.Graphics.ES10.TextureMagFilter.Nearest;
        var _Linear = OpenTK.Graphics.ES10.TextureMagFilter.Linear;
    }
    static void Test_TextureMinFilter_3089() {
        var _NearestMipmapNearest = OpenTK.Graphics.ES10.TextureMinFilter.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES10.TextureMinFilter.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES10.TextureMinFilter.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES10.TextureMinFilter.LinearMipmapLinear;
    }
    static void Test_TextureParameterName_3090() {
        var _TextureMagFilter = OpenTK.Graphics.ES10.TextureParameterName.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES10.TextureParameterName.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES10.TextureParameterName.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES10.TextureParameterName.TextureWrapT;
        var _GenerateMipmap = OpenTK.Graphics.ES10.TextureParameterName.GenerateMipmap;
    }
    static void Test_TextureUnit_3091() {
        var _Texture0 = OpenTK.Graphics.ES10.TextureUnit.Texture0;
        var _Texture1 = OpenTK.Graphics.ES10.TextureUnit.Texture1;
        var _Texture2 = OpenTK.Graphics.ES10.TextureUnit.Texture2;
        var _Texture3 = OpenTK.Graphics.ES10.TextureUnit.Texture3;
        var _Texture4 = OpenTK.Graphics.ES10.TextureUnit.Texture4;
        var _Texture5 = OpenTK.Graphics.ES10.TextureUnit.Texture5;
        var _Texture6 = OpenTK.Graphics.ES10.TextureUnit.Texture6;
        var _Texture7 = OpenTK.Graphics.ES10.TextureUnit.Texture7;
        var _Texture8 = OpenTK.Graphics.ES10.TextureUnit.Texture8;
        var _Texture9 = OpenTK.Graphics.ES10.TextureUnit.Texture9;
        var _Texture10 = OpenTK.Graphics.ES10.TextureUnit.Texture10;
        var _Texture11 = OpenTK.Graphics.ES10.TextureUnit.Texture11;
        var _Texture12 = OpenTK.Graphics.ES10.TextureUnit.Texture12;
        var _Texture13 = OpenTK.Graphics.ES10.TextureUnit.Texture13;
        var _Texture14 = OpenTK.Graphics.ES10.TextureUnit.Texture14;
        var _Texture15 = OpenTK.Graphics.ES10.TextureUnit.Texture15;
        var _Texture16 = OpenTK.Graphics.ES10.TextureUnit.Texture16;
        var _Texture17 = OpenTK.Graphics.ES10.TextureUnit.Texture17;
        var _Texture18 = OpenTK.Graphics.ES10.TextureUnit.Texture18;
        var _Texture19 = OpenTK.Graphics.ES10.TextureUnit.Texture19;
        var _Texture20 = OpenTK.Graphics.ES10.TextureUnit.Texture20;
        var _Texture21 = OpenTK.Graphics.ES10.TextureUnit.Texture21;
        var _Texture22 = OpenTK.Graphics.ES10.TextureUnit.Texture22;
        var _Texture23 = OpenTK.Graphics.ES10.TextureUnit.Texture23;
        var _Texture24 = OpenTK.Graphics.ES10.TextureUnit.Texture24;
        var _Texture25 = OpenTK.Graphics.ES10.TextureUnit.Texture25;
        var _Texture26 = OpenTK.Graphics.ES10.TextureUnit.Texture26;
        var _Texture27 = OpenTK.Graphics.ES10.TextureUnit.Texture27;
        var _Texture28 = OpenTK.Graphics.ES10.TextureUnit.Texture28;
        var _Texture29 = OpenTK.Graphics.ES10.TextureUnit.Texture29;
        var _Texture30 = OpenTK.Graphics.ES10.TextureUnit.Texture30;
        var _Texture31 = OpenTK.Graphics.ES10.TextureUnit.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES10.TextureUnit.ActiveTexture;
        var _ClientActiveTexture = OpenTK.Graphics.ES10.TextureUnit.ClientActiveTexture;
    }
    static void Test_TextureWrapMode_3092() {
        var _Repeat = OpenTK.Graphics.ES10.TextureWrapMode.Repeat;
        var _ClampToEdge = OpenTK.Graphics.ES10.TextureWrapMode.ClampToEdge;
    }

    static unsafe void Test_ActiveTexture_3094() {
        OpenTK.Graphics.ES10.All _texture = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.ActiveTexture(_texture);
    }
    static unsafe void Test_AlphaFunc_3095() {
        OpenTK.Graphics.ES10.All _func = default(OpenTK.Graphics.ES10.All);
        System.Single _ref = default(System.Single);
        OpenTK.Graphics.ES10.GL.AlphaFunc(_func,_ref);
    }
    static unsafe void Test_AlphaFuncx_3096() {
        OpenTK.Graphics.ES10.All _func = default(OpenTK.Graphics.ES10.All);
        System.Int32 _ref = default(System.Int32);
        OpenTK.Graphics.ES10.GL.AlphaFuncx(_func,_ref);
    }
    static unsafe void Test_BindBuffer_3097() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Graphics.ES10.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindBuffer_3098() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindTexture_3099() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES10.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BindTexture_3100() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BlendFunc_3101() {
        OpenTK.Graphics.ES10.All _sfactor = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _dfactor = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BlendFunc(_sfactor,_dfactor);
    }
    static unsafe void Test_BufferData_3102() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES10.All _usage = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BufferData(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3103() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES10.All _usage = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3104() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES10.All _usage = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3105() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES10.All _usage = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3106() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES10.All _usage = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.BufferData<int>(_target,_size,ref _data,_usage);
    }
    static unsafe void Test_BufferSubData_3107() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.BufferSubData(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3108() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES10.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3109() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES10.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3110() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES10.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3111() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES10.GL.BufferSubData<int>(_target,_offset,_size,ref _data);
    }
    static unsafe void Test_Clear_3112() {
        OpenTK.Graphics.ES10.ClearBufferMask _mask = default(OpenTK.Graphics.ES10.ClearBufferMask);
        OpenTK.Graphics.ES10.GL.Clear(_mask);
    }
    static unsafe void Test_ClearColor_3113() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES10.GL.ClearColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearColorx_3114() {
        System.Int32 _red = default(System.Int32);
        System.Int32 _green = default(System.Int32);
        System.Int32 _blue = default(System.Int32);
        System.Int32 _alpha = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ClearColorx(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearDepth_3115() {
        System.Single _depth = default(System.Single);
        OpenTK.Graphics.ES10.GL.ClearDepth(_depth);
    }
    static unsafe void Test_ClearDepthx_3116() {
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ClearDepthx(_depth);
    }
    static unsafe void Test_ClearStencil_3117() {
        System.Int32 _s = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ClearStencil(_s);
    }
    static unsafe void Test_ClientActiveTexture_3118() {
        OpenTK.Graphics.ES10.All _texture = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.ClientActiveTexture(_texture);
    }
    static unsafe void Test_ClipPlane_3119() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Single[] _equation = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.ClipPlane(_plane,_equation);
    }
    static unsafe void Test_ClipPlane_3120() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Single _equation = default(System.Single);
        OpenTK.Graphics.ES10.GL.ClipPlane(_plane,ref _equation);
    }
    static unsafe void Test_ClipPlane_3121() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Single* _equation = default(System.Single*);
        OpenTK.Graphics.ES10.GL.ClipPlane(_plane,_equation);
    }
    static unsafe void Test_ClipPlanefIMG_3122() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Single[] _eqn = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.ClipPlanefIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanefIMG_3123() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Single _eqn = default(System.Single);
        OpenTK.Graphics.ES10.GL.ClipPlanefIMG(_p,ref _eqn);
    }
    static unsafe void Test_ClipPlanefIMG_3124() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Single* _eqn = default(System.Single*);
        OpenTK.Graphics.ES10.GL.ClipPlanefIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanex_3125() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _equation = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ClipPlanex(_plane,_equation);
    }
    static unsafe void Test_ClipPlanex_3126() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Int32 _equation = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ClipPlanex(_plane,ref _equation);
    }
    static unsafe void Test_ClipPlanex_3127() {
        OpenTK.Graphics.ES10.All _plane = default(OpenTK.Graphics.ES10.All);
        System.Int32* _equation = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ClipPlanex(_plane,_equation);
    }
    static unsafe void Test_ClipPlanexIMG_3128() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _eqn = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ClipPlanexIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanexIMG_3129() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Int32 _eqn = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ClipPlanexIMG(_p,ref _eqn);
    }
    static unsafe void Test_ClipPlanexIMG_3130() {
        OpenTK.Graphics.ES10.All _p = default(OpenTK.Graphics.ES10.All);
        System.Int32* _eqn = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ClipPlanexIMG(_p,_eqn);
    }
    static unsafe void Test_Color4_3131() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES10.GL.Color4(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_Color4_3132() {
        System.Byte _red = default(System.Byte);
        System.Byte _green = default(System.Byte);
        System.Byte _blue = default(System.Byte);
        System.Byte _alpha = default(System.Byte);
        OpenTK.Graphics.ES10.GL.Color4(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_Color4x_3133() {
        System.Int32 _red = default(System.Int32);
        System.Int32 _green = default(System.Int32);
        System.Int32 _blue = default(System.Int32);
        System.Int32 _alpha = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Color4x(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ColorMask_3134() {
        System.Boolean _red = default(System.Boolean);
        System.Boolean _green = default(System.Boolean);
        System.Boolean _blue = default(System.Boolean);
        System.Boolean _alpha = default(System.Boolean);
        OpenTK.Graphics.ES10.GL.ColorMask(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ColorPointer_3135() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.ColorPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3136() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES10.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3137() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES10.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3138() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES10.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3139() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES10.GL.ColorPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_CompressedTexImage2D_3140() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.CompressedTexImage2D(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3141() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES10.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3142() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES10.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3143() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES10.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3144() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES10.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3145() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.CompressedTexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3146() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES10.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3147() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES10.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3148() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES10.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3149() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES10.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,ref _data);
    }
    static unsafe void Test_CopyTexImage2D_3150() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.GL.CopyTexImage2D(_target,_level,_internalformat,_x,_y,_width,_height,_border);
    }
    static unsafe void Test_CopyTexSubImage2D_3151() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.GL.CopyTexSubImage2D(_target,_level,_xoffset,_yoffset,_x,_y,_width,_height);
    }
    static unsafe void Test_CullFace_3152() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.CullFace(_mode);
    }
    static unsafe void Test_DeleteBuffers_3153() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3154() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_3155() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3156() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3157() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_3158() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES10.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteTextures_3159() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3160() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_3161() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3162() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3163() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_3164() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES10.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DepthFunc_3165() {
        OpenTK.Graphics.ES10.All _func = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.DepthFunc(_func);
    }
    static unsafe void Test_DepthMask_3166() {
        System.Boolean _flag = default(System.Boolean);
        OpenTK.Graphics.ES10.GL.DepthMask(_flag);
    }
    static unsafe void Test_DepthRange_3167() {
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES10.GL.DepthRange(_zNear,_zFar);
    }
    static unsafe void Test_DepthRangex_3168() {
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES10.GL.DepthRangex(_zNear,_zFar);
    }
    static unsafe void Test_Disable_3169() {
        OpenTK.Graphics.ES10.All _cap = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.Disable(_cap);
    }
    static unsafe void Test_DisableClientState_3170() {
        OpenTK.Graphics.ES10.All _array = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.DisableClientState(_array);
    }
    static unsafe void Test_DisableDriverControlQCOM_3171() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES10.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DisableDriverControlQCOM_3172() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DrawArrays_3173() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _first = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.GL.DrawArrays(_mode,_first,_count);
    }
    static unsafe void Test_DrawElements_3174() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.DrawElements(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3175() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES10.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3176() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES10.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3177() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES10.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3178() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int _indices = default(int);
        OpenTK.Graphics.ES10.GL.DrawElements<int>(_mode,_count,_type,ref _indices);
    }
    static unsafe void Test_Enable_3179() {
        OpenTK.Graphics.ES10.All _cap = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.Enable(_cap);
    }
    static unsafe void Test_EnableClientState_3180() {
        OpenTK.Graphics.ES10.All _array = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.EnableClientState(_array);
    }
    static unsafe void Test_EnableDriverControlQCOM_3181() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES10.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EnableDriverControlQCOM_3182() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EndTilingQCOM_3183() {
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES10.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_EndTilingQCOM_3184() {
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3185() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.ExtGetBufferPointervQCOM(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3186() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES10.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3187() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES10.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3188() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES10.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3189() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        int _params = default(int);
        OpenTK.Graphics.ES10.GL.ExtGetBufferPointervQCOM<int>(_target,ref _params);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3190() {
        System.Int32[] _buffers = default(System.Int32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3191() {
        System.Int32 _buffers = default(System.Int32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3192() {
        System.Int32* _buffers = default(System.Int32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3193() {
        System.UInt32[] _buffers = default(System.UInt32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3194() {
        System.UInt32 _buffers = default(System.UInt32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3195() {
        System.UInt32* _buffers = default(System.UInt32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3196() {
        System.Int32[] _framebuffers = default(System.Int32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3197() {
        System.Int32 _framebuffers = default(System.Int32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3198() {
        System.Int32* _framebuffers = default(System.Int32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3199() {
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3200() {
        System.UInt32 _framebuffers = default(System.UInt32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3201() {
        System.UInt32* _framebuffers = default(System.UInt32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3202() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3203() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3204() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3205() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3206() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3207() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES10.All _shadertype = default(OpenTK.Graphics.ES10.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3208() {
        System.Int32[] _programs = default(System.Int32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3209() {
        System.Int32 _programs = default(System.Int32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3210() {
        System.Int32* _programs = default(System.Int32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3211() {
        System.UInt32[] _programs = default(System.UInt32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3212() {
        System.UInt32 _programs = default(System.UInt32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3213() {
        System.UInt32* _programs = default(System.UInt32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3214() {
        System.Int32[] _renderbuffers = default(System.Int32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3215() {
        System.Int32 _renderbuffers = default(System.Int32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3216() {
        System.Int32* _renderbuffers = default(System.Int32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3217() {
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3218() {
        System.UInt32 _renderbuffers = default(System.UInt32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3219() {
        System.UInt32* _renderbuffers = default(System.UInt32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetShadersQCOM_3220() {
        System.Int32[] _shaders = default(System.Int32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3221() {
        System.Int32 _shaders = default(System.Int32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3222() {
        System.Int32* _shaders = default(System.Int32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3223() {
        System.UInt32[] _shaders = default(System.UInt32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3224() {
        System.UInt32 _shaders = default(System.UInt32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3225() {
        System.UInt32* _shaders = default(System.UInt32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3226() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3227() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3228() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3229() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3230() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3231() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3232() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _texels = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.ExtGetTexSubImageQCOM(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3233() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[] _texels = default(int[]);
        OpenTK.Graphics.ES10.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3234() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,] _texels = default(int[,]);
        OpenTK.Graphics.ES10.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3235() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,,] _texels = default(int[,,]);
        OpenTK.Graphics.ES10.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3236() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int _texels = default(int);
        OpenTK.Graphics.ES10.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,ref _texels);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3237() {
        System.Int32[] _textures = default(System.Int32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3238() {
        System.Int32 _textures = default(System.Int32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3239() {
        System.Int32* _textures = default(System.Int32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3240() {
        System.UInt32[] _textures = default(System.UInt32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3241() {
        System.UInt32 _textures = default(System.UInt32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3242() {
        System.UInt32* _textures = default(System.UInt32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_3243() {
        System.Int32 _program = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_3244() {
        System.UInt32 _program = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtTexObjectStateOverrideiQCOM_3245() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.ExtTexObjectStateOverrideiQCOM(_target,_pname,_param);
    }
    static unsafe void Test_Finish_3246() {
        OpenTK.Graphics.ES10.GL.Finish();
    }
    static unsafe void Test_Flush_3247() {
        OpenTK.Graphics.ES10.GL.Flush();
    }
    static unsafe void Test_Fog_3248() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.Fog(_pname,_param);
    }
    static unsafe void Test_Fog_3249() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.Fog(_pname,_params);
    }
    static unsafe void Test_Fog_3250() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.Fog(_pname,_params);
    }
    static unsafe void Test_Fogx_3251() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Fogx(_pname,_param);
    }
    static unsafe void Test_Fogx_3252() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.Fogx(_pname,_params);
    }
    static unsafe void Test_Fogx_3253() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.Fogx(_pname,_params);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_3254() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _attachment = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _textarget = default(OpenTK.Graphics.ES10.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES10.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_3255() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _attachment = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _textarget = default(OpenTK.Graphics.ES10.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES10.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FrontFace_3256() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.FrontFace(_mode);
    }
    static unsafe void Test_Frustum_3257() {
        System.Single _left = default(System.Single);
        System.Single _right = default(System.Single);
        System.Single _bottom = default(System.Single);
        System.Single _top = default(System.Single);
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES10.GL.Frustum(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_Frustumx_3258() {
        System.Int32 _left = default(System.Int32);
        System.Int32 _right = default(System.Int32);
        System.Int32 _bottom = default(System.Int32);
        System.Int32 _top = default(System.Int32);
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Frustumx(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_GenBuffers_3259() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3260() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_3261() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3262() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3263() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_3264() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES10.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenTextures_3265() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3266() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_3267() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3268() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3269() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_3270() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES10.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GetBoolean_3271() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Boolean[] _params = default(System.Boolean[]);
        OpenTK.Graphics.ES10.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBoolean_3272() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Boolean _params = default(System.Boolean);
        OpenTK.Graphics.ES10.GL.GetBoolean(_pname,out _params);
    }
    static unsafe void Test_GetBoolean_3273() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Boolean* _params = default(System.Boolean*);
        OpenTK.Graphics.ES10.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_3274() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_3275() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetBufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetBufferParameter_3276() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetClipPlane_3277() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _eqn = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetClipPlane(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlane_3278() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _eqn = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetClipPlane(_pname,out _eqn);
    }
    static unsafe void Test_GetClipPlane_3279() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _eqn = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetClipPlane(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlanex_3280() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _eqn = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetClipPlanex(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlanex_3281() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _eqn = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetClipPlanex(_pname,out _eqn);
    }
    static unsafe void Test_GetClipPlanex_3282() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _eqn = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetClipPlanex(_pname,_eqn);
    }
    static unsafe void Test_GetDriverControlsQCOM_3283() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.Int32[] _driverControls = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3284() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.UInt32[] _driverControls = default(System.UInt32[]);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3285() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.Int32 _driverControls = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3286() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.UInt32 _driverControls = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3287() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.Int32* _driverControls = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3288() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.UInt32* _driverControls = default(System.UInt32*);
        OpenTK.Graphics.ES10.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3289() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3290() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3291() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3292() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3293() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3294() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES10.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetError_3295() {
        OpenTK.Graphics.ES10.All r = OpenTK.Graphics.ES10.GL.GetError();
    }
    static unsafe void Test_GetFixed_3296() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetFixed(_pname,_params);
    }
    static unsafe void Test_GetFixed_3297() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetFixed(_pname,out _params);
    }
    static unsafe void Test_GetFixed_3298() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetFixed(_pname,_params);
    }
    static unsafe void Test_GetFloat_3299() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFloat_3300() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetFloat(_pname,out _params);
    }
    static unsafe void Test_GetFloat_3301() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetInteger_3302() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetInteger_3303() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetInteger(_pname,out _params);
    }
    static unsafe void Test_GetInteger_3304() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetLight_3305() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetLight(_light,_pname,_params);
    }
    static unsafe void Test_GetLight_3306() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetLight(_light,_pname,out _params);
    }
    static unsafe void Test_GetLight_3307() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetLight(_light,_pname,_params);
    }
    static unsafe void Test_GetLightx_3308() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetLightx(_light,_pname,_params);
    }
    static unsafe void Test_GetLightx_3309() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetLightx(_light,_pname,out _params);
    }
    static unsafe void Test_GetLightx_3310() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetLightx(_light,_pname,_params);
    }
    static unsafe void Test_GetMaterial_3311() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetMaterial(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterial_3312() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetMaterial(_face,_pname,out _params);
    }
    static unsafe void Test_GetMaterial_3313() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetMaterial(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterialx_3314() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetMaterialx(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterialx_3315() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetMaterialx(_face,_pname,out _params);
    }
    static unsafe void Test_GetMaterialx_3316() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetMaterialx(_face,_pname,_params);
    }
    static unsafe void Test_GetPointer_3317() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.GetPointer(_pname,_params);
    }
    static unsafe void Test_GetPointer_3318() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES10.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3319() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES10.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3320() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES10.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3321() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        int _params = default(int);
        OpenTK.Graphics.ES10.GL.GetPointer<int>(_pname,ref _params);
    }
    static unsafe void Test_GetString_3322() {
        OpenTK.Graphics.ES10.All _name = default(OpenTK.Graphics.ES10.All);
        System.String r = OpenTK.Graphics.ES10.GL.GetString(_name);
    }
    static unsafe void Test_GetTexEnv_3323() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3324() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnv_3325() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3326() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3327() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnv_3328() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnvx_3329() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetTexEnvx(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnvx_3330() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetTexEnvx(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnvx_3331() {
        OpenTK.Graphics.ES10.All _env = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetTexEnvx(_env,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3332() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3333() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_3334() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3335() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3336() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_3337() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameterx_3338() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.GetTexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameterx_3339() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES10.GL.GetTexParameterx(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameterx_3340() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.GetTexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_Hint_3341() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.Hint(_target,_mode);
    }
    static unsafe void Test_IsBuffer_3342() {
        System.Int32 _buffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsBuffer_3343() {
        System.UInt32 _buffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsEnabled_3344() {
        OpenTK.Graphics.ES10.All _cap = default(OpenTK.Graphics.ES10.All);
        System.Boolean r = OpenTK.Graphics.ES10.GL.IsEnabled(_cap);
    }
    static unsafe void Test_IsTexture_3345() {
        System.Int32 _texture = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.IsTexture(_texture);
    }
    static unsafe void Test_IsTexture_3346() {
        System.UInt32 _texture = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES10.GL.IsTexture(_texture);
    }
    static unsafe void Test_Light_3347() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.Light(_light,_pname,_param);
    }
    static unsafe void Test_Light_3348() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.Light(_light,_pname,_params);
    }
    static unsafe void Test_Light_3349() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.Light(_light,_pname,_params);
    }
    static unsafe void Test_LightModel_3350() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.LightModel(_pname,_param);
    }
    static unsafe void Test_LightModel_3351() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.LightModel(_pname,_params);
    }
    static unsafe void Test_LightModel_3352() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.LightModel(_pname,_params);
    }
    static unsafe void Test_LightModelx_3353() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.LightModelx(_pname,_param);
    }
    static unsafe void Test_LightModelx_3354() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.LightModelx(_pname,_params);
    }
    static unsafe void Test_LightModelx_3355() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.LightModelx(_pname,_params);
    }
    static unsafe void Test_Lightx_3356() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Lightx(_light,_pname,_param);
    }
    static unsafe void Test_Lightx_3357() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.Lightx(_light,_pname,_params);
    }
    static unsafe void Test_Lightx_3358() {
        OpenTK.Graphics.ES10.All _light = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.Lightx(_light,_pname,_params);
    }
    static unsafe void Test_LineWidth_3359() {
        System.Single _width = default(System.Single);
        OpenTK.Graphics.ES10.GL.LineWidth(_width);
    }
    static unsafe void Test_LineWidthx_3360() {
        System.Int32 _width = default(System.Int32);
        OpenTK.Graphics.ES10.GL.LineWidthx(_width);
    }
    static unsafe void Test_LoadIdentity_3361() {
        OpenTK.Graphics.ES10.GL.LoadIdentity();
    }
    static unsafe void Test_LoadMatrix_3362() {
        System.Single[] _m = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.LoadMatrix(_m);
    }
    static unsafe void Test_LoadMatrix_3363() {
        System.Single _m = default(System.Single);
        OpenTK.Graphics.ES10.GL.LoadMatrix(ref _m);
    }
    static unsafe void Test_LoadMatrix_3364() {
        System.Single* _m = default(System.Single*);
        OpenTK.Graphics.ES10.GL.LoadMatrix(_m);
    }
    static unsafe void Test_LoadMatrixx_3365() {
        System.Int32[] _m = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.LoadMatrixx(_m);
    }
    static unsafe void Test_LoadMatrixx_3366() {
        System.Int32 _m = default(System.Int32);
        OpenTK.Graphics.ES10.GL.LoadMatrixx(ref _m);
    }
    static unsafe void Test_LoadMatrixx_3367() {
        System.Int32* _m = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.LoadMatrixx(_m);
    }
    static unsafe void Test_LogicOp_3368() {
        OpenTK.Graphics.ES10.All _opcode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.LogicOp(_opcode);
    }
    static unsafe void Test_Material_3369() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.Material(_face,_pname,_param);
    }
    static unsafe void Test_Material_3370() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.Material(_face,_pname,_params);
    }
    static unsafe void Test_Material_3371() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.Material(_face,_pname,_params);
    }
    static unsafe void Test_Materialx_3372() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Materialx(_face,_pname,_param);
    }
    static unsafe void Test_Materialx_3373() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.Materialx(_face,_pname,_params);
    }
    static unsafe void Test_Materialx_3374() {
        OpenTK.Graphics.ES10.All _face = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.Materialx(_face,_pname,_params);
    }
    static unsafe void Test_MatrixMode_3375() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.MatrixMode(_mode);
    }
    static unsafe void Test_MultiTexCoord4_3376() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Single _s = default(System.Single);
        System.Single _t = default(System.Single);
        System.Single _r = default(System.Single);
        System.Single _q = default(System.Single);
        OpenTK.Graphics.ES10.GL.MultiTexCoord4(_target,_s,_t,_r,_q);
    }
    static unsafe void Test_MultiTexCoord4x_3377() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _s = default(System.Int32);
        System.Int32 _t = default(System.Int32);
        System.Int32 _r = default(System.Int32);
        System.Int32 _q = default(System.Int32);
        OpenTK.Graphics.ES10.GL.MultiTexCoord4x(_target,_s,_t,_r,_q);
    }
    static unsafe void Test_MultMatrix_3378() {
        System.Single[] _m = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.MultMatrix(_m);
    }
    static unsafe void Test_MultMatrix_3379() {
        System.Single _m = default(System.Single);
        OpenTK.Graphics.ES10.GL.MultMatrix(ref _m);
    }
    static unsafe void Test_MultMatrix_3380() {
        System.Single* _m = default(System.Single*);
        OpenTK.Graphics.ES10.GL.MultMatrix(_m);
    }
    static unsafe void Test_MultMatrixx_3381() {
        System.Int32[] _m = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.MultMatrixx(_m);
    }
    static unsafe void Test_MultMatrixx_3382() {
        System.Int32 _m = default(System.Int32);
        OpenTK.Graphics.ES10.GL.MultMatrixx(ref _m);
    }
    static unsafe void Test_MultMatrixx_3383() {
        System.Int32* _m = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.MultMatrixx(_m);
    }
    static unsafe void Test_Normal3_3384() {
        System.Single _nx = default(System.Single);
        System.Single _ny = default(System.Single);
        System.Single _nz = default(System.Single);
        OpenTK.Graphics.ES10.GL.Normal3(_nx,_ny,_nz);
    }
    static unsafe void Test_Normal3x_3385() {
        System.Int32 _nx = default(System.Int32);
        System.Int32 _ny = default(System.Int32);
        System.Int32 _nz = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Normal3x(_nx,_ny,_nz);
    }
    static unsafe void Test_NormalPointer_3386() {
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.NormalPointer(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3387() {
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES10.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3388() {
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES10.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3389() {
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES10.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3390() {
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES10.GL.NormalPointer<int>(_type,_stride,ref _pointer);
    }
    static unsafe void Test_Ortho_3391() {
        System.Single _left = default(System.Single);
        System.Single _right = default(System.Single);
        System.Single _bottom = default(System.Single);
        System.Single _top = default(System.Single);
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES10.GL.Ortho(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_Orthox_3392() {
        System.Int32 _left = default(System.Int32);
        System.Int32 _right = default(System.Int32);
        System.Int32 _bottom = default(System.Int32);
        System.Int32 _top = default(System.Int32);
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Orthox(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_PixelStore_3393() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.PixelStore(_pname,_param);
    }
    static unsafe void Test_PointParameter_3394() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.PointParameter(_pname,_param);
    }
    static unsafe void Test_PointParameter_3395() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.PointParameter(_pname,_params);
    }
    static unsafe void Test_PointParameter_3396() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.PointParameter(_pname,_params);
    }
    static unsafe void Test_PointParameterx_3397() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.PointParameterx(_pname,_param);
    }
    static unsafe void Test_PointParameterx_3398() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.PointParameterx(_pname,_params);
    }
    static unsafe void Test_PointParameterx_3399() {
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.PointParameterx(_pname,_params);
    }
    static unsafe void Test_PointSize_3400() {
        System.Single _size = default(System.Single);
        OpenTK.Graphics.ES10.GL.PointSize(_size);
    }
    static unsafe void Test_PointSizex_3401() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.GL.PointSizex(_size);
    }
    static unsafe void Test_PolygonOffset_3402() {
        System.Single _factor = default(System.Single);
        System.Single _units = default(System.Single);
        OpenTK.Graphics.ES10.GL.PolygonOffset(_factor,_units);
    }
    static unsafe void Test_PolygonOffsetx_3403() {
        System.Int32 _factor = default(System.Int32);
        System.Int32 _units = default(System.Int32);
        OpenTK.Graphics.ES10.GL.PolygonOffsetx(_factor,_units);
    }
    static unsafe void Test_PopMatrix_3404() {
        OpenTK.Graphics.ES10.GL.PopMatrix();
    }
    static unsafe void Test_PushMatrix_3405() {
        OpenTK.Graphics.ES10.GL.PushMatrix();
    }
    static unsafe void Test_ReadPixels_3406() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.ReadPixels(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3407() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES10.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3408() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES10.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3409() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES10.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3410() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES10.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_RenderbufferStorageMultisampleIMG_3411() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES10.All _internalformat = default(OpenTK.Graphics.ES10.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.GL.RenderbufferStorageMultisampleIMG(_target,_samples,_internalformat,_width,_height);
    }
    static unsafe void Test_Rotate_3412() {
        System.Single _angle = default(System.Single);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES10.GL.Rotate(_angle,_x,_y,_z);
    }
    static unsafe void Test_Rotatex_3413() {
        System.Int32 _angle = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Rotatex(_angle,_x,_y,_z);
    }
    static unsafe void Test_SampleCoverage_3414() {
        System.Single _value = default(System.Single);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES10.GL.SampleCoverage(_value,_invert);
    }
    static unsafe void Test_SampleCoveragex_3415() {
        System.Int32 _value = default(System.Int32);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES10.GL.SampleCoveragex(_value,_invert);
    }
    static unsafe void Test_Scale_3416() {
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES10.GL.Scale(_x,_y,_z);
    }
    static unsafe void Test_Scalex_3417() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Scalex(_x,_y,_z);
    }
    static unsafe void Test_Scissor_3418() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Scissor(_x,_y,_width,_height);
    }
    static unsafe void Test_ShadeModel_3419() {
        OpenTK.Graphics.ES10.All _mode = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.ShadeModel(_mode);
    }
    static unsafe void Test_StartTilingQCOM_3420() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES10.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StartTilingQCOM_3421() {
        System.UInt32 _x = default(System.UInt32);
        System.UInt32 _y = default(System.UInt32);
        System.UInt32 _width = default(System.UInt32);
        System.UInt32 _height = default(System.UInt32);
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StencilFunc_3422() {
        OpenTK.Graphics.ES10.All _func = default(OpenTK.Graphics.ES10.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES10.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFunc_3423() {
        OpenTK.Graphics.ES10.All _func = default(OpenTK.Graphics.ES10.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilMask_3424() {
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES10.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMask_3425() {
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES10.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilOp_3426() {
        OpenTK.Graphics.ES10.All _fail = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _zfail = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _zpass = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.GL.StencilOp(_fail,_zfail,_zpass);
    }
    static unsafe void Test_TexCoordPointer_3427() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.TexCoordPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3428() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES10.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3429() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES10.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3430() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES10.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3431() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES10.GL.TexCoordPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_TexEnv_3432() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_param);
    }
    static unsafe void Test_TexEnv_3433() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3434() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3435() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_param);
    }
    static unsafe void Test_TexEnv_3436() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3437() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnvx_3438() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.TexEnvx(_target,_pname,_param);
    }
    static unsafe void Test_TexEnvx_3439() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.TexEnvx(_target,_pname,_params);
    }
    static unsafe void Test_TexEnvx_3440() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.TexEnvx(_target,_pname,_params);
    }
    static unsafe void Test_TexImage2D_3441() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.TexImage2D(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3442() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES10.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3443() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES10.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3444() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES10.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3445() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES10.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexParameter_3446() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_3447() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3448() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3449() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_3450() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3451() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameterx_3452() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES10.GL.TexParameterx(_target,_pname,_param);
    }
    static unsafe void Test_TexParameterx_3453() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES10.GL.TexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_TexParameterx_3454() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _pname = default(OpenTK.Graphics.ES10.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES10.GL.TexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_TexSubImage2D_3455() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.TexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3456() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES10.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3457() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES10.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3458() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES10.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3459() {
        OpenTK.Graphics.ES10.All _target = default(OpenTK.Graphics.ES10.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.All _format = default(OpenTK.Graphics.ES10.All);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES10.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_Translate_3460() {
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES10.GL.Translate(_x,_y,_z);
    }
    static unsafe void Test_Translatex_3461() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Translatex(_x,_y,_z);
    }
    static unsafe void Test_VertexPointer_3462() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES10.GL.VertexPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3463() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES10.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3464() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES10.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3465() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES10.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3466() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES10.All _type = default(OpenTK.Graphics.ES10.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES10.GL.VertexPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_Viewport_3467() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES10.GL.Viewport(_x,_y,_width,_height);
    }
    static void Test_All_3468() {
        var _False = OpenTK.Graphics.ES11.All.False;
        var _NoError = OpenTK.Graphics.ES11.All.NoError;
        var _NoneOes = OpenTK.Graphics.ES11.All.NoneOes;
        var _Zero = OpenTK.Graphics.ES11.All.Zero;
        var _Points = OpenTK.Graphics.ES11.All.Points;
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES11.All.ColorBufferBit7Qcom;
        var _DepthBufferBit = OpenTK.Graphics.ES11.All.DepthBufferBit;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit2Qcom;
        var _StencilBufferBit = OpenTK.Graphics.ES11.All.StencilBufferBit;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit5Qcom;
        var _ColorBufferBit = OpenTK.Graphics.ES11.All.ColorBufferBit;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES11.All.DepthBufferBit7Qcom;
        var _Lines = OpenTK.Graphics.ES11.All.Lines;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit0Qcom;
        var _LineLoop = OpenTK.Graphics.ES11.All.LineLoop;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit1Qcom;
        var _LineStrip = OpenTK.Graphics.ES11.All.LineStrip;
        var _Triangles = OpenTK.Graphics.ES11.All.Triangles;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit2Qcom;
        var _TriangleStrip = OpenTK.Graphics.ES11.All.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES11.All.TriangleFan;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES11.All.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit0Qcom;
        var _Add = OpenTK.Graphics.ES11.All.Add;
        var _Never = OpenTK.Graphics.ES11.All.Never;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit1Qcom;
        var _Less = OpenTK.Graphics.ES11.All.Less;
        var _Equal = OpenTK.Graphics.ES11.All.Equal;
        var _Lequal = OpenTK.Graphics.ES11.All.Lequal;
        var _Greater = OpenTK.Graphics.ES11.All.Greater;
        var _Notequal = OpenTK.Graphics.ES11.All.Notequal;
        var _Gequal = OpenTK.Graphics.ES11.All.Gequal;
        var _Always = OpenTK.Graphics.ES11.All.Always;
        var _SrcColor = OpenTK.Graphics.ES11.All.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES11.All.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES11.All.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES11.All.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES11.All.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES11.All.OneMinusDstAlpha;
        var _DstColor = OpenTK.Graphics.ES11.All.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES11.All.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES11.All.SrcAlphaSaturate;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit2Qcom;
        var _Front = OpenTK.Graphics.ES11.All.Front;
        var _Back = OpenTK.Graphics.ES11.All.Back;
        var _FrontAndBack = OpenTK.Graphics.ES11.All.FrontAndBack;
        var _InvalidEnum = OpenTK.Graphics.ES11.All.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES11.All.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES11.All.InvalidOperation;
        var _StackOverflow = OpenTK.Graphics.ES11.All.StackOverflow;
        var _StackUnderflow = OpenTK.Graphics.ES11.All.StackUnderflow;
        var _OutOfMemory = OpenTK.Graphics.ES11.All.OutOfMemory;
        var _InvalidFramebufferOperationOes = OpenTK.Graphics.ES11.All.InvalidFramebufferOperationOes;
        var _Exp = OpenTK.Graphics.ES11.All.Exp;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit3Qcom;
        var _Exp2 = OpenTK.Graphics.ES11.All.Exp2;
        var _Cw = OpenTK.Graphics.ES11.All.Cw;
        var _Ccw = OpenTK.Graphics.ES11.All.Ccw;
        var _CurrentColor = OpenTK.Graphics.ES11.All.CurrentColor;
        var _CurrentNormal = OpenTK.Graphics.ES11.All.CurrentNormal;
        var _CurrentTextureCoords = OpenTK.Graphics.ES11.All.CurrentTextureCoords;
        var _PointSmooth = OpenTK.Graphics.ES11.All.PointSmooth;
        var _PointSize = OpenTK.Graphics.ES11.All.PointSize;
        var _SmoothPointSizeRange = OpenTK.Graphics.ES11.All.SmoothPointSizeRange;
        var _LineSmooth = OpenTK.Graphics.ES11.All.LineSmooth;
        var _LineWidth = OpenTK.Graphics.ES11.All.LineWidth;
        var _SmoothLineWidthRange = OpenTK.Graphics.ES11.All.SmoothLineWidthRange;
        var _CullFace = OpenTK.Graphics.ES11.All.CullFace;
        var _CullFaceMode = OpenTK.Graphics.ES11.All.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES11.All.FrontFace;
        var _Lighting = OpenTK.Graphics.ES11.All.Lighting;
        var _LightModelTwoSide = OpenTK.Graphics.ES11.All.LightModelTwoSide;
        var _LightModelAmbient = OpenTK.Graphics.ES11.All.LightModelAmbient;
        var _ShadeModel = OpenTK.Graphics.ES11.All.ShadeModel;
        var _ColorMaterial = OpenTK.Graphics.ES11.All.ColorMaterial;
        var _Fog = OpenTK.Graphics.ES11.All.Fog;
        var _FogDensity = OpenTK.Graphics.ES11.All.FogDensity;
        var _FogStart = OpenTK.Graphics.ES11.All.FogStart;
        var _FogEnd = OpenTK.Graphics.ES11.All.FogEnd;
        var _FogMode = OpenTK.Graphics.ES11.All.FogMode;
        var _FogColor = OpenTK.Graphics.ES11.All.FogColor;
        var _DepthRange = OpenTK.Graphics.ES11.All.DepthRange;
        var _DepthTest = OpenTK.Graphics.ES11.All.DepthTest;
        var _DepthWritemask = OpenTK.Graphics.ES11.All.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES11.All.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES11.All.DepthFunc;
        var _StencilTest = OpenTK.Graphics.ES11.All.StencilTest;
        var _StencilClearValue = OpenTK.Graphics.ES11.All.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES11.All.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES11.All.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES11.All.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES11.All.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES11.All.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES11.All.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES11.All.StencilWritemask;
        var _MatrixMode = OpenTK.Graphics.ES11.All.MatrixMode;
        var _Normalize = OpenTK.Graphics.ES11.All.Normalize;
        var _Viewport = OpenTK.Graphics.ES11.All.Viewport;
        var _ModelviewStackDepth = OpenTK.Graphics.ES11.All.ModelviewStackDepth;
        var _ProjectionStackDepth = OpenTK.Graphics.ES11.All.ProjectionStackDepth;
        var _TextureStackDepth = OpenTK.Graphics.ES11.All.TextureStackDepth;
        var _ModelviewMatrix = OpenTK.Graphics.ES11.All.ModelviewMatrix;
        var _ProjectionMatrix = OpenTK.Graphics.ES11.All.ProjectionMatrix;
        var _TextureMatrix = OpenTK.Graphics.ES11.All.TextureMatrix;
        var _AlphaTest = OpenTK.Graphics.ES11.All.AlphaTest;
        var _AlphaTestFunc = OpenTK.Graphics.ES11.All.AlphaTestFunc;
        var _AlphaTestRef = OpenTK.Graphics.ES11.All.AlphaTestRef;
        var _Dither = OpenTK.Graphics.ES11.All.Dither;
        var _BlendDst = OpenTK.Graphics.ES11.All.BlendDst;
        var _BlendSrc = OpenTK.Graphics.ES11.All.BlendSrc;
        var _Blend = OpenTK.Graphics.ES11.All.Blend;
        var _LogicOpMode = OpenTK.Graphics.ES11.All.LogicOpMode;
        var _ColorLogicOp = OpenTK.Graphics.ES11.All.ColorLogicOp;
        var _ScissorBox = OpenTK.Graphics.ES11.All.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES11.All.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES11.All.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES11.All.ColorWritemask;
        var _PerspectiveCorrectionHint = OpenTK.Graphics.ES11.All.PerspectiveCorrectionHint;
        var _PointSmoothHint = OpenTK.Graphics.ES11.All.PointSmoothHint;
        var _LineSmoothHint = OpenTK.Graphics.ES11.All.LineSmoothHint;
        var _FogHint = OpenTK.Graphics.ES11.All.FogHint;
        var _UnpackAlignment = OpenTK.Graphics.ES11.All.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES11.All.PackAlignment;
        var _AlphaScale = OpenTK.Graphics.ES11.All.AlphaScale;
        var _MaxLights = OpenTK.Graphics.ES11.All.MaxLights;
        var _MaxClipPlanes = OpenTK.Graphics.ES11.All.MaxClipPlanes;
        var _MaxClipPlanesImg = OpenTK.Graphics.ES11.All.MaxClipPlanesImg;
        var _MaxTextureSize = OpenTK.Graphics.ES11.All.MaxTextureSize;
        var _MaxModelviewStackDepth = OpenTK.Graphics.ES11.All.MaxModelviewStackDepth;
        var _MaxProjectionStackDepth = OpenTK.Graphics.ES11.All.MaxProjectionStackDepth;
        var _MaxTextureStackDepth = OpenTK.Graphics.ES11.All.MaxTextureStackDepth;
        var _MaxViewportDims = OpenTK.Graphics.ES11.All.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES11.All.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES11.All.RedBits;
        var _GreenBits = OpenTK.Graphics.ES11.All.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES11.All.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES11.All.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES11.All.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES11.All.StencilBits;
        var _Texture2D = OpenTK.Graphics.ES11.All.Texture2D;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit4Qcom;
        var _DontCare = OpenTK.Graphics.ES11.All.DontCare;
        var _Fastest = OpenTK.Graphics.ES11.All.Fastest;
        var _Nicest = OpenTK.Graphics.ES11.All.Nicest;
        var _Ambient = OpenTK.Graphics.ES11.All.Ambient;
        var _Diffuse = OpenTK.Graphics.ES11.All.Diffuse;
        var _Specular = OpenTK.Graphics.ES11.All.Specular;
        var _Position = OpenTK.Graphics.ES11.All.Position;
        var _SpotDirection = OpenTK.Graphics.ES11.All.SpotDirection;
        var _SpotExponent = OpenTK.Graphics.ES11.All.SpotExponent;
        var _SpotCutoff = OpenTK.Graphics.ES11.All.SpotCutoff;
        var _ConstantAttenuation = OpenTK.Graphics.ES11.All.ConstantAttenuation;
        var _LinearAttenuation = OpenTK.Graphics.ES11.All.LinearAttenuation;
        var _QuadraticAttenuation = OpenTK.Graphics.ES11.All.QuadraticAttenuation;
        var _Byte = OpenTK.Graphics.ES11.All.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES11.All.UnsignedByte;
        var _Short = OpenTK.Graphics.ES11.All.Short;
        var _UnsignedShort = OpenTK.Graphics.ES11.All.UnsignedShort;
        var _UnsignedInt = OpenTK.Graphics.ES11.All.UnsignedInt;
        var _Float = OpenTK.Graphics.ES11.All.Float;
        var _Fixed = OpenTK.Graphics.ES11.All.Fixed;
        var _FixedOes = OpenTK.Graphics.ES11.All.FixedOes;
        var _Clear = OpenTK.Graphics.ES11.All.Clear;
        var _And = OpenTK.Graphics.ES11.All.And;
        var _AndReverse = OpenTK.Graphics.ES11.All.AndReverse;
        var _Copy = OpenTK.Graphics.ES11.All.Copy;
        var _AndInverted = OpenTK.Graphics.ES11.All.AndInverted;
        var _Noop = OpenTK.Graphics.ES11.All.Noop;
        var _Xor = OpenTK.Graphics.ES11.All.Xor;
        var _Or = OpenTK.Graphics.ES11.All.Or;
        var _Nor = OpenTK.Graphics.ES11.All.Nor;
        var _Equiv = OpenTK.Graphics.ES11.All.Equiv;
        var _Invert = OpenTK.Graphics.ES11.All.Invert;
        var _OrReverse = OpenTK.Graphics.ES11.All.OrReverse;
        var _CopyInverted = OpenTK.Graphics.ES11.All.CopyInverted;
        var _OrInverted = OpenTK.Graphics.ES11.All.OrInverted;
        var _Nand = OpenTK.Graphics.ES11.All.Nand;
        var _Set = OpenTK.Graphics.ES11.All.Set;
        var _Emission = OpenTK.Graphics.ES11.All.Emission;
        var _Shininess = OpenTK.Graphics.ES11.All.Shininess;
        var _AmbientAndDiffuse = OpenTK.Graphics.ES11.All.AmbientAndDiffuse;
        var _Modelview = OpenTK.Graphics.ES11.All.Modelview;
        var _Projection = OpenTK.Graphics.ES11.All.Projection;
        var _Texture = OpenTK.Graphics.ES11.All.Texture;
        var _ColorExt = OpenTK.Graphics.ES11.All.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES11.All.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES11.All.StencilExt;
        var _Alpha = OpenTK.Graphics.ES11.All.Alpha;
        var _Rgb = OpenTK.Graphics.ES11.All.Rgb;
        var _Rgba = OpenTK.Graphics.ES11.All.Rgba;
        var _Luminance = OpenTK.Graphics.ES11.All.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES11.All.LuminanceAlpha;
        var _Flat = OpenTK.Graphics.ES11.All.Flat;
        var _Smooth = OpenTK.Graphics.ES11.All.Smooth;
        var _Keep = OpenTK.Graphics.ES11.All.Keep;
        var _Replace = OpenTK.Graphics.ES11.All.Replace;
        var _Incr = OpenTK.Graphics.ES11.All.Incr;
        var _Decr = OpenTK.Graphics.ES11.All.Decr;
        var _Vendor = OpenTK.Graphics.ES11.All.Vendor;
        var _Renderer = OpenTK.Graphics.ES11.All.Renderer;
        var _Version = OpenTK.Graphics.ES11.All.Version;
        var _Extensions = OpenTK.Graphics.ES11.All.Extensions;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit5Qcom;
        var _Modulate = OpenTK.Graphics.ES11.All.Modulate;
        var _Decal = OpenTK.Graphics.ES11.All.Decal;
        var _TextureEnvMode = OpenTK.Graphics.ES11.All.TextureEnvMode;
        var _TextureEnvColor = OpenTK.Graphics.ES11.All.TextureEnvColor;
        var _TextureEnv = OpenTK.Graphics.ES11.All.TextureEnv;
        var _TextureGenModeOes = OpenTK.Graphics.ES11.All.TextureGenModeOes;
        var _Nearest = OpenTK.Graphics.ES11.All.Nearest;
        var _Linear = OpenTK.Graphics.ES11.All.Linear;
        var _NearestMipmapNearest = OpenTK.Graphics.ES11.All.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES11.All.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES11.All.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES11.All.LinearMipmapLinear;
        var _TextureMagFilter = OpenTK.Graphics.ES11.All.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES11.All.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES11.All.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES11.All.TextureWrapT;
        var _Repeat = OpenTK.Graphics.ES11.All.Repeat;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES11.All.PolygonOffsetUnits;
        var _ClipPlane0 = OpenTK.Graphics.ES11.All.ClipPlane0;
        var _ClipPlane0Img = OpenTK.Graphics.ES11.All.ClipPlane0Img;
        var _ClipPlane1 = OpenTK.Graphics.ES11.All.ClipPlane1;
        var _ClipPlane1Img = OpenTK.Graphics.ES11.All.ClipPlane1Img;
        var _ClipPlane2 = OpenTK.Graphics.ES11.All.ClipPlane2;
        var _ClipPlane2Img = OpenTK.Graphics.ES11.All.ClipPlane2Img;
        var _ClipPlane3 = OpenTK.Graphics.ES11.All.ClipPlane3;
        var _ClipPlane3Img = OpenTK.Graphics.ES11.All.ClipPlane3Img;
        var _ClipPlane4 = OpenTK.Graphics.ES11.All.ClipPlane4;
        var _ClipPlane4Img = OpenTK.Graphics.ES11.All.ClipPlane4Img;
        var _ClipPlane5 = OpenTK.Graphics.ES11.All.ClipPlane5;
        var _ClipPlane5Img = OpenTK.Graphics.ES11.All.ClipPlane5Img;
        var _Light0 = OpenTK.Graphics.ES11.All.Light0;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit6Qcom;
        var _Light1 = OpenTK.Graphics.ES11.All.Light1;
        var _Light2 = OpenTK.Graphics.ES11.All.Light2;
        var _Light3 = OpenTK.Graphics.ES11.All.Light3;
        var _Light4 = OpenTK.Graphics.ES11.All.Light4;
        var _Light5 = OpenTK.Graphics.ES11.All.Light5;
        var _Light6 = OpenTK.Graphics.ES11.All.Light6;
        var _Light7 = OpenTK.Graphics.ES11.All.Light7;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES11.All.MultisampleBufferBit7Qcom;
        var _FuncAddOes = OpenTK.Graphics.ES11.All.FuncAddOes;
        var _MinExt = OpenTK.Graphics.ES11.All.MinExt;
        var _MaxExt = OpenTK.Graphics.ES11.All.MaxExt;
        var _BlendEquationOes = OpenTK.Graphics.ES11.All.BlendEquationOes;
        var _BlendEquationRgbOes = OpenTK.Graphics.ES11.All.BlendEquationRgbOes;
        var _FuncSubtractOes = OpenTK.Graphics.ES11.All.FuncSubtractOes;
        var _FuncReverseSubtractOes = OpenTK.Graphics.ES11.All.FuncReverseSubtractOes;
        var _UnsignedShort4444 = OpenTK.Graphics.ES11.All.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES11.All.UnsignedShort5551;
        var _PolygonOffsetFill = OpenTK.Graphics.ES11.All.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES11.All.PolygonOffsetFactor;
        var _RescaleNormal = OpenTK.Graphics.ES11.All.RescaleNormal;
        var _Rgb8Oes = OpenTK.Graphics.ES11.All.Rgb8Oes;
        var _Rgba4Oes = OpenTK.Graphics.ES11.All.Rgba4Oes;
        var _Rgb5A1Oes = OpenTK.Graphics.ES11.All.Rgb5A1Oes;
        var _Rgba8Oes = OpenTK.Graphics.ES11.All.Rgba8Oes;
        var _TextureBinding2D = OpenTK.Graphics.ES11.All.TextureBinding2D;
        var _VertexArray = OpenTK.Graphics.ES11.All.VertexArray;
        var _NormalArray = OpenTK.Graphics.ES11.All.NormalArray;
        var _ColorArray = OpenTK.Graphics.ES11.All.ColorArray;
        var _TextureCoordArray = OpenTK.Graphics.ES11.All.TextureCoordArray;
        var _VertexArraySize = OpenTK.Graphics.ES11.All.VertexArraySize;
        var _VertexArrayType = OpenTK.Graphics.ES11.All.VertexArrayType;
        var _VertexArrayStride = OpenTK.Graphics.ES11.All.VertexArrayStride;
        var _NormalArrayType = OpenTK.Graphics.ES11.All.NormalArrayType;
        var _NormalArrayStride = OpenTK.Graphics.ES11.All.NormalArrayStride;
        var _ColorArraySize = OpenTK.Graphics.ES11.All.ColorArraySize;
        var _ColorArrayType = OpenTK.Graphics.ES11.All.ColorArrayType;
        var _ColorArrayStride = OpenTK.Graphics.ES11.All.ColorArrayStride;
        var _TextureCoordArraySize = OpenTK.Graphics.ES11.All.TextureCoordArraySize;
        var _TextureCoordArrayType = OpenTK.Graphics.ES11.All.TextureCoordArrayType;
        var _TextureCoordArrayStride = OpenTK.Graphics.ES11.All.TextureCoordArrayStride;
        var _VertexArrayPointer = OpenTK.Graphics.ES11.All.VertexArrayPointer;
        var _NormalArrayPointer = OpenTK.Graphics.ES11.All.NormalArrayPointer;
        var _ColorArrayPointer = OpenTK.Graphics.ES11.All.ColorArrayPointer;
        var _TextureCoordArrayPointer = OpenTK.Graphics.ES11.All.TextureCoordArrayPointer;
        var _Multisample = OpenTK.Graphics.ES11.All.Multisample;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES11.All.SampleAlphaToCoverage;
        var _SampleAlphaToOne = OpenTK.Graphics.ES11.All.SampleAlphaToOne;
        var _SampleCoverage = OpenTK.Graphics.ES11.All.SampleCoverage;
        var _SampleBuffers = OpenTK.Graphics.ES11.All.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES11.All.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES11.All.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES11.All.SampleCoverageInvert;
        var _BlendDstRgbOes = OpenTK.Graphics.ES11.All.BlendDstRgbOes;
        var _BlendSrcRgbOes = OpenTK.Graphics.ES11.All.BlendSrcRgbOes;
        var _BlendDstAlphaOes = OpenTK.Graphics.ES11.All.BlendDstAlphaOes;
        var _BlendSrcAlphaOes = OpenTK.Graphics.ES11.All.BlendSrcAlphaOes;
        var _BgraExt = OpenTK.Graphics.ES11.All.BgraExt;
        var _BgraImg = OpenTK.Graphics.ES11.All.BgraImg;
        var _PointSizeMin = OpenTK.Graphics.ES11.All.PointSizeMin;
        var _PointSizeMax = OpenTK.Graphics.ES11.All.PointSizeMax;
        var _PointFadeThresholdSize = OpenTK.Graphics.ES11.All.PointFadeThresholdSize;
        var _PointDistanceAttenuation = OpenTK.Graphics.ES11.All.PointDistanceAttenuation;
        var _ClampToEdge = OpenTK.Graphics.ES11.All.ClampToEdge;
        var _GenerateMipmap = OpenTK.Graphics.ES11.All.GenerateMipmap;
        var _GenerateMipmapHint = OpenTK.Graphics.ES11.All.GenerateMipmapHint;
        var _DepthComponent16Oes = OpenTK.Graphics.ES11.All.DepthComponent16Oes;
        var _DepthComponent24Oes = OpenTK.Graphics.ES11.All.DepthComponent24Oes;
        var _DepthComponent32Oes = OpenTK.Graphics.ES11.All.DepthComponent32Oes;
        var _UnsignedShort565 = OpenTK.Graphics.ES11.All.UnsignedShort565;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES11.All.UnsignedShort4444RevExt;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES11.All.UnsignedShort4444RevImg;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES11.All.UnsignedShort1555RevExt;
        var _MirroredRepeatOes = OpenTK.Graphics.ES11.All.MirroredRepeatOes;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES11.All.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES11.All.AliasedLineWidthRange;
        var _Texture0 = OpenTK.Graphics.ES11.All.Texture0;
        var _Texture1 = OpenTK.Graphics.ES11.All.Texture1;
        var _Texture2 = OpenTK.Graphics.ES11.All.Texture2;
        var _Texture3 = OpenTK.Graphics.ES11.All.Texture3;
        var _Texture4 = OpenTK.Graphics.ES11.All.Texture4;
        var _Texture5 = OpenTK.Graphics.ES11.All.Texture5;
        var _Texture6 = OpenTK.Graphics.ES11.All.Texture6;
        var _Texture7 = OpenTK.Graphics.ES11.All.Texture7;
        var _Texture8 = OpenTK.Graphics.ES11.All.Texture8;
        var _Texture9 = OpenTK.Graphics.ES11.All.Texture9;
        var _Texture10 = OpenTK.Graphics.ES11.All.Texture10;
        var _Texture11 = OpenTK.Graphics.ES11.All.Texture11;
        var _Texture12 = OpenTK.Graphics.ES11.All.Texture12;
        var _Texture13 = OpenTK.Graphics.ES11.All.Texture13;
        var _Texture14 = OpenTK.Graphics.ES11.All.Texture14;
        var _Texture15 = OpenTK.Graphics.ES11.All.Texture15;
        var _Texture16 = OpenTK.Graphics.ES11.All.Texture16;
        var _Texture17 = OpenTK.Graphics.ES11.All.Texture17;
        var _Texture18 = OpenTK.Graphics.ES11.All.Texture18;
        var _Texture19 = OpenTK.Graphics.ES11.All.Texture19;
        var _Texture20 = OpenTK.Graphics.ES11.All.Texture20;
        var _Texture21 = OpenTK.Graphics.ES11.All.Texture21;
        var _Texture22 = OpenTK.Graphics.ES11.All.Texture22;
        var _Texture23 = OpenTK.Graphics.ES11.All.Texture23;
        var _Texture24 = OpenTK.Graphics.ES11.All.Texture24;
        var _Texture25 = OpenTK.Graphics.ES11.All.Texture25;
        var _Texture26 = OpenTK.Graphics.ES11.All.Texture26;
        var _Texture27 = OpenTK.Graphics.ES11.All.Texture27;
        var _Texture28 = OpenTK.Graphics.ES11.All.Texture28;
        var _Texture29 = OpenTK.Graphics.ES11.All.Texture29;
        var _Texture30 = OpenTK.Graphics.ES11.All.Texture30;
        var _Texture31 = OpenTK.Graphics.ES11.All.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES11.All.ActiveTexture;
        var _ClientActiveTexture = OpenTK.Graphics.ES11.All.ClientActiveTexture;
        var _MaxTextureUnits = OpenTK.Graphics.ES11.All.MaxTextureUnits;
        var _Subtract = OpenTK.Graphics.ES11.All.Subtract;
        var _MaxRenderbufferSizeOes = OpenTK.Graphics.ES11.All.MaxRenderbufferSizeOes;
        var _AllCompletedNv = OpenTK.Graphics.ES11.All.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES11.All.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES11.All.FenceConditionNv;
        var _DepthStencilOes = OpenTK.Graphics.ES11.All.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES11.All.UnsignedInt248Oes;
        var _MaxTextureLodBiasExt = OpenTK.Graphics.ES11.All.MaxTextureLodBiasExt;
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES11.All.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES11.All.MaxTextureMaxAnisotropyExt;
        var _TextureFilterControlExt = OpenTK.Graphics.ES11.All.TextureFilterControlExt;
        var _TextureLodBiasExt = OpenTK.Graphics.ES11.All.TextureLodBiasExt;
        var _IncrWrapOes = OpenTK.Graphics.ES11.All.IncrWrapOes;
        var _DecrWrapOes = OpenTK.Graphics.ES11.All.DecrWrapOes;
        var _NormalMapOes = OpenTK.Graphics.ES11.All.NormalMapOes;
        var _ReflectionMapOes = OpenTK.Graphics.ES11.All.ReflectionMapOes;
        var _TextureCubeMapOes = OpenTK.Graphics.ES11.All.TextureCubeMapOes;
        var _TextureBindingCubeMapOes = OpenTK.Graphics.ES11.All.TextureBindingCubeMapOes;
        var _TextureCubeMapPositiveXOes = OpenTK.Graphics.ES11.All.TextureCubeMapPositiveXOes;
        var _TextureCubeMapNegativeXOes = OpenTK.Graphics.ES11.All.TextureCubeMapNegativeXOes;
        var _TextureCubeMapPositiveYOes = OpenTK.Graphics.ES11.All.TextureCubeMapPositiveYOes;
        var _TextureCubeMapNegativeYOes = OpenTK.Graphics.ES11.All.TextureCubeMapNegativeYOes;
        var _TextureCubeMapPositiveZOes = OpenTK.Graphics.ES11.All.TextureCubeMapPositiveZOes;
        var _TextureCubeMapNegativeZOes = OpenTK.Graphics.ES11.All.TextureCubeMapNegativeZOes;
        var _MaxCubeMapTextureSizeOes = OpenTK.Graphics.ES11.All.MaxCubeMapTextureSizeOes;
        var _Combine = OpenTK.Graphics.ES11.All.Combine;
        var _CombineRgb = OpenTK.Graphics.ES11.All.CombineRgb;
        var _CombineAlpha = OpenTK.Graphics.ES11.All.CombineAlpha;
        var _RgbScale = OpenTK.Graphics.ES11.All.RgbScale;
        var _AddSigned = OpenTK.Graphics.ES11.All.AddSigned;
        var _Interpolate = OpenTK.Graphics.ES11.All.Interpolate;
        var _Constant = OpenTK.Graphics.ES11.All.Constant;
        var _PrimaryColor = OpenTK.Graphics.ES11.All.PrimaryColor;
        var _Previous = OpenTK.Graphics.ES11.All.Previous;
        var _Src0Rgb = OpenTK.Graphics.ES11.All.Src0Rgb;
        var _Src1Rgb = OpenTK.Graphics.ES11.All.Src1Rgb;
        var _Src2Rgb = OpenTK.Graphics.ES11.All.Src2Rgb;
        var _Src0Alpha = OpenTK.Graphics.ES11.All.Src0Alpha;
        var _Src1Alpha = OpenTK.Graphics.ES11.All.Src1Alpha;
        var _Src2Alpha = OpenTK.Graphics.ES11.All.Src2Alpha;
        var _Operand0Rgb = OpenTK.Graphics.ES11.All.Operand0Rgb;
        var _Operand1Rgb = OpenTK.Graphics.ES11.All.Operand1Rgb;
        var _Operand2Rgb = OpenTK.Graphics.ES11.All.Operand2Rgb;
        var _Operand0Alpha = OpenTK.Graphics.ES11.All.Operand0Alpha;
        var _Operand1Alpha = OpenTK.Graphics.ES11.All.Operand1Alpha;
        var _Operand2Alpha = OpenTK.Graphics.ES11.All.Operand2Alpha;
        var _VertexArrayBindingOes = OpenTK.Graphics.ES11.All.VertexArrayBindingOes;
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES11.All.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES11.All.CompressedTextureFormats;
        var _MaxVertexUnitsOes = OpenTK.Graphics.ES11.All.MaxVertexUnitsOes;
        var _WeightArrayTypeOes = OpenTK.Graphics.ES11.All.WeightArrayTypeOes;
        var _WeightArrayStrideOes = OpenTK.Graphics.ES11.All.WeightArrayStrideOes;
        var _WeightArraySizeOes = OpenTK.Graphics.ES11.All.WeightArraySizeOes;
        var _WeightArrayPointerOes = OpenTK.Graphics.ES11.All.WeightArrayPointerOes;
        var _WeightArrayOes = OpenTK.Graphics.ES11.All.WeightArrayOes;
        var _Dot3Rgb = OpenTK.Graphics.ES11.All.Dot3Rgb;
        var _Dot3Rgba = OpenTK.Graphics.ES11.All.Dot3Rgba;
        var _Dot3RgbaImg = OpenTK.Graphics.ES11.All.Dot3RgbaImg;
        var _BufferSize = OpenTK.Graphics.ES11.All.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES11.All.BufferUsage;
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES11.All.AtcRgbaInterpolatedAlphaAmd;
        var _GL_3DcXAmd = OpenTK.Graphics.ES11.All.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES11.All.GL_3DcXyAmd;
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES11.All.WriteonlyRenderingQcom;
        var _BlendEquationAlphaOes = OpenTK.Graphics.ES11.All.BlendEquationAlphaOes;
        var _MatrixPaletteOes = OpenTK.Graphics.ES11.All.MatrixPaletteOes;
        var _MaxPaletteMatricesOes = OpenTK.Graphics.ES11.All.MaxPaletteMatricesOes;
        var _CurrentPaletteMatrixOes = OpenTK.Graphics.ES11.All.CurrentPaletteMatrixOes;
        var _MatrixIndexArrayOes = OpenTK.Graphics.ES11.All.MatrixIndexArrayOes;
        var _MatrixIndexArraySizeOes = OpenTK.Graphics.ES11.All.MatrixIndexArraySizeOes;
        var _MatrixIndexArrayTypeOes = OpenTK.Graphics.ES11.All.MatrixIndexArrayTypeOes;
        var _MatrixIndexArrayStrideOes = OpenTK.Graphics.ES11.All.MatrixIndexArrayStrideOes;
        var _MatrixIndexArrayPointerOes = OpenTK.Graphics.ES11.All.MatrixIndexArrayPointerOes;
        var _PointSpriteOes = OpenTK.Graphics.ES11.All.PointSpriteOes;
        var _CoordReplaceOes = OpenTK.Graphics.ES11.All.CoordReplaceOes;
        var _ArrayBuffer = OpenTK.Graphics.ES11.All.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES11.All.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES11.All.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES11.All.ElementArrayBufferBinding;
        var _VertexArrayBufferBinding = OpenTK.Graphics.ES11.All.VertexArrayBufferBinding;
        var _NormalArrayBufferBinding = OpenTK.Graphics.ES11.All.NormalArrayBufferBinding;
        var _ColorArrayBufferBinding = OpenTK.Graphics.ES11.All.ColorArrayBufferBinding;
        var _TextureCoordArrayBufferBinding = OpenTK.Graphics.ES11.All.TextureCoordArrayBufferBinding;
        var _WeightArrayBufferBindingOes = OpenTK.Graphics.ES11.All.WeightArrayBufferBindingOes;
        var _WriteOnlyOes = OpenTK.Graphics.ES11.All.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES11.All.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES11.All.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES11.All.BufferMapPointerOes;
        var _StaticDraw = OpenTK.Graphics.ES11.All.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES11.All.DynamicDraw;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES11.All.Depth24Stencil8Oes;
        var _PointSizeArrayTypeOes = OpenTK.Graphics.ES11.All.PointSizeArrayTypeOes;
        var _PointSizeArrayStrideOes = OpenTK.Graphics.ES11.All.PointSizeArrayStrideOes;
        var _PointSizeArrayPointerOes = OpenTK.Graphics.ES11.All.PointSizeArrayPointerOes;
        var _ModelviewMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.All.ModelviewMatrixFloatAsIntBitsOes;
        var _ProjectionMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.All.ProjectionMatrixFloatAsIntBitsOes;
        var _TextureMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.All.TextureMatrixFloatAsIntBitsOes;
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES11.All.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES11.All.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES11.All.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES11.All.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES11.All.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES11.All.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES11.All.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES11.All.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES11.All.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES11.All.Palette8Rgb5A1Oes;
        var _ImplementationColorReadTypeOes = OpenTK.Graphics.ES11.All.ImplementationColorReadTypeOes;
        var _ImplementationColorReadFormatOes = OpenTK.Graphics.ES11.All.ImplementationColorReadFormatOes;
        var _PointSizeArrayOes = OpenTK.Graphics.ES11.All.PointSizeArrayOes;
        var _TextureCropRectOes = OpenTK.Graphics.ES11.All.TextureCropRectOes;
        var _MatrixIndexArrayBufferBindingOes = OpenTK.Graphics.ES11.All.MatrixIndexArrayBufferBindingOes;
        var _PointSizeArrayBufferBindingOes = OpenTK.Graphics.ES11.All.PointSizeArrayBufferBindingOes;
        var _TextureWidthQcom = OpenTK.Graphics.ES11.All.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES11.All.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES11.All.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES11.All.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES11.All.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES11.All.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES11.All.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES11.All.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES11.All.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES11.All.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES11.All.StateRestore;
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES11.All.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES11.All.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES11.All.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES11.All.CompressedRgbaPvrtc2Bppv1Img;
        var _ModulateColorImg = OpenTK.Graphics.ES11.All.ModulateColorImg;
        var _RecipAddSignedAlphaImg = OpenTK.Graphics.ES11.All.RecipAddSignedAlphaImg;
        var _TextureAlphaModulateImg = OpenTK.Graphics.ES11.All.TextureAlphaModulateImg;
        var _FactorAlphaModulateImg = OpenTK.Graphics.ES11.All.FactorAlphaModulateImg;
        var _FragmentAlphaModulateImg = OpenTK.Graphics.ES11.All.FragmentAlphaModulateImg;
        var _AddBlendImg = OpenTK.Graphics.ES11.All.AddBlendImg;
        var _AtcRgbAmd = OpenTK.Graphics.ES11.All.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES11.All.AtcRgbaExplicitAlphaAmd;
        var _FramebufferBindingOes = OpenTK.Graphics.ES11.All.FramebufferBindingOes;
        var _RenderbufferBindingOes = OpenTK.Graphics.ES11.All.RenderbufferBindingOes;
        var _FramebufferAttachmentObjectTypeOes = OpenTK.Graphics.ES11.All.FramebufferAttachmentObjectTypeOes;
        var _FramebufferAttachmentObjectNameOes = OpenTK.Graphics.ES11.All.FramebufferAttachmentObjectNameOes;
        var _FramebufferAttachmentTextureLevelOes = OpenTK.Graphics.ES11.All.FramebufferAttachmentTextureLevelOes;
        var _FramebufferAttachmentTextureCubeMapFaceOes = OpenTK.Graphics.ES11.All.FramebufferAttachmentTextureCubeMapFaceOes;
        var _FramebufferCompleteOes = OpenTK.Graphics.ES11.All.FramebufferCompleteOes;
        var _FramebufferIncompleteAttachmentOes = OpenTK.Graphics.ES11.All.FramebufferIncompleteAttachmentOes;
        var _FramebufferIncompleteMissingAttachmentOes = OpenTK.Graphics.ES11.All.FramebufferIncompleteMissingAttachmentOes;
        var _FramebufferIncompleteDimensionsOes = OpenTK.Graphics.ES11.All.FramebufferIncompleteDimensionsOes;
        var _FramebufferIncompleteFormatsOes = OpenTK.Graphics.ES11.All.FramebufferIncompleteFormatsOes;
        var _FramebufferUnsupportedOes = OpenTK.Graphics.ES11.All.FramebufferUnsupportedOes;
        var _ColorAttachment0Oes = OpenTK.Graphics.ES11.All.ColorAttachment0Oes;
        var _DepthAttachmentOes = OpenTK.Graphics.ES11.All.DepthAttachmentOes;
        var _StencilAttachmentOes = OpenTK.Graphics.ES11.All.StencilAttachmentOes;
        var _FramebufferOes = OpenTK.Graphics.ES11.All.FramebufferOes;
        var _RenderbufferOes = OpenTK.Graphics.ES11.All.RenderbufferOes;
        var _RenderbufferWidthOes = OpenTK.Graphics.ES11.All.RenderbufferWidthOes;
        var _RenderbufferHeightOes = OpenTK.Graphics.ES11.All.RenderbufferHeightOes;
        var _RenderbufferInternalFormatOes = OpenTK.Graphics.ES11.All.RenderbufferInternalFormatOes;
        var _StencilIndex1Oes = OpenTK.Graphics.ES11.All.StencilIndex1Oes;
        var _StencilIndex4Oes = OpenTK.Graphics.ES11.All.StencilIndex4Oes;
        var _StencilIndex8Oes = OpenTK.Graphics.ES11.All.StencilIndex8Oes;
        var _RenderbufferRedSizeOes = OpenTK.Graphics.ES11.All.RenderbufferRedSizeOes;
        var _RenderbufferGreenSizeOes = OpenTK.Graphics.ES11.All.RenderbufferGreenSizeOes;
        var _RenderbufferBlueSizeOes = OpenTK.Graphics.ES11.All.RenderbufferBlueSizeOes;
        var _RenderbufferAlphaSizeOes = OpenTK.Graphics.ES11.All.RenderbufferAlphaSizeOes;
        var _RenderbufferDepthSizeOes = OpenTK.Graphics.ES11.All.RenderbufferDepthSizeOes;
        var _RenderbufferStencilSizeOes = OpenTK.Graphics.ES11.All.RenderbufferStencilSizeOes;
        var _TextureGenStrOes = OpenTK.Graphics.ES11.All.TextureGenStrOes;
        var _Rgb565Oes = OpenTK.Graphics.ES11.All.Rgb565Oes;
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES11.All.Etc1Rgb8Oes;
        var _TextureExternalOes = OpenTK.Graphics.ES11.All.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES11.All.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES11.All.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES11.All.RequiredTextureImageUnitsOes;
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES11.All.PerfmonGlobalModeQcom;
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES11.All.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES11.All.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES11.All.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES11.All.TextureSamplesImg;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES11.All.AmdCompressed3DcTexture;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES11.All.AmdCompressedAtcTexture;
        var _AppleTexture2DLimitedNpot = OpenTK.Graphics.ES11.All.AppleTexture2DLimitedNpot;
        var _ExtBlendMinmax = OpenTK.Graphics.ES11.All.ExtBlendMinmax;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES11.All.ExtDiscardFramebuffer;
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES11.All.ExtMultiDrawArrays;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES11.All.ExtReadFormatBgra;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES11.All.ExtTextureFilterAnisotropic;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES11.All.ExtTextureFormatBgra8888;
        var _ExtTextureLodBias = OpenTK.Graphics.ES11.All.ExtTextureLodBias;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES11.All.ImgMultisampledRenderToTexture;
        var _ImgReadFormat = OpenTK.Graphics.ES11.All.ImgReadFormat;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES11.All.ImgTextureCompressionPvrtc;
        var _ImgTextureEnvEnhancedFixedFunction = OpenTK.Graphics.ES11.All.ImgTextureEnvEnhancedFixedFunction;
        var _ImgUserClipPlane = OpenTK.Graphics.ES11.All.ImgUserClipPlane;
        var _NvFence = OpenTK.Graphics.ES11.All.NvFence;
        var _OesBlendEquationSeparate = OpenTK.Graphics.ES11.All.OesBlendEquationSeparate;
        var _OesBlendFuncSeparate = OpenTK.Graphics.ES11.All.OesBlendFuncSeparate;
        var _OesBlendSubtract = OpenTK.Graphics.ES11.All.OesBlendSubtract;
        var _OesByteCoordinates = OpenTK.Graphics.ES11.All.OesByteCoordinates;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES11.All.OesCompressedEtc1Rgb8Texture;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES11.All.OesCompressedPalettedTexture;
        var _OesDepth24 = OpenTK.Graphics.ES11.All.OesDepth24;
        var _OesDepth32 = OpenTK.Graphics.ES11.All.OesDepth32;
        var _OesDrawTexture = OpenTK.Graphics.ES11.All.OesDrawTexture;
        var _OesEglImage = OpenTK.Graphics.ES11.All.OesEglImage;
        var _OesEglImageExternal = OpenTK.Graphics.ES11.All.OesEglImageExternal;
        var _OesElementIndexUint = OpenTK.Graphics.ES11.All.OesElementIndexUint;
        var _OesExtendedMatrixPalette = OpenTK.Graphics.ES11.All.OesExtendedMatrixPalette;
        var _OesFboRenderMipmap = OpenTK.Graphics.ES11.All.OesFboRenderMipmap;
        var _OesFixedPoint = OpenTK.Graphics.ES11.All.OesFixedPoint;
        var _OesFramebufferObject = OpenTK.Graphics.ES11.All.OesFramebufferObject;
        var _OesMapbuffer = OpenTK.Graphics.ES11.All.OesMapbuffer;
        var _OesMatrixGet = OpenTK.Graphics.ES11.All.OesMatrixGet;
        var _OesMatrixPalette = OpenTK.Graphics.ES11.All.OesMatrixPalette;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES11.All.OesPackedDepthStencil;
        var _OesPointSizeArray = OpenTK.Graphics.ES11.All.OesPointSizeArray;
        var _OesPointSprite = OpenTK.Graphics.ES11.All.OesPointSprite;
        var _OesQueryMatrix = OpenTK.Graphics.ES11.All.OesQueryMatrix;
        var _OesReadFormat = OpenTK.Graphics.ES11.All.OesReadFormat;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES11.All.OesRgb8Rgba8;
        var _OesSinglePrecision = OpenTK.Graphics.ES11.All.OesSinglePrecision;
        var _OesStencil1 = OpenTK.Graphics.ES11.All.OesStencil1;
        var _OesStencil4 = OpenTK.Graphics.ES11.All.OesStencil4;
        var _OesStencil8 = OpenTK.Graphics.ES11.All.OesStencil8;
        var _OesStencilWrap = OpenTK.Graphics.ES11.All.OesStencilWrap;
        var _OesTextureCubeMap = OpenTK.Graphics.ES11.All.OesTextureCubeMap;
        var _OesTextureEnvCrossbar = OpenTK.Graphics.ES11.All.OesTextureEnvCrossbar;
        var _OesTextureMirroredRepeat = OpenTK.Graphics.ES11.All.OesTextureMirroredRepeat;
        var _OesVertexArrayObject = OpenTK.Graphics.ES11.All.OesVertexArrayObject;
        var _One = OpenTK.Graphics.ES11.All.One;
        var _QcomDriverControl = OpenTK.Graphics.ES11.All.QcomDriverControl;
        var _QcomExtendedGet = OpenTK.Graphics.ES11.All.QcomExtendedGet;
        var _QcomExtendedGet2 = OpenTK.Graphics.ES11.All.QcomExtendedGet2;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES11.All.QcomPerfmonGlobalMode;
        var _QcomTiledRendering = OpenTK.Graphics.ES11.All.QcomTiledRendering;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES11.All.QcomWriteonlyRendering;
        var _True = OpenTK.Graphics.ES11.All.True;
        var _VersionEsCl10 = OpenTK.Graphics.ES11.All.VersionEsCl10;
        var _VersionEsCl11 = OpenTK.Graphics.ES11.All.VersionEsCl11;
        var _VersionEsCm10 = OpenTK.Graphics.ES11.All.VersionEsCm10;
        var _VersionEsCm11 = OpenTK.Graphics.ES11.All.VersionEsCm11;
    }
    static void Test_AlphaFunction_3469() {
        var _Never = OpenTK.Graphics.ES11.AlphaFunction.Never;
        var _Less = OpenTK.Graphics.ES11.AlphaFunction.Less;
        var _Equal = OpenTK.Graphics.ES11.AlphaFunction.Equal;
        var _Lequal = OpenTK.Graphics.ES11.AlphaFunction.Lequal;
        var _Greater = OpenTK.Graphics.ES11.AlphaFunction.Greater;
        var _Notequal = OpenTK.Graphics.ES11.AlphaFunction.Notequal;
        var _Gequal = OpenTK.Graphics.ES11.AlphaFunction.Gequal;
        var _Always = OpenTK.Graphics.ES11.AlphaFunction.Always;
    }
    static void Test_Amdcompressed3Dctexture_3470() {
        var _GL_3DcXAmd = OpenTK.Graphics.ES11.Amdcompressed3Dctexture.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES11.Amdcompressed3Dctexture.GL_3DcXyAmd;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES11.Amdcompressed3Dctexture.AmdCompressed3DcTexture;
    }
    static void Test_AmdcompressedAtctexture_3471() {
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES11.AmdcompressedAtctexture.AtcRgbaInterpolatedAlphaAmd;
        var _AtcRgbAmd = OpenTK.Graphics.ES11.AmdcompressedAtctexture.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES11.AmdcompressedAtctexture.AtcRgbaExplicitAlphaAmd;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES11.AmdcompressedAtctexture.AmdCompressedAtcTexture;
    }
    static void Test_Appletexture2DlimitedNpot_3472() {
        var _AppleTexture2DLimitedNpot = OpenTK.Graphics.ES11.Appletexture2DlimitedNpot.AppleTexture2DLimitedNpot;
    }
    static void Test_BeginMode_3473() {
        var _Points = OpenTK.Graphics.ES11.BeginMode.Points;
        var _Lines = OpenTK.Graphics.ES11.BeginMode.Lines;
        var _LineLoop = OpenTK.Graphics.ES11.BeginMode.LineLoop;
        var _LineStrip = OpenTK.Graphics.ES11.BeginMode.LineStrip;
        var _Triangles = OpenTK.Graphics.ES11.BeginMode.Triangles;
        var _TriangleStrip = OpenTK.Graphics.ES11.BeginMode.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES11.BeginMode.TriangleFan;
    }
    static void Test_BlendequationrgboessameAsBlendequationoes_3474() {
        var _BlendEquationRgbOes = OpenTK.Graphics.ES11.BlendequationrgboessameAsBlendequationoes.BlendEquationRgbOes;
        var _BlendEquationAlphaOes = OpenTK.Graphics.ES11.BlendequationrgboessameAsBlendequationoes.BlendEquationAlphaOes;
    }
    static void Test_BlendingFactorDest_3475() {
        var _Zero = OpenTK.Graphics.ES11.BlendingFactorDest.Zero;
        var _SrcColor = OpenTK.Graphics.ES11.BlendingFactorDest.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES11.BlendingFactorDest.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES11.BlendingFactorDest.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES11.BlendingFactorDest.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES11.BlendingFactorDest.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES11.BlendingFactorDest.OneMinusDstAlpha;
        var _One = OpenTK.Graphics.ES11.BlendingFactorDest.One;
    }
    static void Test_BlendingFactorSrc_3476() {
        var _DstColor = OpenTK.Graphics.ES11.BlendingFactorSrc.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES11.BlendingFactorSrc.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES11.BlendingFactorSrc.SrcAlphaSaturate;
    }
    static void Test_Boolean_3477() {
        var _False = OpenTK.Graphics.ES11.Boolean.False;
        var _True = OpenTK.Graphics.ES11.Boolean.True;
    }
    static void Test_BufferObjects_3478() {
        var _BufferSize = OpenTK.Graphics.ES11.BufferObjects.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES11.BufferObjects.BufferUsage;
        var _ArrayBuffer = OpenTK.Graphics.ES11.BufferObjects.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES11.BufferObjects.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.ElementArrayBufferBinding;
        var _VertexArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.VertexArrayBufferBinding;
        var _NormalArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.NormalArrayBufferBinding;
        var _ColorArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.ColorArrayBufferBinding;
        var _TextureCoordArrayBufferBinding = OpenTK.Graphics.ES11.BufferObjects.TextureCoordArrayBufferBinding;
        var _StaticDraw = OpenTK.Graphics.ES11.BufferObjects.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES11.BufferObjects.DynamicDraw;
    }
    static void Test_ClearBufferMask_3479() {
        var _DepthBufferBit = OpenTK.Graphics.ES11.ClearBufferMask.DepthBufferBit;
        var _StencilBufferBit = OpenTK.Graphics.ES11.ClearBufferMask.StencilBufferBit;
        var _ColorBufferBit = OpenTK.Graphics.ES11.ClearBufferMask.ColorBufferBit;
    }
    static void Test_ClipPlaneName_3480() {
        var _ClipPlane0 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane0;
        var _ClipPlane1 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane1;
        var _ClipPlane2 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane2;
        var _ClipPlane3 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane3;
        var _ClipPlane4 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane4;
        var _ClipPlane5 = OpenTK.Graphics.ES11.ClipPlaneName.ClipPlane5;
    }
    static void Test_CullFaceMode_3481() {
        var _Front = OpenTK.Graphics.ES11.CullFaceMode.Front;
        var _Back = OpenTK.Graphics.ES11.CullFaceMode.Back;
        var _FrontAndBack = OpenTK.Graphics.ES11.CullFaceMode.FrontAndBack;
    }
    static void Test_DataType_3482() {
        var _Byte = OpenTK.Graphics.ES11.DataType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES11.DataType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES11.DataType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES11.DataType.UnsignedShort;
        var _Float = OpenTK.Graphics.ES11.DataType.Float;
        var _Fixed = OpenTK.Graphics.ES11.DataType.Fixed;
    }
    static void Test_EnableCap_3483() {
        var _PointSmooth = OpenTK.Graphics.ES11.EnableCap.PointSmooth;
        var _LineSmooth = OpenTK.Graphics.ES11.EnableCap.LineSmooth;
        var _CullFace = OpenTK.Graphics.ES11.EnableCap.CullFace;
        var _Lighting = OpenTK.Graphics.ES11.EnableCap.Lighting;
        var _ColorMaterial = OpenTK.Graphics.ES11.EnableCap.ColorMaterial;
        var _Fog = OpenTK.Graphics.ES11.EnableCap.Fog;
        var _DepthTest = OpenTK.Graphics.ES11.EnableCap.DepthTest;
        var _StencilTest = OpenTK.Graphics.ES11.EnableCap.StencilTest;
        var _Normalize = OpenTK.Graphics.ES11.EnableCap.Normalize;
        var _AlphaTest = OpenTK.Graphics.ES11.EnableCap.AlphaTest;
        var _Dither = OpenTK.Graphics.ES11.EnableCap.Dither;
        var _Blend = OpenTK.Graphics.ES11.EnableCap.Blend;
        var _ColorLogicOp = OpenTK.Graphics.ES11.EnableCap.ColorLogicOp;
        var _ScissorTest = OpenTK.Graphics.ES11.EnableCap.ScissorTest;
        var _Texture2D = OpenTK.Graphics.ES11.EnableCap.Texture2D;
        var _PolygonOffsetFill = OpenTK.Graphics.ES11.EnableCap.PolygonOffsetFill;
        var _RescaleNormal = OpenTK.Graphics.ES11.EnableCap.RescaleNormal;
        var _VertexArray = OpenTK.Graphics.ES11.EnableCap.VertexArray;
        var _NormalArray = OpenTK.Graphics.ES11.EnableCap.NormalArray;
        var _ColorArray = OpenTK.Graphics.ES11.EnableCap.ColorArray;
        var _TextureCoordArray = OpenTK.Graphics.ES11.EnableCap.TextureCoordArray;
        var _Multisample = OpenTK.Graphics.ES11.EnableCap.Multisample;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES11.EnableCap.SampleAlphaToCoverage;
        var _SampleAlphaToOne = OpenTK.Graphics.ES11.EnableCap.SampleAlphaToOne;
        var _SampleCoverage = OpenTK.Graphics.ES11.EnableCap.SampleCoverage;
    }
    static void Test_ErrorCode_3484() {
        var _NoError = OpenTK.Graphics.ES11.ErrorCode.NoError;
        var _InvalidEnum = OpenTK.Graphics.ES11.ErrorCode.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES11.ErrorCode.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES11.ErrorCode.InvalidOperation;
        var _StackOverflow = OpenTK.Graphics.ES11.ErrorCode.StackOverflow;
        var _StackUnderflow = OpenTK.Graphics.ES11.ErrorCode.StackUnderflow;
        var _OutOfMemory = OpenTK.Graphics.ES11.ErrorCode.OutOfMemory;
    }
    static void Test_ExtblendMinmax_3485() {
        var _MinExt = OpenTK.Graphics.ES11.ExtblendMinmax.MinExt;
        var _MaxExt = OpenTK.Graphics.ES11.ExtblendMinmax.MaxExt;
        var _ExtBlendMinmax = OpenTK.Graphics.ES11.ExtblendMinmax.ExtBlendMinmax;
    }
    static void Test_ExtdiscardFramebuffer_3486() {
        var _ColorExt = OpenTK.Graphics.ES11.ExtdiscardFramebuffer.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES11.ExtdiscardFramebuffer.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES11.ExtdiscardFramebuffer.StencilExt;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES11.ExtdiscardFramebuffer.ExtDiscardFramebuffer;
    }
    static void Test_ExtmultiDrawArrays_3487() {
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES11.ExtmultiDrawArrays.ExtMultiDrawArrays;
    }
    static void Test_ExtreadFormatBgra_3488() {
        var _BgraExt = OpenTK.Graphics.ES11.ExtreadFormatBgra.BgraExt;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES11.ExtreadFormatBgra.UnsignedShort4444RevExt;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES11.ExtreadFormatBgra.UnsignedShort1555RevExt;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES11.ExtreadFormatBgra.ExtReadFormatBgra;
    }
    static void Test_ExttextureFilterAnisotropic_3489() {
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES11.ExttextureFilterAnisotropic.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES11.ExttextureFilterAnisotropic.MaxTextureMaxAnisotropyExt;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES11.ExttextureFilterAnisotropic.ExtTextureFilterAnisotropic;
    }
    static void Test_ExttextureFormatBgra8888_3490() {
        var _BgraExt = OpenTK.Graphics.ES11.ExttextureFormatBgra8888.BgraExt;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES11.ExttextureFormatBgra8888.ExtTextureFormatBgra8888;
    }
    static void Test_ExttextureLodBias_3491() {
        var _MaxTextureLodBiasExt = OpenTK.Graphics.ES11.ExttextureLodBias.MaxTextureLodBiasExt;
        var _TextureFilterControlExt = OpenTK.Graphics.ES11.ExttextureLodBias.TextureFilterControlExt;
        var _TextureLodBiasExt = OpenTK.Graphics.ES11.ExttextureLodBias.TextureLodBiasExt;
        var _ExtTextureLodBias = OpenTK.Graphics.ES11.ExttextureLodBias.ExtTextureLodBias;
    }
    static void Test_FogMode_3492() {
        var _Exp = OpenTK.Graphics.ES11.FogMode.Exp;
        var _Exp2 = OpenTK.Graphics.ES11.FogMode.Exp2;
    }
    static void Test_FogParameter_3493() {
        var _FogDensity = OpenTK.Graphics.ES11.FogParameter.FogDensity;
        var _FogStart = OpenTK.Graphics.ES11.FogParameter.FogStart;
        var _FogEnd = OpenTK.Graphics.ES11.FogParameter.FogEnd;
        var _FogMode = OpenTK.Graphics.ES11.FogParameter.FogMode;
        var _FogColor = OpenTK.Graphics.ES11.FogParameter.FogColor;
    }
    static void Test_FrontFaceDirection_3494() {
        var _Cw = OpenTK.Graphics.ES11.FrontFaceDirection.Cw;
        var _Ccw = OpenTK.Graphics.ES11.FrontFaceDirection.Ccw;
    }
    static void Test_GetPName_3495() {
        var _CurrentColor = OpenTK.Graphics.ES11.GetPName.CurrentColor;
        var _CurrentNormal = OpenTK.Graphics.ES11.GetPName.CurrentNormal;
        var _CurrentTextureCoords = OpenTK.Graphics.ES11.GetPName.CurrentTextureCoords;
        var _PointSize = OpenTK.Graphics.ES11.GetPName.PointSize;
        var _SmoothPointSizeRange = OpenTK.Graphics.ES11.GetPName.SmoothPointSizeRange;
        var _LineWidth = OpenTK.Graphics.ES11.GetPName.LineWidth;
        var _SmoothLineWidthRange = OpenTK.Graphics.ES11.GetPName.SmoothLineWidthRange;
        var _CullFaceMode = OpenTK.Graphics.ES11.GetPName.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES11.GetPName.FrontFace;
        var _ShadeModel = OpenTK.Graphics.ES11.GetPName.ShadeModel;
        var _DepthRange = OpenTK.Graphics.ES11.GetPName.DepthRange;
        var _DepthWritemask = OpenTK.Graphics.ES11.GetPName.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES11.GetPName.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES11.GetPName.DepthFunc;
        var _StencilClearValue = OpenTK.Graphics.ES11.GetPName.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES11.GetPName.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES11.GetPName.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES11.GetPName.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES11.GetPName.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES11.GetPName.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES11.GetPName.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES11.GetPName.StencilWritemask;
        var _MatrixMode = OpenTK.Graphics.ES11.GetPName.MatrixMode;
        var _Viewport = OpenTK.Graphics.ES11.GetPName.Viewport;
        var _ModelviewStackDepth = OpenTK.Graphics.ES11.GetPName.ModelviewStackDepth;
        var _ProjectionStackDepth = OpenTK.Graphics.ES11.GetPName.ProjectionStackDepth;
        var _TextureStackDepth = OpenTK.Graphics.ES11.GetPName.TextureStackDepth;
        var _ModelviewMatrix = OpenTK.Graphics.ES11.GetPName.ModelviewMatrix;
        var _ProjectionMatrix = OpenTK.Graphics.ES11.GetPName.ProjectionMatrix;
        var _TextureMatrix = OpenTK.Graphics.ES11.GetPName.TextureMatrix;
        var _AlphaTestFunc = OpenTK.Graphics.ES11.GetPName.AlphaTestFunc;
        var _AlphaTestRef = OpenTK.Graphics.ES11.GetPName.AlphaTestRef;
        var _BlendDst = OpenTK.Graphics.ES11.GetPName.BlendDst;
        var _BlendSrc = OpenTK.Graphics.ES11.GetPName.BlendSrc;
        var _LogicOpMode = OpenTK.Graphics.ES11.GetPName.LogicOpMode;
        var _ScissorBox = OpenTK.Graphics.ES11.GetPName.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES11.GetPName.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES11.GetPName.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES11.GetPName.ColorWritemask;
        var _UnpackAlignment = OpenTK.Graphics.ES11.GetPName.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES11.GetPName.PackAlignment;
        var _MaxLights = OpenTK.Graphics.ES11.GetPName.MaxLights;
        var _MaxClipPlanes = OpenTK.Graphics.ES11.GetPName.MaxClipPlanes;
        var _MaxTextureSize = OpenTK.Graphics.ES11.GetPName.MaxTextureSize;
        var _MaxModelviewStackDepth = OpenTK.Graphics.ES11.GetPName.MaxModelviewStackDepth;
        var _MaxProjectionStackDepth = OpenTK.Graphics.ES11.GetPName.MaxProjectionStackDepth;
        var _MaxTextureStackDepth = OpenTK.Graphics.ES11.GetPName.MaxTextureStackDepth;
        var _MaxViewportDims = OpenTK.Graphics.ES11.GetPName.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES11.GetPName.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES11.GetPName.RedBits;
        var _GreenBits = OpenTK.Graphics.ES11.GetPName.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES11.GetPName.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES11.GetPName.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES11.GetPName.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES11.GetPName.StencilBits;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES11.GetPName.PolygonOffsetUnits;
        var _PolygonOffsetFill = OpenTK.Graphics.ES11.GetPName.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES11.GetPName.PolygonOffsetFactor;
        var _TextureBinding2D = OpenTK.Graphics.ES11.GetPName.TextureBinding2D;
        var _VertexArraySize = OpenTK.Graphics.ES11.GetPName.VertexArraySize;
        var _VertexArrayType = OpenTK.Graphics.ES11.GetPName.VertexArrayType;
        var _VertexArrayStride = OpenTK.Graphics.ES11.GetPName.VertexArrayStride;
        var _NormalArrayType = OpenTK.Graphics.ES11.GetPName.NormalArrayType;
        var _NormalArrayStride = OpenTK.Graphics.ES11.GetPName.NormalArrayStride;
        var _ColorArraySize = OpenTK.Graphics.ES11.GetPName.ColorArraySize;
        var _ColorArrayType = OpenTK.Graphics.ES11.GetPName.ColorArrayType;
        var _ColorArrayStride = OpenTK.Graphics.ES11.GetPName.ColorArrayStride;
        var _TextureCoordArraySize = OpenTK.Graphics.ES11.GetPName.TextureCoordArraySize;
        var _TextureCoordArrayType = OpenTK.Graphics.ES11.GetPName.TextureCoordArrayType;
        var _TextureCoordArrayStride = OpenTK.Graphics.ES11.GetPName.TextureCoordArrayStride;
        var _VertexArrayPointer = OpenTK.Graphics.ES11.GetPName.VertexArrayPointer;
        var _NormalArrayPointer = OpenTK.Graphics.ES11.GetPName.NormalArrayPointer;
        var _ColorArrayPointer = OpenTK.Graphics.ES11.GetPName.ColorArrayPointer;
        var _TextureCoordArrayPointer = OpenTK.Graphics.ES11.GetPName.TextureCoordArrayPointer;
        var _SampleBuffers = OpenTK.Graphics.ES11.GetPName.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES11.GetPName.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES11.GetPName.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES11.GetPName.SampleCoverageInvert;
        var _PointSizeMin = OpenTK.Graphics.ES11.GetPName.PointSizeMin;
        var _PointSizeMax = OpenTK.Graphics.ES11.GetPName.PointSizeMax;
        var _PointFadeThresholdSize = OpenTK.Graphics.ES11.GetPName.PointFadeThresholdSize;
        var _PointDistanceAttenuation = OpenTK.Graphics.ES11.GetPName.PointDistanceAttenuation;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES11.GetPName.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES11.GetPName.AliasedLineWidthRange;
        var _MaxTextureUnits = OpenTK.Graphics.ES11.GetPName.MaxTextureUnits;
    }
    static void Test_GetTextureParameter_3496() {
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES11.GetTextureParameter.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES11.GetTextureParameter.CompressedTextureFormats;
    }
    static void Test_HintMode_3497() {
        var _DontCare = OpenTK.Graphics.ES11.HintMode.DontCare;
        var _Fastest = OpenTK.Graphics.ES11.HintMode.Fastest;
        var _Nicest = OpenTK.Graphics.ES11.HintMode.Nicest;
    }
    static void Test_HintTarget_3498() {
        var _PerspectiveCorrectionHint = OpenTK.Graphics.ES11.HintTarget.PerspectiveCorrectionHint;
        var _PointSmoothHint = OpenTK.Graphics.ES11.HintTarget.PointSmoothHint;
        var _LineSmoothHint = OpenTK.Graphics.ES11.HintTarget.LineSmoothHint;
        var _FogHint = OpenTK.Graphics.ES11.HintTarget.FogHint;
        var _GenerateMipmapHint = OpenTK.Graphics.ES11.HintTarget.GenerateMipmapHint;
    }
    static void Test_ImgmultisampledRenderToTexture_3499() {
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES11.ImgmultisampledRenderToTexture.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES11.ImgmultisampledRenderToTexture.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES11.ImgmultisampledRenderToTexture.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES11.ImgmultisampledRenderToTexture.TextureSamplesImg;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES11.ImgmultisampledRenderToTexture.ImgMultisampledRenderToTexture;
    }
    static void Test_ImgreadFormat_3500() {
        var _BgraImg = OpenTK.Graphics.ES11.ImgreadFormat.BgraImg;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES11.ImgreadFormat.UnsignedShort4444RevImg;
        var _ImgReadFormat = OpenTK.Graphics.ES11.ImgreadFormat.ImgReadFormat;
    }
    static void Test_ImgtextureCompressionPvrtc_3501() {
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES11.ImgtextureCompressionPvrtc.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES11.ImgtextureCompressionPvrtc.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES11.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES11.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc2Bppv1Img;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES11.ImgtextureCompressionPvrtc.ImgTextureCompressionPvrtc;
    }
    static void Test_ImgtextureEnvEnhancedFixedFunction_3502() {
        var _Dot3RgbaImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.Dot3RgbaImg;
        var _ModulateColorImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.ModulateColorImg;
        var _RecipAddSignedAlphaImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.RecipAddSignedAlphaImg;
        var _TextureAlphaModulateImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.TextureAlphaModulateImg;
        var _FactorAlphaModulateImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.FactorAlphaModulateImg;
        var _FragmentAlphaModulateImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.FragmentAlphaModulateImg;
        var _AddBlendImg = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.AddBlendImg;
        var _ImgTextureEnvEnhancedFixedFunction = OpenTK.Graphics.ES11.ImgtextureEnvEnhancedFixedFunction.ImgTextureEnvEnhancedFixedFunction;
    }
    static void Test_ImguserClipPlane_3503() {
        var _MaxClipPlanesImg = OpenTK.Graphics.ES11.ImguserClipPlane.MaxClipPlanesImg;
        var _ClipPlane0Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane0Img;
        var _ClipPlane1Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane1Img;
        var _ClipPlane2Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane2Img;
        var _ClipPlane3Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane3Img;
        var _ClipPlane4Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane4Img;
        var _ClipPlane5Img = OpenTK.Graphics.ES11.ImguserClipPlane.ClipPlane5Img;
        var _ImgUserClipPlane = OpenTK.Graphics.ES11.ImguserClipPlane.ImgUserClipPlane;
    }
    static void Test_LightModelParameter_3504() {
        var _LightModelTwoSide = OpenTK.Graphics.ES11.LightModelParameter.LightModelTwoSide;
        var _LightModelAmbient = OpenTK.Graphics.ES11.LightModelParameter.LightModelAmbient;
    }
    static void Test_LightName_3505() {
        var _Light0 = OpenTK.Graphics.ES11.LightName.Light0;
        var _Light1 = OpenTK.Graphics.ES11.LightName.Light1;
        var _Light2 = OpenTK.Graphics.ES11.LightName.Light2;
        var _Light3 = OpenTK.Graphics.ES11.LightName.Light3;
        var _Light4 = OpenTK.Graphics.ES11.LightName.Light4;
        var _Light5 = OpenTK.Graphics.ES11.LightName.Light5;
        var _Light6 = OpenTK.Graphics.ES11.LightName.Light6;
        var _Light7 = OpenTK.Graphics.ES11.LightName.Light7;
    }
    static void Test_LightParameter_3506() {
        var _Ambient = OpenTK.Graphics.ES11.LightParameter.Ambient;
        var _Diffuse = OpenTK.Graphics.ES11.LightParameter.Diffuse;
        var _Specular = OpenTK.Graphics.ES11.LightParameter.Specular;
        var _Position = OpenTK.Graphics.ES11.LightParameter.Position;
        var _SpotDirection = OpenTK.Graphics.ES11.LightParameter.SpotDirection;
        var _SpotExponent = OpenTK.Graphics.ES11.LightParameter.SpotExponent;
        var _SpotCutoff = OpenTK.Graphics.ES11.LightParameter.SpotCutoff;
        var _ConstantAttenuation = OpenTK.Graphics.ES11.LightParameter.ConstantAttenuation;
        var _LinearAttenuation = OpenTK.Graphics.ES11.LightParameter.LinearAttenuation;
        var _QuadraticAttenuation = OpenTK.Graphics.ES11.LightParameter.QuadraticAttenuation;
    }
    static void Test_LogicOp_3507() {
        var _Clear = OpenTK.Graphics.ES11.LogicOp.Clear;
        var _And = OpenTK.Graphics.ES11.LogicOp.And;
        var _AndReverse = OpenTK.Graphics.ES11.LogicOp.AndReverse;
        var _Copy = OpenTK.Graphics.ES11.LogicOp.Copy;
        var _AndInverted = OpenTK.Graphics.ES11.LogicOp.AndInverted;
        var _Noop = OpenTK.Graphics.ES11.LogicOp.Noop;
        var _Xor = OpenTK.Graphics.ES11.LogicOp.Xor;
        var _Or = OpenTK.Graphics.ES11.LogicOp.Or;
        var _Nor = OpenTK.Graphics.ES11.LogicOp.Nor;
        var _Equiv = OpenTK.Graphics.ES11.LogicOp.Equiv;
        var _Invert = OpenTK.Graphics.ES11.LogicOp.Invert;
        var _OrReverse = OpenTK.Graphics.ES11.LogicOp.OrReverse;
        var _CopyInverted = OpenTK.Graphics.ES11.LogicOp.CopyInverted;
        var _OrInverted = OpenTK.Graphics.ES11.LogicOp.OrInverted;
        var _Nand = OpenTK.Graphics.ES11.LogicOp.Nand;
        var _Set = OpenTK.Graphics.ES11.LogicOp.Set;
    }
    static void Test_MaterialParameter_3508() {
        var _Emission = OpenTK.Graphics.ES11.MaterialParameter.Emission;
        var _Shininess = OpenTK.Graphics.ES11.MaterialParameter.Shininess;
        var _AmbientAndDiffuse = OpenTK.Graphics.ES11.MaterialParameter.AmbientAndDiffuse;
    }
    static void Test_MatrixMode_3509() {
        var _Modelview = OpenTK.Graphics.ES11.MatrixMode.Modelview;
        var _Projection = OpenTK.Graphics.ES11.MatrixMode.Projection;
        var _Texture = OpenTK.Graphics.ES11.MatrixMode.Texture;
    }
    static void Test_Nvfence_3510() {
        var _AllCompletedNv = OpenTK.Graphics.ES11.Nvfence.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES11.Nvfence.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES11.Nvfence.FenceConditionNv;
        var _NvFence = OpenTK.Graphics.ES11.Nvfence.NvFence;
    }
    static void Test_OesblendEquationSeparate_3511() {
        var _OesBlendEquationSeparate = OpenTK.Graphics.ES11.OesblendEquationSeparate.OesBlendEquationSeparate;
    }
    static void Test_OesblendFuncSeparate_3512() {
        var _BlendDstRgbOes = OpenTK.Graphics.ES11.OesblendFuncSeparate.BlendDstRgbOes;
        var _BlendSrcRgbOes = OpenTK.Graphics.ES11.OesblendFuncSeparate.BlendSrcRgbOes;
        var _BlendDstAlphaOes = OpenTK.Graphics.ES11.OesblendFuncSeparate.BlendDstAlphaOes;
        var _BlendSrcAlphaOes = OpenTK.Graphics.ES11.OesblendFuncSeparate.BlendSrcAlphaOes;
        var _OesBlendFuncSeparate = OpenTK.Graphics.ES11.OesblendFuncSeparate.OesBlendFuncSeparate;
    }
    static void Test_OesblendSubtract_3513() {
        var _FuncAddOes = OpenTK.Graphics.ES11.OesblendSubtract.FuncAddOes;
        var _BlendEquationOes = OpenTK.Graphics.ES11.OesblendSubtract.BlendEquationOes;
        var _FuncSubtractOes = OpenTK.Graphics.ES11.OesblendSubtract.FuncSubtractOes;
        var _FuncReverseSubtractOes = OpenTK.Graphics.ES11.OesblendSubtract.FuncReverseSubtractOes;
        var _OesBlendSubtract = OpenTK.Graphics.ES11.OesblendSubtract.OesBlendSubtract;
    }
    static void Test_OesbyteCoordinates_3514() {
        var _OesByteCoordinates = OpenTK.Graphics.ES11.OesbyteCoordinates.OesByteCoordinates;
    }
    static void Test_OescompressedEtc1Rgb8Texture_3515() {
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES11.OescompressedEtc1Rgb8Texture.Etc1Rgb8Oes;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES11.OescompressedEtc1Rgb8Texture.OesCompressedEtc1Rgb8Texture;
    }
    static void Test_OescompressedPalettedTexture_3516() {
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES11.OescompressedPalettedTexture.Palette8Rgb5A1Oes;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES11.OescompressedPalettedTexture.OesCompressedPalettedTexture;
    }
    static void Test_Oesdepth24_3517() {
        var _DepthComponent24Oes = OpenTK.Graphics.ES11.Oesdepth24.DepthComponent24Oes;
        var _OesDepth24 = OpenTK.Graphics.ES11.Oesdepth24.OesDepth24;
    }
    static void Test_Oesdepth32_3518() {
        var _DepthComponent32Oes = OpenTK.Graphics.ES11.Oesdepth32.DepthComponent32Oes;
        var _OesDepth32 = OpenTK.Graphics.ES11.Oesdepth32.OesDepth32;
    }
    static void Test_OesdrawTexture_3519() {
        var _TextureCropRectOes = OpenTK.Graphics.ES11.OesdrawTexture.TextureCropRectOes;
        var _OesDrawTexture = OpenTK.Graphics.ES11.OesdrawTexture.OesDrawTexture;
    }
    static void Test_Oeseglimage_3520() {
        var _OesEglImage = OpenTK.Graphics.ES11.Oeseglimage.OesEglImage;
    }
    static void Test_OeseglimageExternal_3521() {
        var _TextureExternalOes = OpenTK.Graphics.ES11.OeseglimageExternal.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES11.OeseglimageExternal.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES11.OeseglimageExternal.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES11.OeseglimageExternal.RequiredTextureImageUnitsOes;
        var _OesEglImageExternal = OpenTK.Graphics.ES11.OeseglimageExternal.OesEglImageExternal;
    }
    static void Test_OeselementIndexUint_3522() {
        var _UnsignedInt = OpenTK.Graphics.ES11.OeselementIndexUint.UnsignedInt;
        var _OesElementIndexUint = OpenTK.Graphics.ES11.OeselementIndexUint.OesElementIndexUint;
    }
    static void Test_OesextendedMatrixPalette_3523() {
        var _OesExtendedMatrixPalette = OpenTK.Graphics.ES11.OesextendedMatrixPalette.OesExtendedMatrixPalette;
    }
    static void Test_OesfboRenderMipmap_3524() {
        var _OesFboRenderMipmap = OpenTK.Graphics.ES11.OesfboRenderMipmap.OesFboRenderMipmap;
    }
    static void Test_OesfixedPoint_3525() {
        var _FixedOes = OpenTK.Graphics.ES11.OesfixedPoint.FixedOes;
        var _OesFixedPoint = OpenTK.Graphics.ES11.OesfixedPoint.OesFixedPoint;
    }
    static void Test_OesframebufferObject_3526() {
        var _NoneOes = OpenTK.Graphics.ES11.OesframebufferObject.NoneOes;
        var _InvalidFramebufferOperationOes = OpenTK.Graphics.ES11.OesframebufferObject.InvalidFramebufferOperationOes;
        var _Rgba4Oes = OpenTK.Graphics.ES11.OesframebufferObject.Rgba4Oes;
        var _Rgb5A1Oes = OpenTK.Graphics.ES11.OesframebufferObject.Rgb5A1Oes;
        var _DepthComponent16Oes = OpenTK.Graphics.ES11.OesframebufferObject.DepthComponent16Oes;
        var _MaxRenderbufferSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.MaxRenderbufferSizeOes;
        var _FramebufferBindingOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferBindingOes;
        var _RenderbufferBindingOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferBindingOes;
        var _FramebufferAttachmentObjectTypeOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferAttachmentObjectTypeOes;
        var _FramebufferAttachmentObjectNameOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferAttachmentObjectNameOes;
        var _FramebufferAttachmentTextureLevelOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferAttachmentTextureLevelOes;
        var _FramebufferAttachmentTextureCubeMapFaceOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferAttachmentTextureCubeMapFaceOes;
        var _FramebufferCompleteOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferCompleteOes;
        var _FramebufferIncompleteAttachmentOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferIncompleteAttachmentOes;
        var _FramebufferIncompleteMissingAttachmentOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferIncompleteMissingAttachmentOes;
        var _FramebufferIncompleteDimensionsOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferIncompleteDimensionsOes;
        var _FramebufferIncompleteFormatsOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferIncompleteFormatsOes;
        var _FramebufferUnsupportedOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferUnsupportedOes;
        var _ColorAttachment0Oes = OpenTK.Graphics.ES11.OesframebufferObject.ColorAttachment0Oes;
        var _DepthAttachmentOes = OpenTK.Graphics.ES11.OesframebufferObject.DepthAttachmentOes;
        var _StencilAttachmentOes = OpenTK.Graphics.ES11.OesframebufferObject.StencilAttachmentOes;
        var _FramebufferOes = OpenTK.Graphics.ES11.OesframebufferObject.FramebufferOes;
        var _RenderbufferOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferOes;
        var _RenderbufferWidthOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferWidthOes;
        var _RenderbufferHeightOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferHeightOes;
        var _RenderbufferInternalFormatOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferInternalFormatOes;
        var _RenderbufferRedSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferRedSizeOes;
        var _RenderbufferGreenSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferGreenSizeOes;
        var _RenderbufferBlueSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferBlueSizeOes;
        var _RenderbufferAlphaSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferAlphaSizeOes;
        var _RenderbufferDepthSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferDepthSizeOes;
        var _RenderbufferStencilSizeOes = OpenTK.Graphics.ES11.OesframebufferObject.RenderbufferStencilSizeOes;
        var _Rgb565Oes = OpenTK.Graphics.ES11.OesframebufferObject.Rgb565Oes;
        var _OesFramebufferObject = OpenTK.Graphics.ES11.OesframebufferObject.OesFramebufferObject;
    }
    static void Test_Oesmapbuffer_3527() {
        var _WriteOnlyOes = OpenTK.Graphics.ES11.Oesmapbuffer.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES11.Oesmapbuffer.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES11.Oesmapbuffer.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES11.Oesmapbuffer.BufferMapPointerOes;
        var _OesMapbuffer = OpenTK.Graphics.ES11.Oesmapbuffer.OesMapbuffer;
    }
    static void Test_OesmatrixGet_3528() {
        var _ModelviewMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.OesmatrixGet.ModelviewMatrixFloatAsIntBitsOes;
        var _ProjectionMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.OesmatrixGet.ProjectionMatrixFloatAsIntBitsOes;
        var _TextureMatrixFloatAsIntBitsOes = OpenTK.Graphics.ES11.OesmatrixGet.TextureMatrixFloatAsIntBitsOes;
        var _OesMatrixGet = OpenTK.Graphics.ES11.OesmatrixGet.OesMatrixGet;
    }
    static void Test_OesmatrixPalette_3529() {
        var _MaxVertexUnitsOes = OpenTK.Graphics.ES11.OesmatrixPalette.MaxVertexUnitsOes;
        var _WeightArrayTypeOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArrayTypeOes;
        var _WeightArrayStrideOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArrayStrideOes;
        var _WeightArraySizeOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArraySizeOes;
        var _WeightArrayPointerOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArrayPointerOes;
        var _WeightArrayOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArrayOes;
        var _MatrixPaletteOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixPaletteOes;
        var _MaxPaletteMatricesOes = OpenTK.Graphics.ES11.OesmatrixPalette.MaxPaletteMatricesOes;
        var _CurrentPaletteMatrixOes = OpenTK.Graphics.ES11.OesmatrixPalette.CurrentPaletteMatrixOes;
        var _MatrixIndexArrayOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArrayOes;
        var _MatrixIndexArraySizeOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArraySizeOes;
        var _MatrixIndexArrayTypeOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArrayTypeOes;
        var _MatrixIndexArrayStrideOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArrayStrideOes;
        var _MatrixIndexArrayPointerOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArrayPointerOes;
        var _WeightArrayBufferBindingOes = OpenTK.Graphics.ES11.OesmatrixPalette.WeightArrayBufferBindingOes;
        var _MatrixIndexArrayBufferBindingOes = OpenTK.Graphics.ES11.OesmatrixPalette.MatrixIndexArrayBufferBindingOes;
        var _OesMatrixPalette = OpenTK.Graphics.ES11.OesmatrixPalette.OesMatrixPalette;
    }
    static void Test_OespackedDepthStencil_3530() {
        var _DepthStencilOes = OpenTK.Graphics.ES11.OespackedDepthStencil.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES11.OespackedDepthStencil.UnsignedInt248Oes;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES11.OespackedDepthStencil.Depth24Stencil8Oes;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES11.OespackedDepthStencil.OesPackedDepthStencil;
    }
    static void Test_OespointSizeArray_3531() {
        var _PointSizeArrayTypeOes = OpenTK.Graphics.ES11.OespointSizeArray.PointSizeArrayTypeOes;
        var _PointSizeArrayStrideOes = OpenTK.Graphics.ES11.OespointSizeArray.PointSizeArrayStrideOes;
        var _PointSizeArrayPointerOes = OpenTK.Graphics.ES11.OespointSizeArray.PointSizeArrayPointerOes;
        var _PointSizeArrayOes = OpenTK.Graphics.ES11.OespointSizeArray.PointSizeArrayOes;
        var _PointSizeArrayBufferBindingOes = OpenTK.Graphics.ES11.OespointSizeArray.PointSizeArrayBufferBindingOes;
        var _OesPointSizeArray = OpenTK.Graphics.ES11.OespointSizeArray.OesPointSizeArray;
    }
    static void Test_OespointSprite_3532() {
        var _PointSpriteOes = OpenTK.Graphics.ES11.OespointSprite.PointSpriteOes;
        var _CoordReplaceOes = OpenTK.Graphics.ES11.OespointSprite.CoordReplaceOes;
        var _OesPointSprite = OpenTK.Graphics.ES11.OespointSprite.OesPointSprite;
    }
    static void Test_OesqueryMatrix_3533() {
        var _OesQueryMatrix = OpenTK.Graphics.ES11.OesqueryMatrix.OesQueryMatrix;
    }
    static void Test_OesreadFormat_3534() {
        var _ImplementationColorReadTypeOes = OpenTK.Graphics.ES11.OesreadFormat.ImplementationColorReadTypeOes;
        var _ImplementationColorReadFormatOes = OpenTK.Graphics.ES11.OesreadFormat.ImplementationColorReadFormatOes;
        var _OesReadFormat = OpenTK.Graphics.ES11.OesreadFormat.OesReadFormat;
    }
    static void Test_Oesrgb8Rgba8_3535() {
        var _Rgb8Oes = OpenTK.Graphics.ES11.Oesrgb8Rgba8.Rgb8Oes;
        var _Rgba8Oes = OpenTK.Graphics.ES11.Oesrgb8Rgba8.Rgba8Oes;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES11.Oesrgb8Rgba8.OesRgb8Rgba8;
    }
    static void Test_OessinglePrecision_3536() {
        var _OesSinglePrecision = OpenTK.Graphics.ES11.OessinglePrecision.OesSinglePrecision;
    }
    static void Test_Oesstencil1_3537() {
        var _StencilIndex1Oes = OpenTK.Graphics.ES11.Oesstencil1.StencilIndex1Oes;
        var _OesStencil1 = OpenTK.Graphics.ES11.Oesstencil1.OesStencil1;
    }
    static void Test_Oesstencil4_3538() {
        var _StencilIndex4Oes = OpenTK.Graphics.ES11.Oesstencil4.StencilIndex4Oes;
        var _OesStencil4 = OpenTK.Graphics.ES11.Oesstencil4.OesStencil4;
    }
    static void Test_Oesstencil8_3539() {
        var _StencilIndex8Oes = OpenTK.Graphics.ES11.Oesstencil8.StencilIndex8Oes;
        var _OesStencil8 = OpenTK.Graphics.ES11.Oesstencil8.OesStencil8;
    }
    static void Test_OesstencilWrap_3540() {
        var _IncrWrapOes = OpenTK.Graphics.ES11.OesstencilWrap.IncrWrapOes;
        var _DecrWrapOes = OpenTK.Graphics.ES11.OesstencilWrap.DecrWrapOes;
        var _OesStencilWrap = OpenTK.Graphics.ES11.OesstencilWrap.OesStencilWrap;
    }
    static void Test_OestextureCubeMap_3541() {
        var _TextureGenModeOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureGenModeOes;
        var _NormalMapOes = OpenTK.Graphics.ES11.OestextureCubeMap.NormalMapOes;
        var _ReflectionMapOes = OpenTK.Graphics.ES11.OestextureCubeMap.ReflectionMapOes;
        var _TextureCubeMapOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapOes;
        var _TextureBindingCubeMapOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureBindingCubeMapOes;
        var _TextureCubeMapPositiveXOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapPositiveXOes;
        var _TextureCubeMapNegativeXOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapNegativeXOes;
        var _TextureCubeMapPositiveYOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapPositiveYOes;
        var _TextureCubeMapNegativeYOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapNegativeYOes;
        var _TextureCubeMapPositiveZOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapPositiveZOes;
        var _TextureCubeMapNegativeZOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureCubeMapNegativeZOes;
        var _MaxCubeMapTextureSizeOes = OpenTK.Graphics.ES11.OestextureCubeMap.MaxCubeMapTextureSizeOes;
        var _TextureGenStrOes = OpenTK.Graphics.ES11.OestextureCubeMap.TextureGenStrOes;
        var _OesTextureCubeMap = OpenTK.Graphics.ES11.OestextureCubeMap.OesTextureCubeMap;
    }
    static void Test_OestextureEnvCrossbar_3542() {
        var _OesTextureEnvCrossbar = OpenTK.Graphics.ES11.OestextureEnvCrossbar.OesTextureEnvCrossbar;
    }
    static void Test_OestextureMirroredRepeat_3543() {
        var _MirroredRepeatOes = OpenTK.Graphics.ES11.OestextureMirroredRepeat.MirroredRepeatOes;
        var _OesTextureMirroredRepeat = OpenTK.Graphics.ES11.OestextureMirroredRepeat.OesTextureMirroredRepeat;
    }
    static void Test_OesvertexArrayObject_3544() {
        var _VertexArrayBindingOes = OpenTK.Graphics.ES11.OesvertexArrayObject.VertexArrayBindingOes;
        var _OesVertexArrayObject = OpenTK.Graphics.ES11.OesvertexArrayObject.OesVertexArrayObject;
    }
    static void Test_OpenGlescoreVersions_3545() {
        var _VersionEsCl10 = OpenTK.Graphics.ES11.OpenGlescoreVersions.VersionEsCl10;
        var _VersionEsCl11 = OpenTK.Graphics.ES11.OpenGlescoreVersions.VersionEsCl11;
        var _VersionEsCm10 = OpenTK.Graphics.ES11.OpenGlescoreVersions.VersionEsCm10;
        var _VersionEsCm11 = OpenTK.Graphics.ES11.OpenGlescoreVersions.VersionEsCm11;
    }
    static void Test_PixelFormat_3546() {
        var _Alpha = OpenTK.Graphics.ES11.PixelFormat.Alpha;
        var _Rgb = OpenTK.Graphics.ES11.PixelFormat.Rgb;
        var _Rgba = OpenTK.Graphics.ES11.PixelFormat.Rgba;
        var _Luminance = OpenTK.Graphics.ES11.PixelFormat.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES11.PixelFormat.LuminanceAlpha;
    }
    static void Test_PixelStoreParameter_3547() {
        var _UnpackAlignment = OpenTK.Graphics.ES11.PixelStoreParameter.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES11.PixelStoreParameter.PackAlignment;
    }
    static void Test_PixelType_3548() {
        var _UnsignedShort4444 = OpenTK.Graphics.ES11.PixelType.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES11.PixelType.UnsignedShort5551;
        var _UnsignedShort565 = OpenTK.Graphics.ES11.PixelType.UnsignedShort565;
    }
    static void Test_QcomdriverControl_3549() {
        var _QcomDriverControl = OpenTK.Graphics.ES11.QcomdriverControl.QcomDriverControl;
    }
    static void Test_QcomextendedGet_3550() {
        var _TextureWidthQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES11.QcomextendedGet.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES11.QcomextendedGet.StateRestore;
        var _QcomExtendedGet = OpenTK.Graphics.ES11.QcomextendedGet.QcomExtendedGet;
    }
    static void Test_QcomextendedGet2_3551() {
        var _QcomExtendedGet2 = OpenTK.Graphics.ES11.QcomextendedGet2.QcomExtendedGet2;
    }
    static void Test_QcomperfmonGlobalMode_3552() {
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES11.QcomperfmonGlobalMode.PerfmonGlobalModeQcom;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES11.QcomperfmonGlobalMode.QcomPerfmonGlobalMode;
    }
    static void Test_QcomtiledRendering_3553() {
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.ColorBufferBit7Qcom;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit2Qcom;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit5Qcom;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.DepthBufferBit7Qcom;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit0Qcom;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit1Qcom;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit2Qcom;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit0Qcom;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit1Qcom;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit2Qcom;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit3Qcom;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit4Qcom;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit5Qcom;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit6Qcom;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES11.QcomtiledRendering.MultisampleBufferBit7Qcom;
        var _QcomTiledRendering = OpenTK.Graphics.ES11.QcomtiledRendering.QcomTiledRendering;
    }
    static void Test_QcomwriteonlyRendering_3554() {
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES11.QcomwriteonlyRendering.WriteonlyRenderingQcom;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES11.QcomwriteonlyRendering.QcomWriteonlyRendering;
    }
    static void Test_ShadingModel_3555() {
        var _Flat = OpenTK.Graphics.ES11.ShadingModel.Flat;
        var _Smooth = OpenTK.Graphics.ES11.ShadingModel.Smooth;
    }
    static void Test_StencilOp_3556() {
        var _Keep = OpenTK.Graphics.ES11.StencilOp.Keep;
        var _Replace = OpenTK.Graphics.ES11.StencilOp.Replace;
        var _Incr = OpenTK.Graphics.ES11.StencilOp.Incr;
        var _Decr = OpenTK.Graphics.ES11.StencilOp.Decr;
    }
    static void Test_StringName_3557() {
        var _Vendor = OpenTK.Graphics.ES11.StringName.Vendor;
        var _Renderer = OpenTK.Graphics.ES11.StringName.Renderer;
        var _Version = OpenTK.Graphics.ES11.StringName.Version;
        var _Extensions = OpenTK.Graphics.ES11.StringName.Extensions;
    }
    static void Test_TextureCombineDot3_3558() {
        var _AlphaScale = OpenTK.Graphics.ES11.TextureCombineDot3.AlphaScale;
        var _Subtract = OpenTK.Graphics.ES11.TextureCombineDot3.Subtract;
        var _Combine = OpenTK.Graphics.ES11.TextureCombineDot3.Combine;
        var _CombineRgb = OpenTK.Graphics.ES11.TextureCombineDot3.CombineRgb;
        var _CombineAlpha = OpenTK.Graphics.ES11.TextureCombineDot3.CombineAlpha;
        var _RgbScale = OpenTK.Graphics.ES11.TextureCombineDot3.RgbScale;
        var _AddSigned = OpenTK.Graphics.ES11.TextureCombineDot3.AddSigned;
        var _Interpolate = OpenTK.Graphics.ES11.TextureCombineDot3.Interpolate;
        var _Constant = OpenTK.Graphics.ES11.TextureCombineDot3.Constant;
        var _PrimaryColor = OpenTK.Graphics.ES11.TextureCombineDot3.PrimaryColor;
        var _Previous = OpenTK.Graphics.ES11.TextureCombineDot3.Previous;
        var _Src0Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Src0Rgb;
        var _Src1Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Src1Rgb;
        var _Src2Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Src2Rgb;
        var _Src0Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Src0Alpha;
        var _Src1Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Src1Alpha;
        var _Src2Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Src2Alpha;
        var _Operand0Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Operand0Rgb;
        var _Operand1Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Operand1Rgb;
        var _Operand2Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Operand2Rgb;
        var _Operand0Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Operand0Alpha;
        var _Operand1Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Operand1Alpha;
        var _Operand2Alpha = OpenTK.Graphics.ES11.TextureCombineDot3.Operand2Alpha;
        var _Dot3Rgb = OpenTK.Graphics.ES11.TextureCombineDot3.Dot3Rgb;
        var _Dot3Rgba = OpenTK.Graphics.ES11.TextureCombineDot3.Dot3Rgba;
    }
    static void Test_TextureEnvMode_3559() {
        var _Add = OpenTK.Graphics.ES11.TextureEnvMode.Add;
        var _Modulate = OpenTK.Graphics.ES11.TextureEnvMode.Modulate;
        var _Decal = OpenTK.Graphics.ES11.TextureEnvMode.Decal;
    }
    static void Test_TextureEnvParameter_3560() {
        var _TextureEnvMode = OpenTK.Graphics.ES11.TextureEnvParameter.TextureEnvMode;
        var _TextureEnvColor = OpenTK.Graphics.ES11.TextureEnvParameter.TextureEnvColor;
    }
    static void Test_TextureEnvTarget_3561() {
        var _TextureEnv = OpenTK.Graphics.ES11.TextureEnvTarget.TextureEnv;
    }
    static void Test_TextureMagFilter_3562() {
        var _Nearest = OpenTK.Graphics.ES11.TextureMagFilter.Nearest;
        var _Linear = OpenTK.Graphics.ES11.TextureMagFilter.Linear;
    }
    static void Test_TextureMinFilter_3563() {
        var _NearestMipmapNearest = OpenTK.Graphics.ES11.TextureMinFilter.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES11.TextureMinFilter.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES11.TextureMinFilter.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES11.TextureMinFilter.LinearMipmapLinear;
    }
    static void Test_TextureParameterName_3564() {
        var _TextureMagFilter = OpenTK.Graphics.ES11.TextureParameterName.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES11.TextureParameterName.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES11.TextureParameterName.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES11.TextureParameterName.TextureWrapT;
        var _GenerateMipmap = OpenTK.Graphics.ES11.TextureParameterName.GenerateMipmap;
    }
    static void Test_TextureUnit_3565() {
        var _Texture0 = OpenTK.Graphics.ES11.TextureUnit.Texture0;
        var _Texture1 = OpenTK.Graphics.ES11.TextureUnit.Texture1;
        var _Texture2 = OpenTK.Graphics.ES11.TextureUnit.Texture2;
        var _Texture3 = OpenTK.Graphics.ES11.TextureUnit.Texture3;
        var _Texture4 = OpenTK.Graphics.ES11.TextureUnit.Texture4;
        var _Texture5 = OpenTK.Graphics.ES11.TextureUnit.Texture5;
        var _Texture6 = OpenTK.Graphics.ES11.TextureUnit.Texture6;
        var _Texture7 = OpenTK.Graphics.ES11.TextureUnit.Texture7;
        var _Texture8 = OpenTK.Graphics.ES11.TextureUnit.Texture8;
        var _Texture9 = OpenTK.Graphics.ES11.TextureUnit.Texture9;
        var _Texture10 = OpenTK.Graphics.ES11.TextureUnit.Texture10;
        var _Texture11 = OpenTK.Graphics.ES11.TextureUnit.Texture11;
        var _Texture12 = OpenTK.Graphics.ES11.TextureUnit.Texture12;
        var _Texture13 = OpenTK.Graphics.ES11.TextureUnit.Texture13;
        var _Texture14 = OpenTK.Graphics.ES11.TextureUnit.Texture14;
        var _Texture15 = OpenTK.Graphics.ES11.TextureUnit.Texture15;
        var _Texture16 = OpenTK.Graphics.ES11.TextureUnit.Texture16;
        var _Texture17 = OpenTK.Graphics.ES11.TextureUnit.Texture17;
        var _Texture18 = OpenTK.Graphics.ES11.TextureUnit.Texture18;
        var _Texture19 = OpenTK.Graphics.ES11.TextureUnit.Texture19;
        var _Texture20 = OpenTK.Graphics.ES11.TextureUnit.Texture20;
        var _Texture21 = OpenTK.Graphics.ES11.TextureUnit.Texture21;
        var _Texture22 = OpenTK.Graphics.ES11.TextureUnit.Texture22;
        var _Texture23 = OpenTK.Graphics.ES11.TextureUnit.Texture23;
        var _Texture24 = OpenTK.Graphics.ES11.TextureUnit.Texture24;
        var _Texture25 = OpenTK.Graphics.ES11.TextureUnit.Texture25;
        var _Texture26 = OpenTK.Graphics.ES11.TextureUnit.Texture26;
        var _Texture27 = OpenTK.Graphics.ES11.TextureUnit.Texture27;
        var _Texture28 = OpenTK.Graphics.ES11.TextureUnit.Texture28;
        var _Texture29 = OpenTK.Graphics.ES11.TextureUnit.Texture29;
        var _Texture30 = OpenTK.Graphics.ES11.TextureUnit.Texture30;
        var _Texture31 = OpenTK.Graphics.ES11.TextureUnit.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES11.TextureUnit.ActiveTexture;
        var _ClientActiveTexture = OpenTK.Graphics.ES11.TextureUnit.ClientActiveTexture;
    }
    static void Test_TextureWrapMode_3566() {
        var _Repeat = OpenTK.Graphics.ES11.TextureWrapMode.Repeat;
        var _ClampToEdge = OpenTK.Graphics.ES11.TextureWrapMode.ClampToEdge;
    }

    static unsafe void Test_ActiveTexture_3568() {
        OpenTK.Graphics.ES11.All _texture = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.ActiveTexture(_texture);
    }
    static unsafe void Test_AlphaFunc_3569() {
        OpenTK.Graphics.ES11.All _func = default(OpenTK.Graphics.ES11.All);
        System.Single _ref = default(System.Single);
        OpenTK.Graphics.ES11.GL.AlphaFunc(_func,_ref);
    }
    static unsafe void Test_AlphaFuncx_3570() {
        OpenTK.Graphics.ES11.All _func = default(OpenTK.Graphics.ES11.All);
        System.Int32 _ref = default(System.Int32);
        OpenTK.Graphics.ES11.GL.AlphaFuncx(_func,_ref);
    }
    static unsafe void Test_BindBuffer_3571() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Graphics.ES11.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindBuffer_3572() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindTexture_3573() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES11.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BindTexture_3574() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BlendFunc_3575() {
        OpenTK.Graphics.ES11.All _sfactor = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _dfactor = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BlendFunc(_sfactor,_dfactor);
    }
    static unsafe void Test_BufferData_3576() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES11.All _usage = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BufferData(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3577() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES11.All _usage = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3578() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES11.All _usage = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3579() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES11.All _usage = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_3580() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES11.All _usage = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.BufferData<int>(_target,_size,ref _data,_usage);
    }
    static unsafe void Test_BufferSubData_3581() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.BufferSubData(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3582() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES11.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3583() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES11.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3584() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES11.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_3585() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES11.GL.BufferSubData<int>(_target,_offset,_size,ref _data);
    }
    static unsafe void Test_Clear_3586() {
        OpenTK.Graphics.ES11.ClearBufferMask _mask = default(OpenTK.Graphics.ES11.ClearBufferMask);
        OpenTK.Graphics.ES11.GL.Clear(_mask);
    }
    static unsafe void Test_ClearColor_3587() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES11.GL.ClearColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearColorx_3588() {
        System.Int32 _red = default(System.Int32);
        System.Int32 _green = default(System.Int32);
        System.Int32 _blue = default(System.Int32);
        System.Int32 _alpha = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ClearColorx(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearDepth_3589() {
        System.Single _depth = default(System.Single);
        OpenTK.Graphics.ES11.GL.ClearDepth(_depth);
    }
    static unsafe void Test_ClearDepthx_3590() {
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ClearDepthx(_depth);
    }
    static unsafe void Test_ClearStencil_3591() {
        System.Int32 _s = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ClearStencil(_s);
    }
    static unsafe void Test_ClientActiveTexture_3592() {
        OpenTK.Graphics.ES11.All _texture = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.ClientActiveTexture(_texture);
    }
    static unsafe void Test_ClipPlane_3593() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Single[] _equation = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.ClipPlane(_plane,_equation);
    }
    static unsafe void Test_ClipPlane_3594() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Single _equation = default(System.Single);
        OpenTK.Graphics.ES11.GL.ClipPlane(_plane,ref _equation);
    }
    static unsafe void Test_ClipPlane_3595() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Single* _equation = default(System.Single*);
        OpenTK.Graphics.ES11.GL.ClipPlane(_plane,_equation);
    }
    static unsafe void Test_ClipPlanefIMG_3596() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Single[] _eqn = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.ClipPlanefIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanefIMG_3597() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Single _eqn = default(System.Single);
        OpenTK.Graphics.ES11.GL.ClipPlanefIMG(_p,ref _eqn);
    }
    static unsafe void Test_ClipPlanefIMG_3598() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Single* _eqn = default(System.Single*);
        OpenTK.Graphics.ES11.GL.ClipPlanefIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanex_3599() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _equation = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ClipPlanex(_plane,_equation);
    }
    static unsafe void Test_ClipPlanex_3600() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Int32 _equation = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ClipPlanex(_plane,ref _equation);
    }
    static unsafe void Test_ClipPlanex_3601() {
        OpenTK.Graphics.ES11.All _plane = default(OpenTK.Graphics.ES11.All);
        System.Int32* _equation = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ClipPlanex(_plane,_equation);
    }
    static unsafe void Test_ClipPlanexIMG_3602() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _eqn = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ClipPlanexIMG(_p,_eqn);
    }
    static unsafe void Test_ClipPlanexIMG_3603() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Int32 _eqn = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ClipPlanexIMG(_p,ref _eqn);
    }
    static unsafe void Test_ClipPlanexIMG_3604() {
        OpenTK.Graphics.ES11.All _p = default(OpenTK.Graphics.ES11.All);
        System.Int32* _eqn = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ClipPlanexIMG(_p,_eqn);
    }
    static unsafe void Test_Color4_3605() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES11.GL.Color4(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_Color4_3606() {
        System.Byte _red = default(System.Byte);
        System.Byte _green = default(System.Byte);
        System.Byte _blue = default(System.Byte);
        System.Byte _alpha = default(System.Byte);
        OpenTK.Graphics.ES11.GL.Color4(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_Color4x_3607() {
        System.Int32 _red = default(System.Int32);
        System.Int32 _green = default(System.Int32);
        System.Int32 _blue = default(System.Int32);
        System.Int32 _alpha = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Color4x(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ColorMask_3608() {
        System.Boolean _red = default(System.Boolean);
        System.Boolean _green = default(System.Boolean);
        System.Boolean _blue = default(System.Boolean);
        System.Boolean _alpha = default(System.Boolean);
        OpenTK.Graphics.ES11.GL.ColorMask(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ColorPointer_3609() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.ColorPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3610() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES11.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3611() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES11.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3612() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES11.GL.ColorPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_ColorPointer_3613() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES11.GL.ColorPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_CompressedTexImage2D_3614() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.CompressedTexImage2D(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3615() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES11.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3616() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES11.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3617() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES11.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_3618() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES11.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3619() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.CompressedTexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3620() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES11.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3621() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES11.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3622() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES11.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_3623() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES11.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,ref _data);
    }
    static unsafe void Test_CopyTexImage2D_3624() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.GL.CopyTexImage2D(_target,_level,_internalformat,_x,_y,_width,_height,_border);
    }
    static unsafe void Test_CopyTexSubImage2D_3625() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.GL.CopyTexSubImage2D(_target,_level,_xoffset,_yoffset,_x,_y,_width,_height);
    }
    static unsafe void Test_CullFace_3626() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.CullFace(_mode);
    }
    static unsafe void Test_DeleteBuffers_3627() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3628() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_3629() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3630() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_3631() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_3632() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES11.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteTextures_3633() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3634() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_3635() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3636() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_3637() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_3638() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES11.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DepthFunc_3639() {
        OpenTK.Graphics.ES11.All _func = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.DepthFunc(_func);
    }
    static unsafe void Test_DepthMask_3640() {
        System.Boolean _flag = default(System.Boolean);
        OpenTK.Graphics.ES11.GL.DepthMask(_flag);
    }
    static unsafe void Test_DepthRange_3641() {
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES11.GL.DepthRange(_zNear,_zFar);
    }
    static unsafe void Test_DepthRangex_3642() {
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES11.GL.DepthRangex(_zNear,_zFar);
    }
    static unsafe void Test_Disable_3643() {
        OpenTK.Graphics.ES11.All _cap = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.Disable(_cap);
    }
    static unsafe void Test_DisableClientState_3644() {
        OpenTK.Graphics.ES11.All _array = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.DisableClientState(_array);
    }
    static unsafe void Test_DisableDriverControlQCOM_3645() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES11.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DisableDriverControlQCOM_3646() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DrawArrays_3647() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _first = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.GL.DrawArrays(_mode,_first,_count);
    }
    static unsafe void Test_DrawElements_3648() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.DrawElements(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3649() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES11.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3650() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES11.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3651() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES11.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_3652() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int _indices = default(int);
        OpenTK.Graphics.ES11.GL.DrawElements<int>(_mode,_count,_type,ref _indices);
    }
    static unsafe void Test_Enable_3653() {
        OpenTK.Graphics.ES11.All _cap = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.Enable(_cap);
    }
    static unsafe void Test_EnableClientState_3654() {
        OpenTK.Graphics.ES11.All _array = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.EnableClientState(_array);
    }
    static unsafe void Test_EnableDriverControlQCOM_3655() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES11.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EnableDriverControlQCOM_3656() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EndTilingQCOM_3657() {
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES11.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_EndTilingQCOM_3658() {
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3659() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.ExtGetBufferPointervQCOM(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3660() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES11.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3661() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES11.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3662() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES11.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_3663() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        int _params = default(int);
        OpenTK.Graphics.ES11.GL.ExtGetBufferPointervQCOM<int>(_target,ref _params);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3664() {
        System.Int32[] _buffers = default(System.Int32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3665() {
        System.Int32 _buffers = default(System.Int32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3666() {
        System.Int32* _buffers = default(System.Int32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3667() {
        System.UInt32[] _buffers = default(System.UInt32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3668() {
        System.UInt32 _buffers = default(System.UInt32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_3669() {
        System.UInt32* _buffers = default(System.UInt32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3670() {
        System.Int32[] _framebuffers = default(System.Int32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3671() {
        System.Int32 _framebuffers = default(System.Int32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3672() {
        System.Int32* _framebuffers = default(System.Int32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3673() {
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3674() {
        System.UInt32 _framebuffers = default(System.UInt32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_3675() {
        System.UInt32* _framebuffers = default(System.UInt32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3676() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3677() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3678() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3679() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3680() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_3681() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES11.All _shadertype = default(OpenTK.Graphics.ES11.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3682() {
        System.Int32[] _programs = default(System.Int32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3683() {
        System.Int32 _programs = default(System.Int32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3684() {
        System.Int32* _programs = default(System.Int32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3685() {
        System.UInt32[] _programs = default(System.UInt32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3686() {
        System.UInt32 _programs = default(System.UInt32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_3687() {
        System.UInt32* _programs = default(System.UInt32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3688() {
        System.Int32[] _renderbuffers = default(System.Int32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3689() {
        System.Int32 _renderbuffers = default(System.Int32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3690() {
        System.Int32* _renderbuffers = default(System.Int32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3691() {
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3692() {
        System.UInt32 _renderbuffers = default(System.UInt32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_3693() {
        System.UInt32* _renderbuffers = default(System.UInt32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetShadersQCOM_3694() {
        System.Int32[] _shaders = default(System.Int32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3695() {
        System.Int32 _shaders = default(System.Int32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3696() {
        System.Int32* _shaders = default(System.Int32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3697() {
        System.UInt32[] _shaders = default(System.UInt32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3698() {
        System.UInt32 _shaders = default(System.UInt32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_3699() {
        System.UInt32* _shaders = default(System.UInt32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3700() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3701() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3702() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3703() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3704() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_3705() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3706() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _texels = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.ExtGetTexSubImageQCOM(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3707() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[] _texels = default(int[]);
        OpenTK.Graphics.ES11.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3708() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,] _texels = default(int[,]);
        OpenTK.Graphics.ES11.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3709() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,,] _texels = default(int[,,]);
        OpenTK.Graphics.ES11.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_3710() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int _texels = default(int);
        OpenTK.Graphics.ES11.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,ref _texels);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3711() {
        System.Int32[] _textures = default(System.Int32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3712() {
        System.Int32 _textures = default(System.Int32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3713() {
        System.Int32* _textures = default(System.Int32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3714() {
        System.UInt32[] _textures = default(System.UInt32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3715() {
        System.UInt32 _textures = default(System.UInt32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_3716() {
        System.UInt32* _textures = default(System.UInt32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_3717() {
        System.Int32 _program = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_3718() {
        System.UInt32 _program = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtTexObjectStateOverrideiQCOM_3719() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.ExtTexObjectStateOverrideiQCOM(_target,_pname,_param);
    }
    static unsafe void Test_Finish_3720() {
        OpenTK.Graphics.ES11.GL.Finish();
    }
    static unsafe void Test_Flush_3721() {
        OpenTK.Graphics.ES11.GL.Flush();
    }
    static unsafe void Test_Fog_3722() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.Fog(_pname,_param);
    }
    static unsafe void Test_Fog_3723() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.Fog(_pname,_params);
    }
    static unsafe void Test_Fog_3724() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.Fog(_pname,_params);
    }
    static unsafe void Test_Fogx_3725() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Fogx(_pname,_param);
    }
    static unsafe void Test_Fogx_3726() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.Fogx(_pname,_params);
    }
    static unsafe void Test_Fogx_3727() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.Fogx(_pname,_params);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_3728() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _attachment = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _textarget = default(OpenTK.Graphics.ES11.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES11.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_3729() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _attachment = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _textarget = default(OpenTK.Graphics.ES11.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES11.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FrontFace_3730() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.FrontFace(_mode);
    }
    static unsafe void Test_Frustum_3731() {
        System.Single _left = default(System.Single);
        System.Single _right = default(System.Single);
        System.Single _bottom = default(System.Single);
        System.Single _top = default(System.Single);
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES11.GL.Frustum(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_Frustumx_3732() {
        System.Int32 _left = default(System.Int32);
        System.Int32 _right = default(System.Int32);
        System.Int32 _bottom = default(System.Int32);
        System.Int32 _top = default(System.Int32);
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Frustumx(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_GenBuffers_3733() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3734() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_3735() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3736() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_3737() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_3738() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES11.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenTextures_3739() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3740() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_3741() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3742() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_3743() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_3744() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES11.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GetBoolean_3745() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Boolean[] _params = default(System.Boolean[]);
        OpenTK.Graphics.ES11.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBoolean_3746() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Boolean _params = default(System.Boolean);
        OpenTK.Graphics.ES11.GL.GetBoolean(_pname,out _params);
    }
    static unsafe void Test_GetBoolean_3747() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Boolean* _params = default(System.Boolean*);
        OpenTK.Graphics.ES11.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_3748() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_3749() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetBufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetBufferParameter_3750() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetClipPlane_3751() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _eqn = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetClipPlane(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlane_3752() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _eqn = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetClipPlane(_pname,out _eqn);
    }
    static unsafe void Test_GetClipPlane_3753() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _eqn = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetClipPlane(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlanex_3754() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _eqn = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetClipPlanex(_pname,_eqn);
    }
    static unsafe void Test_GetClipPlanex_3755() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _eqn = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetClipPlanex(_pname,out _eqn);
    }
    static unsafe void Test_GetClipPlanex_3756() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _eqn = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetClipPlanex(_pname,_eqn);
    }
    static unsafe void Test_GetDriverControlsQCOM_3757() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.Int32[] _driverControls = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3758() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.UInt32[] _driverControls = default(System.UInt32[]);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3759() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.Int32 _driverControls = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3760() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.UInt32 _driverControls = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3761() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.Int32* _driverControls = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_3762() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.UInt32* _driverControls = default(System.UInt32*);
        OpenTK.Graphics.ES11.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3763() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3764() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3765() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3766() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3767() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_3768() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES11.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetError_3769() {
        OpenTK.Graphics.ES11.All r = OpenTK.Graphics.ES11.GL.GetError();
    }
    static unsafe void Test_GetFixed_3770() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetFixed(_pname,_params);
    }
    static unsafe void Test_GetFixed_3771() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetFixed(_pname,out _params);
    }
    static unsafe void Test_GetFixed_3772() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetFixed(_pname,_params);
    }
    static unsafe void Test_GetFloat_3773() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFloat_3774() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetFloat(_pname,out _params);
    }
    static unsafe void Test_GetFloat_3775() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetInteger_3776() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetInteger_3777() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetInteger(_pname,out _params);
    }
    static unsafe void Test_GetInteger_3778() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetLight_3779() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetLight(_light,_pname,_params);
    }
    static unsafe void Test_GetLight_3780() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetLight(_light,_pname,out _params);
    }
    static unsafe void Test_GetLight_3781() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetLight(_light,_pname,_params);
    }
    static unsafe void Test_GetLightx_3782() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetLightx(_light,_pname,_params);
    }
    static unsafe void Test_GetLightx_3783() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetLightx(_light,_pname,out _params);
    }
    static unsafe void Test_GetLightx_3784() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetLightx(_light,_pname,_params);
    }
    static unsafe void Test_GetMaterial_3785() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetMaterial(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterial_3786() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetMaterial(_face,_pname,out _params);
    }
    static unsafe void Test_GetMaterial_3787() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetMaterial(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterialx_3788() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetMaterialx(_face,_pname,_params);
    }
    static unsafe void Test_GetMaterialx_3789() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetMaterialx(_face,_pname,out _params);
    }
    static unsafe void Test_GetMaterialx_3790() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetMaterialx(_face,_pname,_params);
    }
    static unsafe void Test_GetPointer_3791() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.GetPointer(_pname,_params);
    }
    static unsafe void Test_GetPointer_3792() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES11.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3793() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES11.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3794() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES11.GL.GetPointer<int>(_pname,_params);
    }
    static unsafe void Test_GetPointer_3795() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        int _params = default(int);
        OpenTK.Graphics.ES11.GL.GetPointer<int>(_pname,ref _params);
    }
    static unsafe void Test_GetString_3796() {
        OpenTK.Graphics.ES11.All _name = default(OpenTK.Graphics.ES11.All);
        System.String r = OpenTK.Graphics.ES11.GL.GetString(_name);
    }
    static unsafe void Test_GetTexEnv_3797() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3798() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnv_3799() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3800() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnv_3801() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnv_3802() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetTexEnv(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnvx_3803() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetTexEnvx(_env,_pname,_params);
    }
    static unsafe void Test_GetTexEnvx_3804() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetTexEnvx(_env,_pname,out _params);
    }
    static unsafe void Test_GetTexEnvx_3805() {
        OpenTK.Graphics.ES11.All _env = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetTexEnvx(_env,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3806() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3807() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_3808() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3809() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_3810() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_3811() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameterx_3812() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.GetTexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameterx_3813() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES11.GL.GetTexParameterx(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameterx_3814() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.GetTexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_Hint_3815() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.Hint(_target,_mode);
    }
    static unsafe void Test_IsBuffer_3816() {
        System.Int32 _buffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsBuffer_3817() {
        System.UInt32 _buffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsEnabled_3818() {
        OpenTK.Graphics.ES11.All _cap = default(OpenTK.Graphics.ES11.All);
        System.Boolean r = OpenTK.Graphics.ES11.GL.IsEnabled(_cap);
    }
    static unsafe void Test_IsTexture_3819() {
        System.Int32 _texture = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.IsTexture(_texture);
    }
    static unsafe void Test_IsTexture_3820() {
        System.UInt32 _texture = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES11.GL.IsTexture(_texture);
    }
    static unsafe void Test_Light_3821() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.Light(_light,_pname,_param);
    }
    static unsafe void Test_Light_3822() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.Light(_light,_pname,_params);
    }
    static unsafe void Test_Light_3823() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.Light(_light,_pname,_params);
    }
    static unsafe void Test_LightModel_3824() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.LightModel(_pname,_param);
    }
    static unsafe void Test_LightModel_3825() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.LightModel(_pname,_params);
    }
    static unsafe void Test_LightModel_3826() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.LightModel(_pname,_params);
    }
    static unsafe void Test_LightModelx_3827() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.LightModelx(_pname,_param);
    }
    static unsafe void Test_LightModelx_3828() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.LightModelx(_pname,_params);
    }
    static unsafe void Test_LightModelx_3829() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.LightModelx(_pname,_params);
    }
    static unsafe void Test_Lightx_3830() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Lightx(_light,_pname,_param);
    }
    static unsafe void Test_Lightx_3831() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.Lightx(_light,_pname,_params);
    }
    static unsafe void Test_Lightx_3832() {
        OpenTK.Graphics.ES11.All _light = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.Lightx(_light,_pname,_params);
    }
    static unsafe void Test_LineWidth_3833() {
        System.Single _width = default(System.Single);
        OpenTK.Graphics.ES11.GL.LineWidth(_width);
    }
    static unsafe void Test_LineWidthx_3834() {
        System.Int32 _width = default(System.Int32);
        OpenTK.Graphics.ES11.GL.LineWidthx(_width);
    }
    static unsafe void Test_LoadIdentity_3835() {
        OpenTK.Graphics.ES11.GL.LoadIdentity();
    }
    static unsafe void Test_LoadMatrix_3836() {
        System.Single[] _m = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.LoadMatrix(_m);
    }
    static unsafe void Test_LoadMatrix_3837() {
        System.Single _m = default(System.Single);
        OpenTK.Graphics.ES11.GL.LoadMatrix(ref _m);
    }
    static unsafe void Test_LoadMatrix_3838() {
        System.Single* _m = default(System.Single*);
        OpenTK.Graphics.ES11.GL.LoadMatrix(_m);
    }
    static unsafe void Test_LoadMatrixx_3839() {
        System.Int32[] _m = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.LoadMatrixx(_m);
    }
    static unsafe void Test_LoadMatrixx_3840() {
        System.Int32 _m = default(System.Int32);
        OpenTK.Graphics.ES11.GL.LoadMatrixx(ref _m);
    }
    static unsafe void Test_LoadMatrixx_3841() {
        System.Int32* _m = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.LoadMatrixx(_m);
    }
    static unsafe void Test_LogicOp_3842() {
        OpenTK.Graphics.ES11.All _opcode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.LogicOp(_opcode);
    }
    static unsafe void Test_Material_3843() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.Material(_face,_pname,_param);
    }
    static unsafe void Test_Material_3844() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.Material(_face,_pname,_params);
    }
    static unsafe void Test_Material_3845() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.Material(_face,_pname,_params);
    }
    static unsafe void Test_Materialx_3846() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Materialx(_face,_pname,_param);
    }
    static unsafe void Test_Materialx_3847() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.Materialx(_face,_pname,_params);
    }
    static unsafe void Test_Materialx_3848() {
        OpenTK.Graphics.ES11.All _face = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.Materialx(_face,_pname,_params);
    }
    static unsafe void Test_MatrixMode_3849() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.MatrixMode(_mode);
    }
    static unsafe void Test_MultiTexCoord4_3850() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Single _s = default(System.Single);
        System.Single _t = default(System.Single);
        System.Single _r = default(System.Single);
        System.Single _q = default(System.Single);
        OpenTK.Graphics.ES11.GL.MultiTexCoord4(_target,_s,_t,_r,_q);
    }
    static unsafe void Test_MultiTexCoord4x_3851() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _s = default(System.Int32);
        System.Int32 _t = default(System.Int32);
        System.Int32 _r = default(System.Int32);
        System.Int32 _q = default(System.Int32);
        OpenTK.Graphics.ES11.GL.MultiTexCoord4x(_target,_s,_t,_r,_q);
    }
    static unsafe void Test_MultMatrix_3852() {
        System.Single[] _m = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.MultMatrix(_m);
    }
    static unsafe void Test_MultMatrix_3853() {
        System.Single _m = default(System.Single);
        OpenTK.Graphics.ES11.GL.MultMatrix(ref _m);
    }
    static unsafe void Test_MultMatrix_3854() {
        System.Single* _m = default(System.Single*);
        OpenTK.Graphics.ES11.GL.MultMatrix(_m);
    }
    static unsafe void Test_MultMatrixx_3855() {
        System.Int32[] _m = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.MultMatrixx(_m);
    }
    static unsafe void Test_MultMatrixx_3856() {
        System.Int32 _m = default(System.Int32);
        OpenTK.Graphics.ES11.GL.MultMatrixx(ref _m);
    }
    static unsafe void Test_MultMatrixx_3857() {
        System.Int32* _m = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.MultMatrixx(_m);
    }
    static unsafe void Test_Normal3_3858() {
        System.Single _nx = default(System.Single);
        System.Single _ny = default(System.Single);
        System.Single _nz = default(System.Single);
        OpenTK.Graphics.ES11.GL.Normal3(_nx,_ny,_nz);
    }
    static unsafe void Test_Normal3x_3859() {
        System.Int32 _nx = default(System.Int32);
        System.Int32 _ny = default(System.Int32);
        System.Int32 _nz = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Normal3x(_nx,_ny,_nz);
    }
    static unsafe void Test_NormalPointer_3860() {
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.NormalPointer(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3861() {
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES11.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3862() {
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES11.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3863() {
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES11.GL.NormalPointer<int>(_type,_stride,_pointer);
    }
    static unsafe void Test_NormalPointer_3864() {
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES11.GL.NormalPointer<int>(_type,_stride,ref _pointer);
    }
    static unsafe void Test_Ortho_3865() {
        System.Single _left = default(System.Single);
        System.Single _right = default(System.Single);
        System.Single _bottom = default(System.Single);
        System.Single _top = default(System.Single);
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES11.GL.Ortho(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_Orthox_3866() {
        System.Int32 _left = default(System.Int32);
        System.Int32 _right = default(System.Int32);
        System.Int32 _bottom = default(System.Int32);
        System.Int32 _top = default(System.Int32);
        System.Int32 _zNear = default(System.Int32);
        System.Int32 _zFar = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Orthox(_left,_right,_bottom,_top,_zNear,_zFar);
    }
    static unsafe void Test_PixelStore_3867() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.PixelStore(_pname,_param);
    }
    static unsafe void Test_PointParameter_3868() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.PointParameter(_pname,_param);
    }
    static unsafe void Test_PointParameter_3869() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.PointParameter(_pname,_params);
    }
    static unsafe void Test_PointParameter_3870() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.PointParameter(_pname,_params);
    }
    static unsafe void Test_PointParameterx_3871() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.PointParameterx(_pname,_param);
    }
    static unsafe void Test_PointParameterx_3872() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.PointParameterx(_pname,_params);
    }
    static unsafe void Test_PointParameterx_3873() {
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.PointParameterx(_pname,_params);
    }
    static unsafe void Test_PointSize_3874() {
        System.Single _size = default(System.Single);
        OpenTK.Graphics.ES11.GL.PointSize(_size);
    }
    static unsafe void Test_PointSizex_3875() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.GL.PointSizex(_size);
    }
    static unsafe void Test_PolygonOffset_3876() {
        System.Single _factor = default(System.Single);
        System.Single _units = default(System.Single);
        OpenTK.Graphics.ES11.GL.PolygonOffset(_factor,_units);
    }
    static unsafe void Test_PolygonOffsetx_3877() {
        System.Int32 _factor = default(System.Int32);
        System.Int32 _units = default(System.Int32);
        OpenTK.Graphics.ES11.GL.PolygonOffsetx(_factor,_units);
    }
    static unsafe void Test_PopMatrix_3878() {
        OpenTK.Graphics.ES11.GL.PopMatrix();
    }
    static unsafe void Test_PushMatrix_3879() {
        OpenTK.Graphics.ES11.GL.PushMatrix();
    }
    static unsafe void Test_ReadPixels_3880() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.ReadPixels(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3881() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES11.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3882() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES11.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3883() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES11.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_3884() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES11.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_RenderbufferStorageMultisampleIMG_3885() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES11.All _internalformat = default(OpenTK.Graphics.ES11.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.GL.RenderbufferStorageMultisampleIMG(_target,_samples,_internalformat,_width,_height);
    }
    static unsafe void Test_Rotate_3886() {
        System.Single _angle = default(System.Single);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES11.GL.Rotate(_angle,_x,_y,_z);
    }
    static unsafe void Test_Rotatex_3887() {
        System.Int32 _angle = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Rotatex(_angle,_x,_y,_z);
    }
    static unsafe void Test_SampleCoverage_3888() {
        System.Single _value = default(System.Single);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES11.GL.SampleCoverage(_value,_invert);
    }
    static unsafe void Test_SampleCoveragex_3889() {
        System.Int32 _value = default(System.Int32);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES11.GL.SampleCoveragex(_value,_invert);
    }
    static unsafe void Test_Scale_3890() {
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES11.GL.Scale(_x,_y,_z);
    }
    static unsafe void Test_Scalex_3891() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Scalex(_x,_y,_z);
    }
    static unsafe void Test_Scissor_3892() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Scissor(_x,_y,_width,_height);
    }
    static unsafe void Test_ShadeModel_3893() {
        OpenTK.Graphics.ES11.All _mode = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.ShadeModel(_mode);
    }
    static unsafe void Test_StartTilingQCOM_3894() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES11.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StartTilingQCOM_3895() {
        System.UInt32 _x = default(System.UInt32);
        System.UInt32 _y = default(System.UInt32);
        System.UInt32 _width = default(System.UInt32);
        System.UInt32 _height = default(System.UInt32);
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StencilFunc_3896() {
        OpenTK.Graphics.ES11.All _func = default(OpenTK.Graphics.ES11.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES11.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFunc_3897() {
        OpenTK.Graphics.ES11.All _func = default(OpenTK.Graphics.ES11.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilMask_3898() {
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES11.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMask_3899() {
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES11.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilOp_3900() {
        OpenTK.Graphics.ES11.All _fail = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _zfail = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _zpass = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.GL.StencilOp(_fail,_zfail,_zpass);
    }
    static unsafe void Test_TexCoordPointer_3901() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.TexCoordPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3902() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES11.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3903() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES11.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3904() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES11.GL.TexCoordPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_TexCoordPointer_3905() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES11.GL.TexCoordPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_TexEnv_3906() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_param);
    }
    static unsafe void Test_TexEnv_3907() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3908() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3909() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_param);
    }
    static unsafe void Test_TexEnv_3910() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnv_3911() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.TexEnv(_target,_pname,_params);
    }
    static unsafe void Test_TexEnvx_3912() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.TexEnvx(_target,_pname,_param);
    }
    static unsafe void Test_TexEnvx_3913() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.TexEnvx(_target,_pname,_params);
    }
    static unsafe void Test_TexEnvx_3914() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.TexEnvx(_target,_pname,_params);
    }
    static unsafe void Test_TexImage2D_3915() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.TexImage2D(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3916() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES11.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3917() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES11.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3918() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES11.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_3919() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES11.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexParameter_3920() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_3921() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3922() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3923() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_3924() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_3925() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameterx_3926() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES11.GL.TexParameterx(_target,_pname,_param);
    }
    static unsafe void Test_TexParameterx_3927() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES11.GL.TexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_TexParameterx_3928() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _pname = default(OpenTK.Graphics.ES11.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES11.GL.TexParameterx(_target,_pname,_params);
    }
    static unsafe void Test_TexSubImage2D_3929() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.TexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3930() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES11.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3931() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES11.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3932() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES11.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_3933() {
        OpenTK.Graphics.ES11.All _target = default(OpenTK.Graphics.ES11.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.All _format = default(OpenTK.Graphics.ES11.All);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES11.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_Translate_3934() {
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES11.GL.Translate(_x,_y,_z);
    }
    static unsafe void Test_Translatex_3935() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Translatex(_x,_y,_z);
    }
    static unsafe void Test_VertexPointer_3936() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES11.GL.VertexPointer(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3937() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES11.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3938() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES11.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3939() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES11.GL.VertexPointer<int>(_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexPointer_3940() {
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES11.All _type = default(OpenTK.Graphics.ES11.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES11.GL.VertexPointer<int>(_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_Viewport_3941() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES11.GL.Viewport(_x,_y,_width,_height);
    }
    static void Test_ActiveAttribType_3942() {
        var _Float = OpenTK.Graphics.ES20.ActiveAttribType.Float;
        var _FloatVec2 = OpenTK.Graphics.ES20.ActiveAttribType.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES20.ActiveAttribType.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES20.ActiveAttribType.FloatVec4;
        var _FloatMat2 = OpenTK.Graphics.ES20.ActiveAttribType.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES20.ActiveAttribType.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES20.ActiveAttribType.FloatMat4;
    }
    static void Test_ActiveUniformType_3943() {
        var _Int = OpenTK.Graphics.ES20.ActiveUniformType.Int;
        var _Float = OpenTK.Graphics.ES20.ActiveUniformType.Float;
        var _FloatVec2 = OpenTK.Graphics.ES20.ActiveUniformType.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES20.ActiveUniformType.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES20.ActiveUniformType.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES20.ActiveUniformType.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES20.ActiveUniformType.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES20.ActiveUniformType.IntVec4;
        var _Bool = OpenTK.Graphics.ES20.ActiveUniformType.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES20.ActiveUniformType.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES20.ActiveUniformType.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES20.ActiveUniformType.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES20.ActiveUniformType.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES20.ActiveUniformType.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES20.ActiveUniformType.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES20.ActiveUniformType.Sampler2D;
        var _SamplerCube = OpenTK.Graphics.ES20.ActiveUniformType.SamplerCube;
    }
    static void Test_All_3944() {
        var _False = OpenTK.Graphics.ES20.All.False;
        var _NoError = OpenTK.Graphics.ES20.All.NoError;
        var _None = OpenTK.Graphics.ES20.All.None;
        var _Zero = OpenTK.Graphics.ES20.All.Zero;
        var _Points = OpenTK.Graphics.ES20.All.Points;
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES20.All.ColorBufferBit7Qcom;
        var _DepthBufferBit = OpenTK.Graphics.ES20.All.DepthBufferBit;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit2Qcom;
        var _StencilBufferBit = OpenTK.Graphics.ES20.All.StencilBufferBit;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit5Qcom;
        var _ColorBufferBit = OpenTK.Graphics.ES20.All.ColorBufferBit;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES20.All.DepthBufferBit7Qcom;
        var _Lines = OpenTK.Graphics.ES20.All.Lines;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit0Qcom;
        var _LineLoop = OpenTK.Graphics.ES20.All.LineLoop;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit1Qcom;
        var _LineStrip = OpenTK.Graphics.ES20.All.LineStrip;
        var _Triangles = OpenTK.Graphics.ES20.All.Triangles;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit2Qcom;
        var _TriangleStrip = OpenTK.Graphics.ES20.All.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES20.All.TriangleFan;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES20.All.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit0Qcom;
        var _Never = OpenTK.Graphics.ES20.All.Never;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit1Qcom;
        var _Less = OpenTK.Graphics.ES20.All.Less;
        var _Equal = OpenTK.Graphics.ES20.All.Equal;
        var _Lequal = OpenTK.Graphics.ES20.All.Lequal;
        var _Greater = OpenTK.Graphics.ES20.All.Greater;
        var _Notequal = OpenTK.Graphics.ES20.All.Notequal;
        var _Gequal = OpenTK.Graphics.ES20.All.Gequal;
        var _Always = OpenTK.Graphics.ES20.All.Always;
        var _SrcColor = OpenTK.Graphics.ES20.All.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES20.All.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES20.All.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES20.All.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES20.All.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES20.All.OneMinusDstAlpha;
        var _DstColor = OpenTK.Graphics.ES20.All.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES20.All.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES20.All.SrcAlphaSaturate;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit2Qcom;
        var _Front = OpenTK.Graphics.ES20.All.Front;
        var _Back = OpenTK.Graphics.ES20.All.Back;
        var _FrontAndBack = OpenTK.Graphics.ES20.All.FrontAndBack;
        var _InvalidEnum = OpenTK.Graphics.ES20.All.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES20.All.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES20.All.InvalidOperation;
        var _OutOfMemory = OpenTK.Graphics.ES20.All.OutOfMemory;
        var _InvalidFramebufferOperation = OpenTK.Graphics.ES20.All.InvalidFramebufferOperation;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit3Qcom;
        var _Cw = OpenTK.Graphics.ES20.All.Cw;
        var _Ccw = OpenTK.Graphics.ES20.All.Ccw;
        var _LineWidth = OpenTK.Graphics.ES20.All.LineWidth;
        var _CullFace = OpenTK.Graphics.ES20.All.CullFace;
        var _CullFaceMode = OpenTK.Graphics.ES20.All.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES20.All.FrontFace;
        var _DepthRange = OpenTK.Graphics.ES20.All.DepthRange;
        var _DepthTest = OpenTK.Graphics.ES20.All.DepthTest;
        var _DepthWritemask = OpenTK.Graphics.ES20.All.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES20.All.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES20.All.DepthFunc;
        var _StencilTest = OpenTK.Graphics.ES20.All.StencilTest;
        var _StencilClearValue = OpenTK.Graphics.ES20.All.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES20.All.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES20.All.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES20.All.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES20.All.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES20.All.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES20.All.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES20.All.StencilWritemask;
        var _Viewport = OpenTK.Graphics.ES20.All.Viewport;
        var _Dither = OpenTK.Graphics.ES20.All.Dither;
        var _Blend = OpenTK.Graphics.ES20.All.Blend;
        var _ScissorBox = OpenTK.Graphics.ES20.All.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES20.All.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES20.All.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES20.All.ColorWritemask;
        var _UnpackAlignment = OpenTK.Graphics.ES20.All.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES20.All.PackAlignment;
        var _MaxTextureSize = OpenTK.Graphics.ES20.All.MaxTextureSize;
        var _MaxViewportDims = OpenTK.Graphics.ES20.All.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES20.All.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES20.All.RedBits;
        var _GreenBits = OpenTK.Graphics.ES20.All.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES20.All.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES20.All.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES20.All.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES20.All.StencilBits;
        var _Texture2D = OpenTK.Graphics.ES20.All.Texture2D;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit4Qcom;
        var _DontCare = OpenTK.Graphics.ES20.All.DontCare;
        var _Fastest = OpenTK.Graphics.ES20.All.Fastest;
        var _Nicest = OpenTK.Graphics.ES20.All.Nicest;
        var _Byte = OpenTK.Graphics.ES20.All.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES20.All.UnsignedByte;
        var _Short = OpenTK.Graphics.ES20.All.Short;
        var _UnsignedShort = OpenTK.Graphics.ES20.All.UnsignedShort;
        var _Int = OpenTK.Graphics.ES20.All.Int;
        var _UnsignedInt = OpenTK.Graphics.ES20.All.UnsignedInt;
        var _Float = OpenTK.Graphics.ES20.All.Float;
        var _Fixed = OpenTK.Graphics.ES20.All.Fixed;
        var _Invert = OpenTK.Graphics.ES20.All.Invert;
        var _Texture = OpenTK.Graphics.ES20.All.Texture;
        var _ColorExt = OpenTK.Graphics.ES20.All.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES20.All.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES20.All.StencilExt;
        var _StencilIndex = OpenTK.Graphics.ES20.All.StencilIndex;
        var _DepthComponent = OpenTK.Graphics.ES20.All.DepthComponent;
        var _Alpha = OpenTK.Graphics.ES20.All.Alpha;
        var _Rgb = OpenTK.Graphics.ES20.All.Rgb;
        var _Rgba = OpenTK.Graphics.ES20.All.Rgba;
        var _Luminance = OpenTK.Graphics.ES20.All.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES20.All.LuminanceAlpha;
        var _Keep = OpenTK.Graphics.ES20.All.Keep;
        var _Replace = OpenTK.Graphics.ES20.All.Replace;
        var _Incr = OpenTK.Graphics.ES20.All.Incr;
        var _Decr = OpenTK.Graphics.ES20.All.Decr;
        var _Vendor = OpenTK.Graphics.ES20.All.Vendor;
        var _Renderer = OpenTK.Graphics.ES20.All.Renderer;
        var _Version = OpenTK.Graphics.ES20.All.Version;
        var _Extensions = OpenTK.Graphics.ES20.All.Extensions;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit5Qcom;
        var _Nearest = OpenTK.Graphics.ES20.All.Nearest;
        var _Linear = OpenTK.Graphics.ES20.All.Linear;
        var _NearestMipmapNearest = OpenTK.Graphics.ES20.All.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES20.All.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES20.All.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES20.All.LinearMipmapLinear;
        var _TextureMagFilter = OpenTK.Graphics.ES20.All.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES20.All.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES20.All.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES20.All.TextureWrapT;
        var _Repeat = OpenTK.Graphics.ES20.All.Repeat;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES20.All.PolygonOffsetUnits;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit6Qcom;
        var _CoverageBufferBitNv = OpenTK.Graphics.ES20.All.CoverageBufferBitNv;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES20.All.MultisampleBufferBit7Qcom;
        var _ConstantColor = OpenTK.Graphics.ES20.All.ConstantColor;
        var _OneMinusConstantColor = OpenTK.Graphics.ES20.All.OneMinusConstantColor;
        var _ConstantAlpha = OpenTK.Graphics.ES20.All.ConstantAlpha;
        var _OneMinusConstantAlpha = OpenTK.Graphics.ES20.All.OneMinusConstantAlpha;
        var _BlendColor = OpenTK.Graphics.ES20.All.BlendColor;
        var _FuncAdd = OpenTK.Graphics.ES20.All.FuncAdd;
        var _MinExt = OpenTK.Graphics.ES20.All.MinExt;
        var _MaxExt = OpenTK.Graphics.ES20.All.MaxExt;
        var _BlendEquation = OpenTK.Graphics.ES20.All.BlendEquation;
        var _FuncSubtract = OpenTK.Graphics.ES20.All.FuncSubtract;
        var _FuncReverseSubtract = OpenTK.Graphics.ES20.All.FuncReverseSubtract;
        var _UnsignedShort4444 = OpenTK.Graphics.ES20.All.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES20.All.UnsignedShort5551;
        var _PolygonOffsetFill = OpenTK.Graphics.ES20.All.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES20.All.PolygonOffsetFactor;
        var _Rgb8Oes = OpenTK.Graphics.ES20.All.Rgb8Oes;
        var _Rgba4 = OpenTK.Graphics.ES20.All.Rgba4;
        var _Rgb5A1 = OpenTK.Graphics.ES20.All.Rgb5A1;
        var _Rgba8Oes = OpenTK.Graphics.ES20.All.Rgba8Oes;
        var _TextureBinding2D = OpenTK.Graphics.ES20.All.TextureBinding2D;
        var _TextureBinding3DOes = OpenTK.Graphics.ES20.All.TextureBinding3DOes;
        var _Texture3DOes = OpenTK.Graphics.ES20.All.Texture3DOes;
        var _TextureWrapROes = OpenTK.Graphics.ES20.All.TextureWrapROes;
        var _Max3DTextureSizeOes = OpenTK.Graphics.ES20.All.Max3DTextureSizeOes;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES20.All.SampleAlphaToCoverage;
        var _SampleCoverage = OpenTK.Graphics.ES20.All.SampleCoverage;
        var _SampleBuffers = OpenTK.Graphics.ES20.All.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES20.All.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES20.All.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES20.All.SampleCoverageInvert;
        var _BlendDstRgb = OpenTK.Graphics.ES20.All.BlendDstRgb;
        var _BlendSrcRgb = OpenTK.Graphics.ES20.All.BlendSrcRgb;
        var _BlendDstAlpha = OpenTK.Graphics.ES20.All.BlendDstAlpha;
        var _BlendSrcAlpha = OpenTK.Graphics.ES20.All.BlendSrcAlpha;
        var _BgraExt = OpenTK.Graphics.ES20.All.BgraExt;
        var _BgraImg = OpenTK.Graphics.ES20.All.BgraImg;
        var _ClampToEdge = OpenTK.Graphics.ES20.All.ClampToEdge;
        var _GenerateMipmapHint = OpenTK.Graphics.ES20.All.GenerateMipmapHint;
        var _DepthComponent16 = OpenTK.Graphics.ES20.All.DepthComponent16;
        var _DepthComponent24Oes = OpenTK.Graphics.ES20.All.DepthComponent24Oes;
        var _DepthComponent32Oes = OpenTK.Graphics.ES20.All.DepthComponent32Oes;
        var _UnsignedShort565 = OpenTK.Graphics.ES20.All.UnsignedShort565;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES20.All.UnsignedShort4444RevExt;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES20.All.UnsignedShort4444RevImg;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES20.All.UnsignedShort1555RevExt;
        var _UnsignedInt2101010RevExt = OpenTK.Graphics.ES20.All.UnsignedInt2101010RevExt;
        var _MirroredRepeat = OpenTK.Graphics.ES20.All.MirroredRepeat;
        var _CompressedRgbS3tcDxt1Ext = OpenTK.Graphics.ES20.All.CompressedRgbS3tcDxt1Ext;
        var _CompressedRgbaS3tcDxt1Ext = OpenTK.Graphics.ES20.All.CompressedRgbaS3tcDxt1Ext;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES20.All.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES20.All.AliasedLineWidthRange;
        var _Texture0 = OpenTK.Graphics.ES20.All.Texture0;
        var _Texture1 = OpenTK.Graphics.ES20.All.Texture1;
        var _Texture2 = OpenTK.Graphics.ES20.All.Texture2;
        var _Texture3 = OpenTK.Graphics.ES20.All.Texture3;
        var _Texture4 = OpenTK.Graphics.ES20.All.Texture4;
        var _Texture5 = OpenTK.Graphics.ES20.All.Texture5;
        var _Texture6 = OpenTK.Graphics.ES20.All.Texture6;
        var _Texture7 = OpenTK.Graphics.ES20.All.Texture7;
        var _Texture8 = OpenTK.Graphics.ES20.All.Texture8;
        var _Texture9 = OpenTK.Graphics.ES20.All.Texture9;
        var _Texture10 = OpenTK.Graphics.ES20.All.Texture10;
        var _Texture11 = OpenTK.Graphics.ES20.All.Texture11;
        var _Texture12 = OpenTK.Graphics.ES20.All.Texture12;
        var _Texture13 = OpenTK.Graphics.ES20.All.Texture13;
        var _Texture14 = OpenTK.Graphics.ES20.All.Texture14;
        var _Texture15 = OpenTK.Graphics.ES20.All.Texture15;
        var _Texture16 = OpenTK.Graphics.ES20.All.Texture16;
        var _Texture17 = OpenTK.Graphics.ES20.All.Texture17;
        var _Texture18 = OpenTK.Graphics.ES20.All.Texture18;
        var _Texture19 = OpenTK.Graphics.ES20.All.Texture19;
        var _Texture20 = OpenTK.Graphics.ES20.All.Texture20;
        var _Texture21 = OpenTK.Graphics.ES20.All.Texture21;
        var _Texture22 = OpenTK.Graphics.ES20.All.Texture22;
        var _Texture23 = OpenTK.Graphics.ES20.All.Texture23;
        var _Texture24 = OpenTK.Graphics.ES20.All.Texture24;
        var _Texture25 = OpenTK.Graphics.ES20.All.Texture25;
        var _Texture26 = OpenTK.Graphics.ES20.All.Texture26;
        var _Texture27 = OpenTK.Graphics.ES20.All.Texture27;
        var _Texture28 = OpenTK.Graphics.ES20.All.Texture28;
        var _Texture29 = OpenTK.Graphics.ES20.All.Texture29;
        var _Texture30 = OpenTK.Graphics.ES20.All.Texture30;
        var _Texture31 = OpenTK.Graphics.ES20.All.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES20.All.ActiveTexture;
        var _MaxRenderbufferSize = OpenTK.Graphics.ES20.All.MaxRenderbufferSize;
        var _AllCompletedNv = OpenTK.Graphics.ES20.All.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES20.All.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES20.All.FenceConditionNv;
        var _DepthStencilOes = OpenTK.Graphics.ES20.All.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES20.All.UnsignedInt248Oes;
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES20.All.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES20.All.MaxTextureMaxAnisotropyExt;
        var _IncrWrap = OpenTK.Graphics.ES20.All.IncrWrap;
        var _DecrWrap = OpenTK.Graphics.ES20.All.DecrWrap;
        var _TextureCubeMap = OpenTK.Graphics.ES20.All.TextureCubeMap;
        var _TextureBindingCubeMap = OpenTK.Graphics.ES20.All.TextureBindingCubeMap;
        var _TextureCubeMapPositiveX = OpenTK.Graphics.ES20.All.TextureCubeMapPositiveX;
        var _TextureCubeMapNegativeX = OpenTK.Graphics.ES20.All.TextureCubeMapNegativeX;
        var _TextureCubeMapPositiveY = OpenTK.Graphics.ES20.All.TextureCubeMapPositiveY;
        var _TextureCubeMapNegativeY = OpenTK.Graphics.ES20.All.TextureCubeMapNegativeY;
        var _TextureCubeMapPositiveZ = OpenTK.Graphics.ES20.All.TextureCubeMapPositiveZ;
        var _TextureCubeMapNegativeZ = OpenTK.Graphics.ES20.All.TextureCubeMapNegativeZ;
        var _MaxCubeMapTextureSize = OpenTK.Graphics.ES20.All.MaxCubeMapTextureSize;
        var _VertexArrayBindingOes = OpenTK.Graphics.ES20.All.VertexArrayBindingOes;
        var _VertexAttribArrayEnabled = OpenTK.Graphics.ES20.All.VertexAttribArrayEnabled;
        var _VertexAttribArraySize = OpenTK.Graphics.ES20.All.VertexAttribArraySize;
        var _VertexAttribArrayStride = OpenTK.Graphics.ES20.All.VertexAttribArrayStride;
        var _VertexAttribArrayType = OpenTK.Graphics.ES20.All.VertexAttribArrayType;
        var _CurrentVertexAttrib = OpenTK.Graphics.ES20.All.CurrentVertexAttrib;
        var _VertexAttribArrayPointer = OpenTK.Graphics.ES20.All.VertexAttribArrayPointer;
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES20.All.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES20.All.CompressedTextureFormats;
        var _Z400BinaryAmd = OpenTK.Graphics.ES20.All.Z400BinaryAmd;
        var _ProgramBinaryLengthOes = OpenTK.Graphics.ES20.All.ProgramBinaryLengthOes;
        var _BufferSize = OpenTK.Graphics.ES20.All.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES20.All.BufferUsage;
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES20.All.AtcRgbaInterpolatedAlphaAmd;
        var _GL_3DcXAmd = OpenTK.Graphics.ES20.All.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES20.All.GL_3DcXyAmd;
        var _NumProgramBinaryFormatsOes = OpenTK.Graphics.ES20.All.NumProgramBinaryFormatsOes;
        var _ProgramBinaryFormatsOes = OpenTK.Graphics.ES20.All.ProgramBinaryFormatsOes;
        var _StencilBackFunc = OpenTK.Graphics.ES20.All.StencilBackFunc;
        var _StencilBackFail = OpenTK.Graphics.ES20.All.StencilBackFail;
        var _StencilBackPassDepthFail = OpenTK.Graphics.ES20.All.StencilBackPassDepthFail;
        var _StencilBackPassDepthPass = OpenTK.Graphics.ES20.All.StencilBackPassDepthPass;
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES20.All.WriteonlyRenderingQcom;
        var _BlendEquationAlpha = OpenTK.Graphics.ES20.All.BlendEquationAlpha;
        var _MaxVertexAttribs = OpenTK.Graphics.ES20.All.MaxVertexAttribs;
        var _VertexAttribArrayNormalized = OpenTK.Graphics.ES20.All.VertexAttribArrayNormalized;
        var _MaxTextureImageUnits = OpenTK.Graphics.ES20.All.MaxTextureImageUnits;
        var _ArrayBuffer = OpenTK.Graphics.ES20.All.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES20.All.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES20.All.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES20.All.ElementArrayBufferBinding;
        var _VertexAttribArrayBufferBinding = OpenTK.Graphics.ES20.All.VertexAttribArrayBufferBinding;
        var _WriteOnlyOes = OpenTK.Graphics.ES20.All.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES20.All.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES20.All.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES20.All.BufferMapPointerOes;
        var _StreamDraw = OpenTK.Graphics.ES20.All.StreamDraw;
        var _StaticDraw = OpenTK.Graphics.ES20.All.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES20.All.DynamicDraw;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES20.All.Depth24Stencil8Oes;
        var _FragmentShader = OpenTK.Graphics.ES20.All.FragmentShader;
        var _VertexShader = OpenTK.Graphics.ES20.All.VertexShader;
        var _MaxVertexTextureImageUnits = OpenTK.Graphics.ES20.All.MaxVertexTextureImageUnits;
        var _MaxCombinedTextureImageUnits = OpenTK.Graphics.ES20.All.MaxCombinedTextureImageUnits;
        var _ShaderType = OpenTK.Graphics.ES20.All.ShaderType;
        var _FloatVec2 = OpenTK.Graphics.ES20.All.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES20.All.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES20.All.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES20.All.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES20.All.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES20.All.IntVec4;
        var _Bool = OpenTK.Graphics.ES20.All.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES20.All.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES20.All.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES20.All.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES20.All.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES20.All.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES20.All.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES20.All.Sampler2D;
        var _Sampler3DOes = OpenTK.Graphics.ES20.All.Sampler3DOes;
        var _SamplerCube = OpenTK.Graphics.ES20.All.SamplerCube;
        var _DeleteStatus = OpenTK.Graphics.ES20.All.DeleteStatus;
        var _CompileStatus = OpenTK.Graphics.ES20.All.CompileStatus;
        var _LinkStatus = OpenTK.Graphics.ES20.All.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES20.All.ValidateStatus;
        var _InfoLogLength = OpenTK.Graphics.ES20.All.InfoLogLength;
        var _AttachedShaders = OpenTK.Graphics.ES20.All.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES20.All.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES20.All.ActiveUniformMaxLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES20.All.ShaderSourceLength;
        var _ActiveAttributes = OpenTK.Graphics.ES20.All.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES20.All.ActiveAttributeMaxLength;
        var _FragmentShaderDerivativeHintOes = OpenTK.Graphics.ES20.All.FragmentShaderDerivativeHintOes;
        var _ShadingLanguageVersion = OpenTK.Graphics.ES20.All.ShadingLanguageVersion;
        var _CurrentProgram = OpenTK.Graphics.ES20.All.CurrentProgram;
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES20.All.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES20.All.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES20.All.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES20.All.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES20.All.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES20.All.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES20.All.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES20.All.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES20.All.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES20.All.Palette8Rgb5A1Oes;
        var _ImplementationColorReadType = OpenTK.Graphics.ES20.All.ImplementationColorReadType;
        var _ImplementationColorReadFormat = OpenTK.Graphics.ES20.All.ImplementationColorReadFormat;
        var _CounterTypeAmd = OpenTK.Graphics.ES20.All.CounterTypeAmd;
        var _CounterRangeAmd = OpenTK.Graphics.ES20.All.CounterRangeAmd;
        var _UnsignedInt64Amd = OpenTK.Graphics.ES20.All.UnsignedInt64Amd;
        var _PercentageAmd = OpenTK.Graphics.ES20.All.PercentageAmd;
        var _PerfmonResultAvailableAmd = OpenTK.Graphics.ES20.All.PerfmonResultAvailableAmd;
        var _PerfmonResultSizeAmd = OpenTK.Graphics.ES20.All.PerfmonResultSizeAmd;
        var _PerfmonResultAmd = OpenTK.Graphics.ES20.All.PerfmonResultAmd;
        var _TextureWidthQcom = OpenTK.Graphics.ES20.All.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES20.All.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES20.All.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES20.All.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES20.All.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES20.All.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES20.All.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES20.All.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES20.All.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES20.All.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES20.All.StateRestore;
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES20.All.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES20.All.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES20.All.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES20.All.CompressedRgbaPvrtc2Bppv1Img;
        var _SgxBinaryImg = OpenTK.Graphics.ES20.All.SgxBinaryImg;
        var _AtcRgbAmd = OpenTK.Graphics.ES20.All.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES20.All.AtcRgbaExplicitAlphaAmd;
        var _StencilBackRef = OpenTK.Graphics.ES20.All.StencilBackRef;
        var _StencilBackValueMask = OpenTK.Graphics.ES20.All.StencilBackValueMask;
        var _StencilBackWritemask = OpenTK.Graphics.ES20.All.StencilBackWritemask;
        var _FramebufferBinding = OpenTK.Graphics.ES20.All.FramebufferBinding;
        var _RenderbufferBinding = OpenTK.Graphics.ES20.All.RenderbufferBinding;
        var _FramebufferAttachmentObjectType = OpenTK.Graphics.ES20.All.FramebufferAttachmentObjectType;
        var _FramebufferAttachmentObjectName = OpenTK.Graphics.ES20.All.FramebufferAttachmentObjectName;
        var _FramebufferAttachmentTextureLevel = OpenTK.Graphics.ES20.All.FramebufferAttachmentTextureLevel;
        var _FramebufferAttachmentTextureCubeMapFace = OpenTK.Graphics.ES20.All.FramebufferAttachmentTextureCubeMapFace;
        var _FramebufferAttachmentTexture3DZoffsetOes = OpenTK.Graphics.ES20.All.FramebufferAttachmentTexture3DZoffsetOes;
        var _FramebufferComplete = OpenTK.Graphics.ES20.All.FramebufferComplete;
        var _FramebufferIncompleteAttachment = OpenTK.Graphics.ES20.All.FramebufferIncompleteAttachment;
        var _FramebufferIncompleteMissingAttachment = OpenTK.Graphics.ES20.All.FramebufferIncompleteMissingAttachment;
        var _FramebufferIncompleteDimensions = OpenTK.Graphics.ES20.All.FramebufferIncompleteDimensions;
        var _FramebufferUnsupported = OpenTK.Graphics.ES20.All.FramebufferUnsupported;
        var _ColorAttachment0 = OpenTK.Graphics.ES20.All.ColorAttachment0;
        var _DepthAttachment = OpenTK.Graphics.ES20.All.DepthAttachment;
        var _StencilAttachment = OpenTK.Graphics.ES20.All.StencilAttachment;
        var _Framebuffer = OpenTK.Graphics.ES20.All.Framebuffer;
        var _Renderbuffer = OpenTK.Graphics.ES20.All.Renderbuffer;
        var _RenderbufferWidth = OpenTK.Graphics.ES20.All.RenderbufferWidth;
        var _RenderbufferHeight = OpenTK.Graphics.ES20.All.RenderbufferHeight;
        var _RenderbufferInternalFormat = OpenTK.Graphics.ES20.All.RenderbufferInternalFormat;
        var _StencilIndex1Oes = OpenTK.Graphics.ES20.All.StencilIndex1Oes;
        var _StencilIndex4Oes = OpenTK.Graphics.ES20.All.StencilIndex4Oes;
        var _StencilIndex8 = OpenTK.Graphics.ES20.All.StencilIndex8;
        var _RenderbufferRedSize = OpenTK.Graphics.ES20.All.RenderbufferRedSize;
        var _RenderbufferGreenSize = OpenTK.Graphics.ES20.All.RenderbufferGreenSize;
        var _RenderbufferBlueSize = OpenTK.Graphics.ES20.All.RenderbufferBlueSize;
        var _RenderbufferAlphaSize = OpenTK.Graphics.ES20.All.RenderbufferAlphaSize;
        var _RenderbufferDepthSize = OpenTK.Graphics.ES20.All.RenderbufferDepthSize;
        var _RenderbufferStencilSize = OpenTK.Graphics.ES20.All.RenderbufferStencilSize;
        var _HalfFloatOes = OpenTK.Graphics.ES20.All.HalfFloatOes;
        var _Rgb565 = OpenTK.Graphics.ES20.All.Rgb565;
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES20.All.Etc1Rgb8Oes;
        var _TextureExternalOes = OpenTK.Graphics.ES20.All.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES20.All.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES20.All.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES20.All.RequiredTextureImageUnitsOes;
        var _LowFloat = OpenTK.Graphics.ES20.All.LowFloat;
        var _MediumFloat = OpenTK.Graphics.ES20.All.MediumFloat;
        var _HighFloat = OpenTK.Graphics.ES20.All.HighFloat;
        var _LowInt = OpenTK.Graphics.ES20.All.LowInt;
        var _MediumInt = OpenTK.Graphics.ES20.All.MediumInt;
        var _HighInt = OpenTK.Graphics.ES20.All.HighInt;
        var _UnsignedInt1010102Oes = OpenTK.Graphics.ES20.All.UnsignedInt1010102Oes;
        var _Int1010102Oes = OpenTK.Graphics.ES20.All.Int1010102Oes;
        var _ShaderBinaryFormats = OpenTK.Graphics.ES20.All.ShaderBinaryFormats;
        var _NumShaderBinaryFormats = OpenTK.Graphics.ES20.All.NumShaderBinaryFormats;
        var _ShaderCompiler = OpenTK.Graphics.ES20.All.ShaderCompiler;
        var _MaxVertexUniformVectors = OpenTK.Graphics.ES20.All.MaxVertexUniformVectors;
        var _MaxVaryingVectors = OpenTK.Graphics.ES20.All.MaxVaryingVectors;
        var _MaxFragmentUniformVectors = OpenTK.Graphics.ES20.All.MaxFragmentUniformVectors;
        var _DepthComponent16NonlinearNv = OpenTK.Graphics.ES20.All.DepthComponent16NonlinearNv;
        var _CoverageComponentNv = OpenTK.Graphics.ES20.All.CoverageComponentNv;
        var _CoverageComponent4Nv = OpenTK.Graphics.ES20.All.CoverageComponent4Nv;
        var _CoverageAttachmentNv = OpenTK.Graphics.ES20.All.CoverageAttachmentNv;
        var _CoverageBuffersNv = OpenTK.Graphics.ES20.All.CoverageBuffersNv;
        var _CoverageSamplesNv = OpenTK.Graphics.ES20.All.CoverageSamplesNv;
        var _CoverageAllFragmentsNv = OpenTK.Graphics.ES20.All.CoverageAllFragmentsNv;
        var _CoverageEdgeFragmentsNv = OpenTK.Graphics.ES20.All.CoverageEdgeFragmentsNv;
        var _CoverageAutomaticNv = OpenTK.Graphics.ES20.All.CoverageAutomaticNv;
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES20.All.PerfmonGlobalModeQcom;
        var _SgxProgramBinaryImg = OpenTK.Graphics.ES20.All.SgxProgramBinaryImg;
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES20.All.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES20.All.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES20.All.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES20.All.TextureSamplesImg;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES20.All.AmdCompressed3DcTexture;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES20.All.AmdCompressedAtcTexture;
        var _AmdPerformanceMonitor = OpenTK.Graphics.ES20.All.AmdPerformanceMonitor;
        var _AmdProgramBinaryZ400 = OpenTK.Graphics.ES20.All.AmdProgramBinaryZ400;
        var _EsVersion20 = OpenTK.Graphics.ES20.All.EsVersion20;
        var _ExtBlendMinmax = OpenTK.Graphics.ES20.All.ExtBlendMinmax;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES20.All.ExtDiscardFramebuffer;
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES20.All.ExtMultiDrawArrays;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES20.All.ExtReadFormatBgra;
        var _ExtTextureCompressionDxt1 = OpenTK.Graphics.ES20.All.ExtTextureCompressionDxt1;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES20.All.ExtTextureFilterAnisotropic;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES20.All.ExtTextureFormatBgra8888;
        var _ExtTextureType2101010Rev = OpenTK.Graphics.ES20.All.ExtTextureType2101010Rev;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES20.All.ImgMultisampledRenderToTexture;
        var _ImgProgramBinary = OpenTK.Graphics.ES20.All.ImgProgramBinary;
        var _ImgReadFormat = OpenTK.Graphics.ES20.All.ImgReadFormat;
        var _ImgShaderBinary = OpenTK.Graphics.ES20.All.ImgShaderBinary;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES20.All.ImgTextureCompressionPvrtc;
        var _NvCoverageSample = OpenTK.Graphics.ES20.All.NvCoverageSample;
        var _NvDepthNonlinear = OpenTK.Graphics.ES20.All.NvDepthNonlinear;
        var _NvFence = OpenTK.Graphics.ES20.All.NvFence;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES20.All.OesCompressedEtc1Rgb8Texture;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES20.All.OesCompressedPalettedTexture;
        var _OesDepth24 = OpenTK.Graphics.ES20.All.OesDepth24;
        var _OesDepth32 = OpenTK.Graphics.ES20.All.OesDepth32;
        var _OesDepthTexture = OpenTK.Graphics.ES20.All.OesDepthTexture;
        var _OesEglImage = OpenTK.Graphics.ES20.All.OesEglImage;
        var _OesEglImageExternal = OpenTK.Graphics.ES20.All.OesEglImageExternal;
        var _OesElementIndexUint = OpenTK.Graphics.ES20.All.OesElementIndexUint;
        var _OesFboRenderMipmap = OpenTK.Graphics.ES20.All.OesFboRenderMipmap;
        var _OesFragmentPrecisionHigh = OpenTK.Graphics.ES20.All.OesFragmentPrecisionHigh;
        var _OesGetProgramBinary = OpenTK.Graphics.ES20.All.OesGetProgramBinary;
        var _OesMapbuffer = OpenTK.Graphics.ES20.All.OesMapbuffer;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES20.All.OesPackedDepthStencil;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES20.All.OesRgb8Rgba8;
        var _OesStandardDerivatives = OpenTK.Graphics.ES20.All.OesStandardDerivatives;
        var _OesStencil1 = OpenTK.Graphics.ES20.All.OesStencil1;
        var _OesStencil4 = OpenTK.Graphics.ES20.All.OesStencil4;
        var _OesTexture3D = OpenTK.Graphics.ES20.All.OesTexture3D;
        var _OesTextureFloat = OpenTK.Graphics.ES20.All.OesTextureFloat;
        var _OesTextureFloatLinear = OpenTK.Graphics.ES20.All.OesTextureFloatLinear;
        var _OesTextureHalfFloat = OpenTK.Graphics.ES20.All.OesTextureHalfFloat;
        var _OesTextureHalfFloatLinear = OpenTK.Graphics.ES20.All.OesTextureHalfFloatLinear;
        var _OesTextureNpot = OpenTK.Graphics.ES20.All.OesTextureNpot;
        var _OesVertexArrayObject = OpenTK.Graphics.ES20.All.OesVertexArrayObject;
        var _OesVertexHalfFloat = OpenTK.Graphics.ES20.All.OesVertexHalfFloat;
        var _OesVertexType1010102 = OpenTK.Graphics.ES20.All.OesVertexType1010102;
        var _One = OpenTK.Graphics.ES20.All.One;
        var _QcomDriverControl = OpenTK.Graphics.ES20.All.QcomDriverControl;
        var _QcomExtendedGet = OpenTK.Graphics.ES20.All.QcomExtendedGet;
        var _QcomExtendedGet2 = OpenTK.Graphics.ES20.All.QcomExtendedGet2;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES20.All.QcomPerfmonGlobalMode;
        var _QcomTiledRendering = OpenTK.Graphics.ES20.All.QcomTiledRendering;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES20.All.QcomWriteonlyRendering;
        var _True = OpenTK.Graphics.ES20.All.True;
    }
    static void Test_Amdcompressed3Dctexture_3945() {
        var _GL_3DcXAmd = OpenTK.Graphics.ES20.Amdcompressed3Dctexture.GL_3DcXAmd;
        var _GL_3DcXyAmd = OpenTK.Graphics.ES20.Amdcompressed3Dctexture.GL_3DcXyAmd;
        var _AmdCompressed3DcTexture = OpenTK.Graphics.ES20.Amdcompressed3Dctexture.AmdCompressed3DcTexture;
    }
    static void Test_AmdcompressedAtctexture_3946() {
        var _AtcRgbaInterpolatedAlphaAmd = OpenTK.Graphics.ES20.AmdcompressedAtctexture.AtcRgbaInterpolatedAlphaAmd;
        var _AtcRgbAmd = OpenTK.Graphics.ES20.AmdcompressedAtctexture.AtcRgbAmd;
        var _AtcRgbaExplicitAlphaAmd = OpenTK.Graphics.ES20.AmdcompressedAtctexture.AtcRgbaExplicitAlphaAmd;
        var _AmdCompressedAtcTexture = OpenTK.Graphics.ES20.AmdcompressedAtctexture.AmdCompressedAtcTexture;
    }
    static void Test_AmdperformanceMonitor_3947() {
        var _CounterTypeAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.CounterTypeAmd;
        var _CounterRangeAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.CounterRangeAmd;
        var _UnsignedInt64Amd = OpenTK.Graphics.ES20.AmdperformanceMonitor.UnsignedInt64Amd;
        var _PercentageAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.PercentageAmd;
        var _PerfmonResultAvailableAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.PerfmonResultAvailableAmd;
        var _PerfmonResultSizeAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.PerfmonResultSizeAmd;
        var _PerfmonResultAmd = OpenTK.Graphics.ES20.AmdperformanceMonitor.PerfmonResultAmd;
        var _AmdPerformanceMonitor = OpenTK.Graphics.ES20.AmdperformanceMonitor.AmdPerformanceMonitor;
    }
    static void Test_AmdprogramBinaryZ400_3948() {
        var _Z400BinaryAmd = OpenTK.Graphics.ES20.AmdprogramBinaryZ400.Z400BinaryAmd;
        var _AmdProgramBinaryZ400 = OpenTK.Graphics.ES20.AmdprogramBinaryZ400.AmdProgramBinaryZ400;
    }
    static void Test_BeginMode_3949() {
        var _Points = OpenTK.Graphics.ES20.BeginMode.Points;
        var _Lines = OpenTK.Graphics.ES20.BeginMode.Lines;
        var _LineLoop = OpenTK.Graphics.ES20.BeginMode.LineLoop;
        var _LineStrip = OpenTK.Graphics.ES20.BeginMode.LineStrip;
        var _Triangles = OpenTK.Graphics.ES20.BeginMode.Triangles;
        var _TriangleStrip = OpenTK.Graphics.ES20.BeginMode.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES20.BeginMode.TriangleFan;
    }
    static void Test_BlendEquationSeparate_3950() {
        var _FuncAdd = OpenTK.Graphics.ES20.BlendEquationSeparate.FuncAdd;
        var _BlendEquation = OpenTK.Graphics.ES20.BlendEquationSeparate.BlendEquation;
        var _BlendEquationAlpha = OpenTK.Graphics.ES20.BlendEquationSeparate.BlendEquationAlpha;
    }
    static void Test_BlendingFactorDest_3951() {
        var _Zero = OpenTK.Graphics.ES20.BlendingFactorDest.Zero;
        var _SrcColor = OpenTK.Graphics.ES20.BlendingFactorDest.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES20.BlendingFactorDest.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES20.BlendingFactorDest.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES20.BlendingFactorDest.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES20.BlendingFactorDest.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES20.BlendingFactorDest.OneMinusDstAlpha;
        var _One = OpenTK.Graphics.ES20.BlendingFactorDest.One;
    }
    static void Test_BlendingFactorSrc_3952() {
        var _DstColor = OpenTK.Graphics.ES20.BlendingFactorSrc.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES20.BlendingFactorSrc.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES20.BlendingFactorSrc.SrcAlphaSaturate;
    }
    static void Test_BlendSubtract_3953() {
        var _FuncSubtract = OpenTK.Graphics.ES20.BlendSubtract.FuncSubtract;
        var _FuncReverseSubtract = OpenTK.Graphics.ES20.BlendSubtract.FuncReverseSubtract;
    }
    static void Test_Boolean_3954() {
        var _False = OpenTK.Graphics.ES20.Boolean.False;
        var _True = OpenTK.Graphics.ES20.Boolean.True;
    }
    static void Test_BufferObjects_3955() {
        var _CurrentVertexAttrib = OpenTK.Graphics.ES20.BufferObjects.CurrentVertexAttrib;
        var _BufferSize = OpenTK.Graphics.ES20.BufferObjects.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES20.BufferObjects.BufferUsage;
        var _ArrayBuffer = OpenTK.Graphics.ES20.BufferObjects.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES20.BufferObjects.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES20.BufferObjects.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES20.BufferObjects.ElementArrayBufferBinding;
        var _StreamDraw = OpenTK.Graphics.ES20.BufferObjects.StreamDraw;
        var _StaticDraw = OpenTK.Graphics.ES20.BufferObjects.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES20.BufferObjects.DynamicDraw;
    }
    static void Test_ClearBufferMask_3956() {
        var _DepthBufferBit = OpenTK.Graphics.ES20.ClearBufferMask.DepthBufferBit;
        var _StencilBufferBit = OpenTK.Graphics.ES20.ClearBufferMask.StencilBufferBit;
        var _ColorBufferBit = OpenTK.Graphics.ES20.ClearBufferMask.ColorBufferBit;
    }
    static void Test_CullFaceMode_3957() {
        var _Front = OpenTK.Graphics.ES20.CullFaceMode.Front;
        var _Back = OpenTK.Graphics.ES20.CullFaceMode.Back;
        var _FrontAndBack = OpenTK.Graphics.ES20.CullFaceMode.FrontAndBack;
    }
    static void Test_DataType_3958() {
        var _Byte = OpenTK.Graphics.ES20.DataType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES20.DataType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES20.DataType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES20.DataType.UnsignedShort;
        var _Int = OpenTK.Graphics.ES20.DataType.Int;
        var _UnsignedInt = OpenTK.Graphics.ES20.DataType.UnsignedInt;
        var _Float = OpenTK.Graphics.ES20.DataType.Float;
        var _Fixed = OpenTK.Graphics.ES20.DataType.Fixed;
    }
    static void Test_DrawElementsType_3959() {
        var _UnsignedByte = OpenTK.Graphics.ES20.DrawElementsType.UnsignedByte;
        var _UnsignedShort = OpenTK.Graphics.ES20.DrawElementsType.UnsignedShort;
    }
    static void Test_EnableCap_3960() {
        var _CullFace = OpenTK.Graphics.ES20.EnableCap.CullFace;
        var _DepthTest = OpenTK.Graphics.ES20.EnableCap.DepthTest;
        var _StencilTest = OpenTK.Graphics.ES20.EnableCap.StencilTest;
        var _Dither = OpenTK.Graphics.ES20.EnableCap.Dither;
        var _Blend = OpenTK.Graphics.ES20.EnableCap.Blend;
        var _ScissorTest = OpenTK.Graphics.ES20.EnableCap.ScissorTest;
        var _Texture2D = OpenTK.Graphics.ES20.EnableCap.Texture2D;
        var _PolygonOffsetFill = OpenTK.Graphics.ES20.EnableCap.PolygonOffsetFill;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES20.EnableCap.SampleAlphaToCoverage;
        var _SampleCoverage = OpenTK.Graphics.ES20.EnableCap.SampleCoverage;
    }
    static void Test_ErrorCode_3961() {
        var _NoError = OpenTK.Graphics.ES20.ErrorCode.NoError;
        var _InvalidEnum = OpenTK.Graphics.ES20.ErrorCode.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES20.ErrorCode.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES20.ErrorCode.InvalidOperation;
        var _OutOfMemory = OpenTK.Graphics.ES20.ErrorCode.OutOfMemory;
    }
    static void Test_ExtblendMinmax_3962() {
        var _MinExt = OpenTK.Graphics.ES20.ExtblendMinmax.MinExt;
        var _MaxExt = OpenTK.Graphics.ES20.ExtblendMinmax.MaxExt;
        var _ExtBlendMinmax = OpenTK.Graphics.ES20.ExtblendMinmax.ExtBlendMinmax;
    }
    static void Test_ExtdiscardFramebuffer_3963() {
        var _ColorExt = OpenTK.Graphics.ES20.ExtdiscardFramebuffer.ColorExt;
        var _DepthExt = OpenTK.Graphics.ES20.ExtdiscardFramebuffer.DepthExt;
        var _StencilExt = OpenTK.Graphics.ES20.ExtdiscardFramebuffer.StencilExt;
        var _ExtDiscardFramebuffer = OpenTK.Graphics.ES20.ExtdiscardFramebuffer.ExtDiscardFramebuffer;
    }
    static void Test_ExtreadFormatBgra_3964() {
        var _BgraExt = OpenTK.Graphics.ES20.ExtreadFormatBgra.BgraExt;
        var _UnsignedShort4444RevExt = OpenTK.Graphics.ES20.ExtreadFormatBgra.UnsignedShort4444RevExt;
        var _UnsignedShort1555RevExt = OpenTK.Graphics.ES20.ExtreadFormatBgra.UnsignedShort1555RevExt;
        var _ExtReadFormatBgra = OpenTK.Graphics.ES20.ExtreadFormatBgra.ExtReadFormatBgra;
    }
    static void Test_ExttextureCompressionDxt1_3965() {
        var _CompressedRgbS3tcDxt1Ext = OpenTK.Graphics.ES20.ExttextureCompressionDxt1.CompressedRgbS3tcDxt1Ext;
        var _CompressedRgbaS3tcDxt1Ext = OpenTK.Graphics.ES20.ExttextureCompressionDxt1.CompressedRgbaS3tcDxt1Ext;
        var _ExtTextureCompressionDxt1 = OpenTK.Graphics.ES20.ExttextureCompressionDxt1.ExtTextureCompressionDxt1;
    }
    static void Test_ExttextureFilterAnisotropic_3966() {
        var _TextureMaxAnisotropyExt = OpenTK.Graphics.ES20.ExttextureFilterAnisotropic.TextureMaxAnisotropyExt;
        var _MaxTextureMaxAnisotropyExt = OpenTK.Graphics.ES20.ExttextureFilterAnisotropic.MaxTextureMaxAnisotropyExt;
        var _ExtTextureFilterAnisotropic = OpenTK.Graphics.ES20.ExttextureFilterAnisotropic.ExtTextureFilterAnisotropic;
    }
    static void Test_ExttextureFormatBgra8888_3967() {
        var _BgraExt = OpenTK.Graphics.ES20.ExttextureFormatBgra8888.BgraExt;
        var _ExtTextureFormatBgra8888 = OpenTK.Graphics.ES20.ExttextureFormatBgra8888.ExtTextureFormatBgra8888;
    }
    static void Test_ExttextureType2101010Rev_3968() {
        var _UnsignedInt2101010RevExt = OpenTK.Graphics.ES20.ExttextureType2101010Rev.UnsignedInt2101010RevExt;
        var _ExtTextureType2101010Rev = OpenTK.Graphics.ES20.ExttextureType2101010Rev.ExtTextureType2101010Rev;
    }
    static void Test_FramebufferObject_3969() {
        var _None = OpenTK.Graphics.ES20.FramebufferObject.None;
        var _InvalidFramebufferOperation = OpenTK.Graphics.ES20.FramebufferObject.InvalidFramebufferOperation;
        var _StencilIndex = OpenTK.Graphics.ES20.FramebufferObject.StencilIndex;
        var _Rgba4 = OpenTK.Graphics.ES20.FramebufferObject.Rgba4;
        var _Rgb5A1 = OpenTK.Graphics.ES20.FramebufferObject.Rgb5A1;
        var _DepthComponent16 = OpenTK.Graphics.ES20.FramebufferObject.DepthComponent16;
        var _MaxRenderbufferSize = OpenTK.Graphics.ES20.FramebufferObject.MaxRenderbufferSize;
        var _FramebufferBinding = OpenTK.Graphics.ES20.FramebufferObject.FramebufferBinding;
        var _RenderbufferBinding = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferBinding;
        var _FramebufferAttachmentObjectType = OpenTK.Graphics.ES20.FramebufferObject.FramebufferAttachmentObjectType;
        var _FramebufferAttachmentObjectName = OpenTK.Graphics.ES20.FramebufferObject.FramebufferAttachmentObjectName;
        var _FramebufferAttachmentTextureLevel = OpenTK.Graphics.ES20.FramebufferObject.FramebufferAttachmentTextureLevel;
        var _FramebufferAttachmentTextureCubeMapFace = OpenTK.Graphics.ES20.FramebufferObject.FramebufferAttachmentTextureCubeMapFace;
        var _FramebufferComplete = OpenTK.Graphics.ES20.FramebufferObject.FramebufferComplete;
        var _FramebufferIncompleteAttachment = OpenTK.Graphics.ES20.FramebufferObject.FramebufferIncompleteAttachment;
        var _FramebufferIncompleteMissingAttachment = OpenTK.Graphics.ES20.FramebufferObject.FramebufferIncompleteMissingAttachment;
        var _FramebufferIncompleteDimensions = OpenTK.Graphics.ES20.FramebufferObject.FramebufferIncompleteDimensions;
        var _FramebufferUnsupported = OpenTK.Graphics.ES20.FramebufferObject.FramebufferUnsupported;
        var _ColorAttachment0 = OpenTK.Graphics.ES20.FramebufferObject.ColorAttachment0;
        var _DepthAttachment = OpenTK.Graphics.ES20.FramebufferObject.DepthAttachment;
        var _StencilAttachment = OpenTK.Graphics.ES20.FramebufferObject.StencilAttachment;
        var _Framebuffer = OpenTK.Graphics.ES20.FramebufferObject.Framebuffer;
        var _Renderbuffer = OpenTK.Graphics.ES20.FramebufferObject.Renderbuffer;
        var _RenderbufferWidth = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferWidth;
        var _RenderbufferHeight = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferHeight;
        var _RenderbufferInternalFormat = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferInternalFormat;
        var _StencilIndex8 = OpenTK.Graphics.ES20.FramebufferObject.StencilIndex8;
        var _RenderbufferRedSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferRedSize;
        var _RenderbufferGreenSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferGreenSize;
        var _RenderbufferBlueSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferBlueSize;
        var _RenderbufferAlphaSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferAlphaSize;
        var _RenderbufferDepthSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferDepthSize;
        var _RenderbufferStencilSize = OpenTK.Graphics.ES20.FramebufferObject.RenderbufferStencilSize;
        var _Rgb565 = OpenTK.Graphics.ES20.FramebufferObject.Rgb565;
    }
    static void Test_FrontFaceDirection_3970() {
        var _Cw = OpenTK.Graphics.ES20.FrontFaceDirection.Cw;
        var _Ccw = OpenTK.Graphics.ES20.FrontFaceDirection.Ccw;
    }
    static void Test_GetPName_3971() {
        var _LineWidth = OpenTK.Graphics.ES20.GetPName.LineWidth;
        var _CullFaceMode = OpenTK.Graphics.ES20.GetPName.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES20.GetPName.FrontFace;
        var _DepthRange = OpenTK.Graphics.ES20.GetPName.DepthRange;
        var _DepthWritemask = OpenTK.Graphics.ES20.GetPName.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES20.GetPName.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES20.GetPName.DepthFunc;
        var _StencilClearValue = OpenTK.Graphics.ES20.GetPName.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES20.GetPName.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES20.GetPName.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES20.GetPName.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES20.GetPName.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES20.GetPName.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES20.GetPName.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES20.GetPName.StencilWritemask;
        var _Viewport = OpenTK.Graphics.ES20.GetPName.Viewport;
        var _ScissorBox = OpenTK.Graphics.ES20.GetPName.ScissorBox;
        var _ColorClearValue = OpenTK.Graphics.ES20.GetPName.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES20.GetPName.ColorWritemask;
        var _UnpackAlignment = OpenTK.Graphics.ES20.GetPName.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES20.GetPName.PackAlignment;
        var _MaxTextureSize = OpenTK.Graphics.ES20.GetPName.MaxTextureSize;
        var _MaxViewportDims = OpenTK.Graphics.ES20.GetPName.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES20.GetPName.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES20.GetPName.RedBits;
        var _GreenBits = OpenTK.Graphics.ES20.GetPName.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES20.GetPName.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES20.GetPName.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES20.GetPName.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES20.GetPName.StencilBits;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES20.GetPName.PolygonOffsetUnits;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES20.GetPName.PolygonOffsetFactor;
        var _TextureBinding2D = OpenTK.Graphics.ES20.GetPName.TextureBinding2D;
        var _SampleBuffers = OpenTK.Graphics.ES20.GetPName.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES20.GetPName.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES20.GetPName.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES20.GetPName.SampleCoverageInvert;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES20.GetPName.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES20.GetPName.AliasedLineWidthRange;
        var _StencilBackFunc = OpenTK.Graphics.ES20.GetPName.StencilBackFunc;
        var _StencilBackFail = OpenTK.Graphics.ES20.GetPName.StencilBackFail;
        var _StencilBackPassDepthFail = OpenTK.Graphics.ES20.GetPName.StencilBackPassDepthFail;
        var _StencilBackPassDepthPass = OpenTK.Graphics.ES20.GetPName.StencilBackPassDepthPass;
        var _StencilBackRef = OpenTK.Graphics.ES20.GetPName.StencilBackRef;
        var _StencilBackValueMask = OpenTK.Graphics.ES20.GetPName.StencilBackValueMask;
        var _StencilBackWritemask = OpenTK.Graphics.ES20.GetPName.StencilBackWritemask;
    }
    static void Test_GetTextureParameter_3972() {
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES20.GetTextureParameter.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES20.GetTextureParameter.CompressedTextureFormats;
    }
    static void Test_HintMode_3973() {
        var _DontCare = OpenTK.Graphics.ES20.HintMode.DontCare;
        var _Fastest = OpenTK.Graphics.ES20.HintMode.Fastest;
        var _Nicest = OpenTK.Graphics.ES20.HintMode.Nicest;
    }
    static void Test_HintTarget_3974() {
        var _GenerateMipmapHint = OpenTK.Graphics.ES20.HintTarget.GenerateMipmapHint;
    }
    static void Test_ImgmultisampledRenderToTexture_3975() {
        var _RenderbufferSamplesImg = OpenTK.Graphics.ES20.ImgmultisampledRenderToTexture.RenderbufferSamplesImg;
        var _FramebufferIncompleteMultisampleImg = OpenTK.Graphics.ES20.ImgmultisampledRenderToTexture.FramebufferIncompleteMultisampleImg;
        var _MaxSamplesImg = OpenTK.Graphics.ES20.ImgmultisampledRenderToTexture.MaxSamplesImg;
        var _TextureSamplesImg = OpenTK.Graphics.ES20.ImgmultisampledRenderToTexture.TextureSamplesImg;
        var _ImgMultisampledRenderToTexture = OpenTK.Graphics.ES20.ImgmultisampledRenderToTexture.ImgMultisampledRenderToTexture;
    }
    static void Test_ImgprogramBinary_3976() {
        var _SgxProgramBinaryImg = OpenTK.Graphics.ES20.ImgprogramBinary.SgxProgramBinaryImg;
        var _ImgProgramBinary = OpenTK.Graphics.ES20.ImgprogramBinary.ImgProgramBinary;
    }
    static void Test_ImgreadFormat_3977() {
        var _BgraImg = OpenTK.Graphics.ES20.ImgreadFormat.BgraImg;
        var _UnsignedShort4444RevImg = OpenTK.Graphics.ES20.ImgreadFormat.UnsignedShort4444RevImg;
        var _ImgReadFormat = OpenTK.Graphics.ES20.ImgreadFormat.ImgReadFormat;
    }
    static void Test_ImgshaderBinary_3978() {
        var _SgxBinaryImg = OpenTK.Graphics.ES20.ImgshaderBinary.SgxBinaryImg;
        var _ImgShaderBinary = OpenTK.Graphics.ES20.ImgshaderBinary.ImgShaderBinary;
    }
    static void Test_ImgtextureCompressionPvrtc_3979() {
        var _CompressedRgbPvrtc4Bppv1Img = OpenTK.Graphics.ES20.ImgtextureCompressionPvrtc.CompressedRgbPvrtc4Bppv1Img;
        var _CompressedRgbPvrtc2Bppv1Img = OpenTK.Graphics.ES20.ImgtextureCompressionPvrtc.CompressedRgbPvrtc2Bppv1Img;
        var _CompressedRgbaPvrtc4Bppv1Img = OpenTK.Graphics.ES20.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc4Bppv1Img;
        var _CompressedRgbaPvrtc2Bppv1Img = OpenTK.Graphics.ES20.ImgtextureCompressionPvrtc.CompressedRgbaPvrtc2Bppv1Img;
        var _ImgTextureCompressionPvrtc = OpenTK.Graphics.ES20.ImgtextureCompressionPvrtc.ImgTextureCompressionPvrtc;
    }
    static void Test_NvcoverageSample_3980() {
        var _CoverageBufferBitNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageBufferBitNv;
        var _CoverageComponentNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageComponentNv;
        var _CoverageComponent4Nv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageComponent4Nv;
        var _CoverageAttachmentNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageAttachmentNv;
        var _CoverageBuffersNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageBuffersNv;
        var _CoverageSamplesNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageSamplesNv;
        var _CoverageAllFragmentsNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageAllFragmentsNv;
        var _CoverageEdgeFragmentsNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageEdgeFragmentsNv;
        var _CoverageAutomaticNv = OpenTK.Graphics.ES20.NvcoverageSample.CoverageAutomaticNv;
        var _NvCoverageSample = OpenTK.Graphics.ES20.NvcoverageSample.NvCoverageSample;
    }
    static void Test_NvdepthNonlinear_3981() {
        var _DepthComponent16NonlinearNv = OpenTK.Graphics.ES20.NvdepthNonlinear.DepthComponent16NonlinearNv;
        var _NvDepthNonlinear = OpenTK.Graphics.ES20.NvdepthNonlinear.NvDepthNonlinear;
    }
    static void Test_Nvfence_3982() {
        var _AllCompletedNv = OpenTK.Graphics.ES20.Nvfence.AllCompletedNv;
        var _FenceStatusNv = OpenTK.Graphics.ES20.Nvfence.FenceStatusNv;
        var _FenceConditionNv = OpenTK.Graphics.ES20.Nvfence.FenceConditionNv;
        var _NvFence = OpenTK.Graphics.ES20.Nvfence.NvFence;
    }
    static void Test_OescompressedEtc1Rgb8Texture_3983() {
        var _Etc1Rgb8Oes = OpenTK.Graphics.ES20.OescompressedEtc1Rgb8Texture.Etc1Rgb8Oes;
        var _OesCompressedEtc1Rgb8Texture = OpenTK.Graphics.ES20.OescompressedEtc1Rgb8Texture.OesCompressedEtc1Rgb8Texture;
    }
    static void Test_OescompressedPalettedTexture_3984() {
        var _Palette4Rgb8Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette4Rgb8Oes;
        var _Palette4Rgba8Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette4Rgba8Oes;
        var _Palette4R5G6B5Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette4R5G6B5Oes;
        var _Palette4Rgba4Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette4Rgba4Oes;
        var _Palette4Rgb5A1Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette4Rgb5A1Oes;
        var _Palette8Rgb8Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette8Rgb8Oes;
        var _Palette8Rgba8Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette8Rgba8Oes;
        var _Palette8R5G6B5Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette8R5G6B5Oes;
        var _Palette8Rgba4Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette8Rgba4Oes;
        var _Palette8Rgb5A1Oes = OpenTK.Graphics.ES20.OescompressedPalettedTexture.Palette8Rgb5A1Oes;
        var _OesCompressedPalettedTexture = OpenTK.Graphics.ES20.OescompressedPalettedTexture.OesCompressedPalettedTexture;
    }
    static void Test_Oesdepth24_3985() {
        var _DepthComponent24Oes = OpenTK.Graphics.ES20.Oesdepth24.DepthComponent24Oes;
        var _OesDepth24 = OpenTK.Graphics.ES20.Oesdepth24.OesDepth24;
    }
    static void Test_Oesdepth32_3986() {
        var _DepthComponent32Oes = OpenTK.Graphics.ES20.Oesdepth32.DepthComponent32Oes;
        var _OesDepth32 = OpenTK.Graphics.ES20.Oesdepth32.OesDepth32;
    }
    static void Test_OesdepthTexture_3987() {
        var _OesDepthTexture = OpenTK.Graphics.ES20.OesdepthTexture.OesDepthTexture;
    }
    static void Test_Oeseglimage_3988() {
        var _OesEglImage = OpenTK.Graphics.ES20.Oeseglimage.OesEglImage;
    }
    static void Test_OeseglimageExternal_3989() {
        var _TextureExternalOes = OpenTK.Graphics.ES20.OeseglimageExternal.TextureExternalOes;
        var _SamplerExternalOes = OpenTK.Graphics.ES20.OeseglimageExternal.SamplerExternalOes;
        var _TextureBindingExternalOes = OpenTK.Graphics.ES20.OeseglimageExternal.TextureBindingExternalOes;
        var _RequiredTextureImageUnitsOes = OpenTK.Graphics.ES20.OeseglimageExternal.RequiredTextureImageUnitsOes;
        var _OesEglImageExternal = OpenTK.Graphics.ES20.OeseglimageExternal.OesEglImageExternal;
    }
    static void Test_OeselementIndexUint_3990() {
        var _UnsignedInt = OpenTK.Graphics.ES20.OeselementIndexUint.UnsignedInt;
        var _OesElementIndexUint = OpenTK.Graphics.ES20.OeselementIndexUint.OesElementIndexUint;
    }
    static void Test_OesfboRenderMipmap_3991() {
        var _OesFboRenderMipmap = OpenTK.Graphics.ES20.OesfboRenderMipmap.OesFboRenderMipmap;
    }
    static void Test_OesfragmentPrecisionHigh_3992() {
        var _OesFragmentPrecisionHigh = OpenTK.Graphics.ES20.OesfragmentPrecisionHigh.OesFragmentPrecisionHigh;
    }
    static void Test_OesgetProgramBinary_3993() {
        var _ProgramBinaryLengthOes = OpenTK.Graphics.ES20.OesgetProgramBinary.ProgramBinaryLengthOes;
        var _NumProgramBinaryFormatsOes = OpenTK.Graphics.ES20.OesgetProgramBinary.NumProgramBinaryFormatsOes;
        var _ProgramBinaryFormatsOes = OpenTK.Graphics.ES20.OesgetProgramBinary.ProgramBinaryFormatsOes;
        var _OesGetProgramBinary = OpenTK.Graphics.ES20.OesgetProgramBinary.OesGetProgramBinary;
    }
    static void Test_Oesmapbuffer_3994() {
        var _WriteOnlyOes = OpenTK.Graphics.ES20.Oesmapbuffer.WriteOnlyOes;
        var _BufferAccessOes = OpenTK.Graphics.ES20.Oesmapbuffer.BufferAccessOes;
        var _BufferMappedOes = OpenTK.Graphics.ES20.Oesmapbuffer.BufferMappedOes;
        var _BufferMapPointerOes = OpenTK.Graphics.ES20.Oesmapbuffer.BufferMapPointerOes;
        var _OesMapbuffer = OpenTK.Graphics.ES20.Oesmapbuffer.OesMapbuffer;
    }
    static void Test_OespackedDepthStencil_3995() {
        var _DepthStencilOes = OpenTK.Graphics.ES20.OespackedDepthStencil.DepthStencilOes;
        var _UnsignedInt248Oes = OpenTK.Graphics.ES20.OespackedDepthStencil.UnsignedInt248Oes;
        var _Depth24Stencil8Oes = OpenTK.Graphics.ES20.OespackedDepthStencil.Depth24Stencil8Oes;
        var _OesPackedDepthStencil = OpenTK.Graphics.ES20.OespackedDepthStencil.OesPackedDepthStencil;
    }
    static void Test_Oesrgb8Rgba8_3996() {
        var _Rgb8Oes = OpenTK.Graphics.ES20.Oesrgb8Rgba8.Rgb8Oes;
        var _Rgba8Oes = OpenTK.Graphics.ES20.Oesrgb8Rgba8.Rgba8Oes;
        var _OesRgb8Rgba8 = OpenTK.Graphics.ES20.Oesrgb8Rgba8.OesRgb8Rgba8;
    }
    static void Test_OesstandardDerivatives_3997() {
        var _FragmentShaderDerivativeHintOes = OpenTK.Graphics.ES20.OesstandardDerivatives.FragmentShaderDerivativeHintOes;
        var _OesStandardDerivatives = OpenTK.Graphics.ES20.OesstandardDerivatives.OesStandardDerivatives;
    }
    static void Test_Oesstencil1_3998() {
        var _StencilIndex1Oes = OpenTK.Graphics.ES20.Oesstencil1.StencilIndex1Oes;
        var _OesStencil1 = OpenTK.Graphics.ES20.Oesstencil1.OesStencil1;
    }
    static void Test_Oesstencil4_3999() {
        var _StencilIndex4Oes = OpenTK.Graphics.ES20.Oesstencil4.StencilIndex4Oes;
        var _OesStencil4 = OpenTK.Graphics.ES20.Oesstencil4.OesStencil4;
    }
    static void Test_Oestexture3D_4000() {
        var _TextureBinding3DOes = OpenTK.Graphics.ES20.Oestexture3D.TextureBinding3DOes;
        var _Texture3DOes = OpenTK.Graphics.ES20.Oestexture3D.Texture3DOes;
        var _TextureWrapROes = OpenTK.Graphics.ES20.Oestexture3D.TextureWrapROes;
        var _Max3DTextureSizeOes = OpenTK.Graphics.ES20.Oestexture3D.Max3DTextureSizeOes;
        var _Sampler3DOes = OpenTK.Graphics.ES20.Oestexture3D.Sampler3DOes;
        var _FramebufferAttachmentTexture3DZoffsetOes = OpenTK.Graphics.ES20.Oestexture3D.FramebufferAttachmentTexture3DZoffsetOes;
        var _OesTexture3D = OpenTK.Graphics.ES20.Oestexture3D.OesTexture3D;
    }
    static void Test_OestextureFloat_4001() {
        var _OesTextureFloat = OpenTK.Graphics.ES20.OestextureFloat.OesTextureFloat;
    }
    static void Test_OestextureFloatLinear_4002() {
        var _OesTextureFloatLinear = OpenTK.Graphics.ES20.OestextureFloatLinear.OesTextureFloatLinear;
    }
    static void Test_OestextureHalfFloat_4003() {
        var _HalfFloatOes = OpenTK.Graphics.ES20.OestextureHalfFloat.HalfFloatOes;
        var _OesTextureHalfFloat = OpenTK.Graphics.ES20.OestextureHalfFloat.OesTextureHalfFloat;
    }
    static void Test_OestextureHalfFloatLinear_4004() {
        var _OesTextureHalfFloatLinear = OpenTK.Graphics.ES20.OestextureHalfFloatLinear.OesTextureHalfFloatLinear;
    }
    static void Test_OestextureNpot_4005() {
        var _OesTextureNpot = OpenTK.Graphics.ES20.OestextureNpot.OesTextureNpot;
    }
    static void Test_OesvertexArrayObject_4006() {
        var _VertexArrayBindingOes = OpenTK.Graphics.ES20.OesvertexArrayObject.VertexArrayBindingOes;
        var _OesVertexArrayObject = OpenTK.Graphics.ES20.OesvertexArrayObject.OesVertexArrayObject;
    }
    static void Test_OesvertexHalfFloat_4007() {
        var _OesVertexHalfFloat = OpenTK.Graphics.ES20.OesvertexHalfFloat.OesVertexHalfFloat;
    }
    static void Test_OesvertexType1010102_4008() {
        var _UnsignedInt1010102Oes = OpenTK.Graphics.ES20.OesvertexType1010102.UnsignedInt1010102Oes;
        var _Int1010102Oes = OpenTK.Graphics.ES20.OesvertexType1010102.Int1010102Oes;
        var _OesVertexType1010102 = OpenTK.Graphics.ES20.OesvertexType1010102.OesVertexType1010102;
    }
    static void Test_OpenGlescoreVersions_4009() {
        var _EsVersion20 = OpenTK.Graphics.ES20.OpenGlescoreVersions.EsVersion20;
    }
    static void Test_PixelFormat_4010() {
        var _DepthComponent = OpenTK.Graphics.ES20.PixelFormat.DepthComponent;
        var _Alpha = OpenTK.Graphics.ES20.PixelFormat.Alpha;
        var _Rgb = OpenTK.Graphics.ES20.PixelFormat.Rgb;
        var _Rgba = OpenTK.Graphics.ES20.PixelFormat.Rgba;
        var _Luminance = OpenTK.Graphics.ES20.PixelFormat.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES20.PixelFormat.LuminanceAlpha;
    }
    static void Test_PixelType_4011() {
        var _UnsignedShort4444 = OpenTK.Graphics.ES20.PixelType.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES20.PixelType.UnsignedShort5551;
        var _UnsignedShort565 = OpenTK.Graphics.ES20.PixelType.UnsignedShort565;
    }
    static void Test_ProgramParameter_4012() {
        var _DeleteStatus = OpenTK.Graphics.ES20.ProgramParameter.DeleteStatus;
        var _LinkStatus = OpenTK.Graphics.ES20.ProgramParameter.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES20.ProgramParameter.ValidateStatus;
        var _InfoLogLength = OpenTK.Graphics.ES20.ProgramParameter.InfoLogLength;
        var _AttachedShaders = OpenTK.Graphics.ES20.ProgramParameter.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES20.ProgramParameter.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES20.ProgramParameter.ActiveUniformMaxLength;
        var _ActiveAttributes = OpenTK.Graphics.ES20.ProgramParameter.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES20.ProgramParameter.ActiveAttributeMaxLength;
    }
    static void Test_QcomdriverControl_4013() {
        var _QcomDriverControl = OpenTK.Graphics.ES20.QcomdriverControl.QcomDriverControl;
    }
    static void Test_QcomextendedGet_4014() {
        var _TextureWidthQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureWidthQcom;
        var _TextureHeightQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureHeightQcom;
        var _TextureDepthQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureDepthQcom;
        var _TextureInternalFormatQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureInternalFormatQcom;
        var _TextureFormatQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureFormatQcom;
        var _TextureTypeQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureTypeQcom;
        var _TextureImageValidQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureImageValidQcom;
        var _TextureNumLevelsQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureNumLevelsQcom;
        var _TextureTargetQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureTargetQcom;
        var _TextureObjectValidQcom = OpenTK.Graphics.ES20.QcomextendedGet.TextureObjectValidQcom;
        var _StateRestore = OpenTK.Graphics.ES20.QcomextendedGet.StateRestore;
        var _QcomExtendedGet = OpenTK.Graphics.ES20.QcomextendedGet.QcomExtendedGet;
    }
    static void Test_QcomextendedGet2_4015() {
        var _QcomExtendedGet2 = OpenTK.Graphics.ES20.QcomextendedGet2.QcomExtendedGet2;
    }
    static void Test_QcomperfmonGlobalMode_4016() {
        var _PerfmonGlobalModeQcom = OpenTK.Graphics.ES20.QcomperfmonGlobalMode.PerfmonGlobalModeQcom;
        var _QcomPerfmonGlobalMode = OpenTK.Graphics.ES20.QcomperfmonGlobalMode.QcomPerfmonGlobalMode;
    }
    static void Test_QcomtiledRendering_4017() {
        var _ColorBufferBit0Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit0Qcom;
        var _ColorBufferBit1Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit1Qcom;
        var _ColorBufferBit2Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit2Qcom;
        var _ColorBufferBit3Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit3Qcom;
        var _ColorBufferBit4Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit4Qcom;
        var _ColorBufferBit5Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit5Qcom;
        var _ColorBufferBit6Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit6Qcom;
        var _ColorBufferBit7Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.ColorBufferBit7Qcom;
        var _DepthBufferBit0Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit0Qcom;
        var _DepthBufferBit1Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit1Qcom;
        var _DepthBufferBit2Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit2Qcom;
        var _DepthBufferBit3Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit3Qcom;
        var _DepthBufferBit4Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit4Qcom;
        var _DepthBufferBit5Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit5Qcom;
        var _DepthBufferBit6Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit6Qcom;
        var _DepthBufferBit7Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.DepthBufferBit7Qcom;
        var _StencilBufferBit0Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit0Qcom;
        var _StencilBufferBit1Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit1Qcom;
        var _StencilBufferBit2Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit2Qcom;
        var _StencilBufferBit3Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit3Qcom;
        var _StencilBufferBit4Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit4Qcom;
        var _StencilBufferBit5Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit5Qcom;
        var _StencilBufferBit6Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit6Qcom;
        var _StencilBufferBit7Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.StencilBufferBit7Qcom;
        var _MultisampleBufferBit0Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit0Qcom;
        var _MultisampleBufferBit1Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit1Qcom;
        var _MultisampleBufferBit2Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit2Qcom;
        var _MultisampleBufferBit3Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit3Qcom;
        var _MultisampleBufferBit4Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit4Qcom;
        var _MultisampleBufferBit5Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit5Qcom;
        var _MultisampleBufferBit6Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit6Qcom;
        var _MultisampleBufferBit7Qcom = OpenTK.Graphics.ES20.QcomtiledRendering.MultisampleBufferBit7Qcom;
        var _QcomTiledRendering = OpenTK.Graphics.ES20.QcomtiledRendering.QcomTiledRendering;
    }
    static void Test_QcomwriteonlyRendering_4018() {
        var _WriteonlyRenderingQcom = OpenTK.Graphics.ES20.QcomwriteonlyRendering.WriteonlyRenderingQcom;
        var _QcomWriteonlyRendering = OpenTK.Graphics.ES20.QcomwriteonlyRendering.QcomWriteonlyRendering;
    }
    static void Test_ReadFormat_4019() {
        var _ImplementationColorReadType = OpenTK.Graphics.ES20.ReadFormat.ImplementationColorReadType;
        var _ImplementationColorReadFormat = OpenTK.Graphics.ES20.ReadFormat.ImplementationColorReadFormat;
    }
    static void Test_SeparateBlendFunctions_4020() {
        var _ConstantColor = OpenTK.Graphics.ES20.SeparateBlendFunctions.ConstantColor;
        var _OneMinusConstantColor = OpenTK.Graphics.ES20.SeparateBlendFunctions.OneMinusConstantColor;
        var _ConstantAlpha = OpenTK.Graphics.ES20.SeparateBlendFunctions.ConstantAlpha;
        var _OneMinusConstantAlpha = OpenTK.Graphics.ES20.SeparateBlendFunctions.OneMinusConstantAlpha;
        var _BlendColor = OpenTK.Graphics.ES20.SeparateBlendFunctions.BlendColor;
        var _BlendDstRgb = OpenTK.Graphics.ES20.SeparateBlendFunctions.BlendDstRgb;
        var _BlendSrcRgb = OpenTK.Graphics.ES20.SeparateBlendFunctions.BlendSrcRgb;
        var _BlendDstAlpha = OpenTK.Graphics.ES20.SeparateBlendFunctions.BlendDstAlpha;
        var _BlendSrcAlpha = OpenTK.Graphics.ES20.SeparateBlendFunctions.BlendSrcAlpha;
    }
    static void Test_ShaderBinary_4021() {
        var _ShaderBinaryFormats = OpenTK.Graphics.ES20.ShaderBinary.ShaderBinaryFormats;
        var _NumShaderBinaryFormats = OpenTK.Graphics.ES20.ShaderBinary.NumShaderBinaryFormats;
    }
    static void Test_ShaderParameter_4022() {
        var _ShaderType = OpenTK.Graphics.ES20.ShaderParameter.ShaderType;
        var _DeleteStatus = OpenTK.Graphics.ES20.ShaderParameter.DeleteStatus;
        var _CompileStatus = OpenTK.Graphics.ES20.ShaderParameter.CompileStatus;
        var _InfoLogLength = OpenTK.Graphics.ES20.ShaderParameter.InfoLogLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES20.ShaderParameter.ShaderSourceLength;
    }
    static void Test_ShaderPrecisionSpecifiedTypes_4023() {
        var _LowFloat = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.LowFloat;
        var _MediumFloat = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.MediumFloat;
        var _HighFloat = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.HighFloat;
        var _LowInt = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.LowInt;
        var _MediumInt = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.MediumInt;
        var _HighInt = OpenTK.Graphics.ES20.ShaderPrecisionSpecifiedTypes.HighInt;
    }
    static void Test_Shaders_4024() {
        var _MaxVertexAttribs = OpenTK.Graphics.ES20.Shaders.MaxVertexAttribs;
        var _MaxTextureImageUnits = OpenTK.Graphics.ES20.Shaders.MaxTextureImageUnits;
        var _FragmentShader = OpenTK.Graphics.ES20.Shaders.FragmentShader;
        var _VertexShader = OpenTK.Graphics.ES20.Shaders.VertexShader;
        var _MaxVertexTextureImageUnits = OpenTK.Graphics.ES20.Shaders.MaxVertexTextureImageUnits;
        var _MaxCombinedTextureImageUnits = OpenTK.Graphics.ES20.Shaders.MaxCombinedTextureImageUnits;
        var _ShaderType = OpenTK.Graphics.ES20.Shaders.ShaderType;
        var _DeleteStatus = OpenTK.Graphics.ES20.Shaders.DeleteStatus;
        var _LinkStatus = OpenTK.Graphics.ES20.Shaders.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES20.Shaders.ValidateStatus;
        var _AttachedShaders = OpenTK.Graphics.ES20.Shaders.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES20.Shaders.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES20.Shaders.ActiveUniformMaxLength;
        var _ActiveAttributes = OpenTK.Graphics.ES20.Shaders.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES20.Shaders.ActiveAttributeMaxLength;
        var _ShadingLanguageVersion = OpenTK.Graphics.ES20.Shaders.ShadingLanguageVersion;
        var _CurrentProgram = OpenTK.Graphics.ES20.Shaders.CurrentProgram;
        var _MaxVertexUniformVectors = OpenTK.Graphics.ES20.Shaders.MaxVertexUniformVectors;
        var _MaxVaryingVectors = OpenTK.Graphics.ES20.Shaders.MaxVaryingVectors;
        var _MaxFragmentUniformVectors = OpenTK.Graphics.ES20.Shaders.MaxFragmentUniformVectors;
    }
    static void Test_ShaderSource_4025() {
        var _CompileStatus = OpenTK.Graphics.ES20.ShaderSource.CompileStatus;
        var _InfoLogLength = OpenTK.Graphics.ES20.ShaderSource.InfoLogLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES20.ShaderSource.ShaderSourceLength;
        var _ShaderCompiler = OpenTK.Graphics.ES20.ShaderSource.ShaderCompiler;
    }
    static void Test_StencilFunction_4026() {
        var _Never = OpenTK.Graphics.ES20.StencilFunction.Never;
        var _Less = OpenTK.Graphics.ES20.StencilFunction.Less;
        var _Equal = OpenTK.Graphics.ES20.StencilFunction.Equal;
        var _Lequal = OpenTK.Graphics.ES20.StencilFunction.Lequal;
        var _Greater = OpenTK.Graphics.ES20.StencilFunction.Greater;
        var _Notequal = OpenTK.Graphics.ES20.StencilFunction.Notequal;
        var _Gequal = OpenTK.Graphics.ES20.StencilFunction.Gequal;
        var _Always = OpenTK.Graphics.ES20.StencilFunction.Always;
    }
    static void Test_StencilOp_4027() {
        var _Invert = OpenTK.Graphics.ES20.StencilOp.Invert;
        var _Keep = OpenTK.Graphics.ES20.StencilOp.Keep;
        var _Replace = OpenTK.Graphics.ES20.StencilOp.Replace;
        var _Incr = OpenTK.Graphics.ES20.StencilOp.Incr;
        var _Decr = OpenTK.Graphics.ES20.StencilOp.Decr;
        var _IncrWrap = OpenTK.Graphics.ES20.StencilOp.IncrWrap;
        var _DecrWrap = OpenTK.Graphics.ES20.StencilOp.DecrWrap;
    }
    static void Test_StringName_4028() {
        var _Vendor = OpenTK.Graphics.ES20.StringName.Vendor;
        var _Renderer = OpenTK.Graphics.ES20.StringName.Renderer;
        var _Version = OpenTK.Graphics.ES20.StringName.Version;
        var _Extensions = OpenTK.Graphics.ES20.StringName.Extensions;
    }
    static void Test_TextureMagFilter_4029() {
        var _Nearest = OpenTK.Graphics.ES20.TextureMagFilter.Nearest;
        var _Linear = OpenTK.Graphics.ES20.TextureMagFilter.Linear;
    }
    static void Test_TextureMinFilter_4030() {
        var _NearestMipmapNearest = OpenTK.Graphics.ES20.TextureMinFilter.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES20.TextureMinFilter.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES20.TextureMinFilter.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES20.TextureMinFilter.LinearMipmapLinear;
    }
    static void Test_TextureParameterName_4031() {
        var _TextureMagFilter = OpenTK.Graphics.ES20.TextureParameterName.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES20.TextureParameterName.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES20.TextureParameterName.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES20.TextureParameterName.TextureWrapT;
    }
    static void Test_TextureTarget_4032() {
        var _Texture = OpenTK.Graphics.ES20.TextureTarget.Texture;
        var _TextureCubeMap = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMap;
        var _TextureBindingCubeMap = OpenTK.Graphics.ES20.TextureTarget.TextureBindingCubeMap;
        var _TextureCubeMapPositiveX = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapPositiveX;
        var _TextureCubeMapNegativeX = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapNegativeX;
        var _TextureCubeMapPositiveY = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapPositiveY;
        var _TextureCubeMapNegativeY = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapNegativeY;
        var _TextureCubeMapPositiveZ = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapPositiveZ;
        var _TextureCubeMapNegativeZ = OpenTK.Graphics.ES20.TextureTarget.TextureCubeMapNegativeZ;
        var _MaxCubeMapTextureSize = OpenTK.Graphics.ES20.TextureTarget.MaxCubeMapTextureSize;
    }
    static void Test_TextureUnit_4033() {
        var _Texture0 = OpenTK.Graphics.ES20.TextureUnit.Texture0;
        var _Texture1 = OpenTK.Graphics.ES20.TextureUnit.Texture1;
        var _Texture2 = OpenTK.Graphics.ES20.TextureUnit.Texture2;
        var _Texture3 = OpenTK.Graphics.ES20.TextureUnit.Texture3;
        var _Texture4 = OpenTK.Graphics.ES20.TextureUnit.Texture4;
        var _Texture5 = OpenTK.Graphics.ES20.TextureUnit.Texture5;
        var _Texture6 = OpenTK.Graphics.ES20.TextureUnit.Texture6;
        var _Texture7 = OpenTK.Graphics.ES20.TextureUnit.Texture7;
        var _Texture8 = OpenTK.Graphics.ES20.TextureUnit.Texture8;
        var _Texture9 = OpenTK.Graphics.ES20.TextureUnit.Texture9;
        var _Texture10 = OpenTK.Graphics.ES20.TextureUnit.Texture10;
        var _Texture11 = OpenTK.Graphics.ES20.TextureUnit.Texture11;
        var _Texture12 = OpenTK.Graphics.ES20.TextureUnit.Texture12;
        var _Texture13 = OpenTK.Graphics.ES20.TextureUnit.Texture13;
        var _Texture14 = OpenTK.Graphics.ES20.TextureUnit.Texture14;
        var _Texture15 = OpenTK.Graphics.ES20.TextureUnit.Texture15;
        var _Texture16 = OpenTK.Graphics.ES20.TextureUnit.Texture16;
        var _Texture17 = OpenTK.Graphics.ES20.TextureUnit.Texture17;
        var _Texture18 = OpenTK.Graphics.ES20.TextureUnit.Texture18;
        var _Texture19 = OpenTK.Graphics.ES20.TextureUnit.Texture19;
        var _Texture20 = OpenTK.Graphics.ES20.TextureUnit.Texture20;
        var _Texture21 = OpenTK.Graphics.ES20.TextureUnit.Texture21;
        var _Texture22 = OpenTK.Graphics.ES20.TextureUnit.Texture22;
        var _Texture23 = OpenTK.Graphics.ES20.TextureUnit.Texture23;
        var _Texture24 = OpenTK.Graphics.ES20.TextureUnit.Texture24;
        var _Texture25 = OpenTK.Graphics.ES20.TextureUnit.Texture25;
        var _Texture26 = OpenTK.Graphics.ES20.TextureUnit.Texture26;
        var _Texture27 = OpenTK.Graphics.ES20.TextureUnit.Texture27;
        var _Texture28 = OpenTK.Graphics.ES20.TextureUnit.Texture28;
        var _Texture29 = OpenTK.Graphics.ES20.TextureUnit.Texture29;
        var _Texture30 = OpenTK.Graphics.ES20.TextureUnit.Texture30;
        var _Texture31 = OpenTK.Graphics.ES20.TextureUnit.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES20.TextureUnit.ActiveTexture;
    }
    static void Test_TextureWrapMode_4034() {
        var _Repeat = OpenTK.Graphics.ES20.TextureWrapMode.Repeat;
        var _ClampToEdge = OpenTK.Graphics.ES20.TextureWrapMode.ClampToEdge;
        var _MirroredRepeat = OpenTK.Graphics.ES20.TextureWrapMode.MirroredRepeat;
    }
    static void Test_UniformTypes_4035() {
        var _FloatVec2 = OpenTK.Graphics.ES20.UniformTypes.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES20.UniformTypes.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES20.UniformTypes.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES20.UniformTypes.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES20.UniformTypes.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES20.UniformTypes.IntVec4;
        var _Bool = OpenTK.Graphics.ES20.UniformTypes.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES20.UniformTypes.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES20.UniformTypes.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES20.UniformTypes.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES20.UniformTypes.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES20.UniformTypes.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES20.UniformTypes.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES20.UniformTypes.Sampler2D;
        var _SamplerCube = OpenTK.Graphics.ES20.UniformTypes.SamplerCube;
    }
    static void Test_Unknown_4036() {
        var _ExtMultiDrawArrays = OpenTK.Graphics.ES20.Unknown.ExtMultiDrawArrays;
    }
    static void Test_VertexArrays_4037() {
        var _VertexAttribArrayEnabled = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayEnabled;
        var _VertexAttribArraySize = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArraySize;
        var _VertexAttribArrayStride = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayStride;
        var _VertexAttribArrayType = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayType;
        var _VertexAttribArrayPointer = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayPointer;
        var _VertexAttribArrayNormalized = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayNormalized;
        var _VertexAttribArrayBufferBinding = OpenTK.Graphics.ES20.VertexArrays.VertexAttribArrayBufferBinding;
    }
    static void Test_VertexAttribPointerType_4038() {
        var _Byte = OpenTK.Graphics.ES20.VertexAttribPointerType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES20.VertexAttribPointerType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES20.VertexAttribPointerType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES20.VertexAttribPointerType.UnsignedShort;
        var _Float = OpenTK.Graphics.ES20.VertexAttribPointerType.Float;
        var _Fixed = OpenTK.Graphics.ES20.VertexAttribPointerType.Fixed;
    }

    static unsafe void Test_ActiveTexture_4040() {
        OpenTK.Graphics.ES20.All _texture = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.ActiveTexture(_texture);
    }
    static unsafe void Test_AttachShader_4041() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.GL.AttachShader(_program,_shader);
    }
    static unsafe void Test_AttachShader_4042() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.AttachShader(_program,_shader);
    }
    static unsafe void Test_BindAttribLocation_4043() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.String _name = default(System.String);
        OpenTK.Graphics.ES20.GL.BindAttribLocation(_program,_index,_name);
    }
    static unsafe void Test_BindAttribLocation_4044() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.String _name = default(System.String);
        OpenTK.Graphics.ES20.GL.BindAttribLocation(_program,_index,_name);
    }
    static unsafe void Test_BindBuffer_4045() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Graphics.ES20.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindBuffer_4046() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindFramebuffer_4047() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _framebuffer = default(System.Int32);
        OpenTK.Graphics.ES20.GL.BindFramebuffer(_target,_framebuffer);
    }
    static unsafe void Test_BindFramebuffer_4048() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _framebuffer = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.BindFramebuffer(_target,_framebuffer);
    }
    static unsafe void Test_BindRenderbuffer_4049() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _renderbuffer = default(System.Int32);
        OpenTK.Graphics.ES20.GL.BindRenderbuffer(_target,_renderbuffer);
    }
    static unsafe void Test_BindRenderbuffer_4050() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _renderbuffer = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.BindRenderbuffer(_target,_renderbuffer);
    }
    static unsafe void Test_BindTexture_4051() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES20.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BindTexture_4052() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BlendColor_4053() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES20.GL.BlendColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_BlendEquation_4054() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BlendEquation(_mode);
    }
    static unsafe void Test_BlendEquationSeparate_4055() {
        OpenTK.Graphics.ES20.All _modeRGB = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _modeAlpha = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BlendEquationSeparate(_modeRGB,_modeAlpha);
    }
    static unsafe void Test_BlendFunc_4056() {
        OpenTK.Graphics.ES20.All _sfactor = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _dfactor = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BlendFunc(_sfactor,_dfactor);
    }
    static unsafe void Test_BlendFuncSeparate_4057() {
        OpenTK.Graphics.ES20.All _srcRGB = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _dstRGB = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _srcAlpha = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _dstAlpha = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BlendFuncSeparate(_srcRGB,_dstRGB,_srcAlpha,_dstAlpha);
    }
    static unsafe void Test_BufferData_4058() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES20.All _usage = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BufferData(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4059() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES20.All _usage = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4060() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES20.All _usage = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4061() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES20.All _usage = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4062() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES20.All _usage = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.BufferData<int>(_target,_size,ref _data,_usage);
    }
    static unsafe void Test_BufferSubData_4063() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.BufferSubData(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4064() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES20.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4065() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES20.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4066() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES20.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4067() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES20.GL.BufferSubData<int>(_target,_offset,_size,ref _data);
    }
    static unsafe void Test_CheckFramebufferStatus_4068() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All r = OpenTK.Graphics.ES20.GL.CheckFramebufferStatus(_target);
    }
    static unsafe void Test_Clear_4069() {
        OpenTK.Graphics.ES20.ClearBufferMask _mask = default(OpenTK.Graphics.ES20.ClearBufferMask);
        OpenTK.Graphics.ES20.GL.Clear(_mask);
    }
    static unsafe void Test_ClearColor_4070() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES20.GL.ClearColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearDepth_4071() {
        System.Single _depth = default(System.Single);
        OpenTK.Graphics.ES20.GL.ClearDepth(_depth);
    }
    static unsafe void Test_ClearStencil_4072() {
        System.Int32 _s = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ClearStencil(_s);
    }
    static unsafe void Test_ColorMask_4073() {
        System.Boolean _red = default(System.Boolean);
        System.Boolean _green = default(System.Boolean);
        System.Boolean _blue = default(System.Boolean);
        System.Boolean _alpha = default(System.Boolean);
        OpenTK.Graphics.ES20.GL.ColorMask(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_CompileShader_4074() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.GL.CompileShader(_shader);
    }
    static unsafe void Test_CompileShader_4075() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.CompileShader(_shader);
    }
    static unsafe void Test_CompressedTexImage2D_4076() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.CompressedTexImage2D(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4077() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES20.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4078() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES20.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4079() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES20.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4080() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES20.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4081() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.CompressedTexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4082() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES20.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4083() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES20.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4084() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES20.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4085() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES20.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,ref _data);
    }
    static unsafe void Test_CopyTexImage2D_4086() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.GL.CopyTexImage2D(_target,_level,_internalformat,_x,_y,_width,_height,_border);
    }
    static unsafe void Test_CopyTexSubImage2D_4087() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.GL.CopyTexSubImage2D(_target,_level,_xoffset,_yoffset,_x,_y,_width,_height);
    }
    static unsafe void Test_CreateProgram_4088() {
        System.Int32 r = OpenTK.Graphics.ES20.GL.CreateProgram();
    }
    static unsafe void Test_CreateShader_4089() {
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Int32 r = OpenTK.Graphics.ES20.GL.CreateShader(_type);
    }
    static unsafe void Test_CullFace_4090() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.CullFace(_mode);
    }
    static unsafe void Test_DeleteBuffers_4091() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4092() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_4093() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4094() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4095() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_4096() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteFramebuffers_4097() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _framebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4098() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _framebuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,ref _framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4099() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _framebuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4100() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4101() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _framebuffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,ref _framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4102() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _framebuffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteProgram_4103() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteProgram(_program);
    }
    static unsafe void Test_DeleteProgram_4104() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteProgram(_program);
    }
    static unsafe void Test_DeleteRenderbuffers_4105() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _renderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4106() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _renderbuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,ref _renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4107() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _renderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4108() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4109() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _renderbuffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,ref _renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4110() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _renderbuffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteShader_4111() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteShader(_shader);
    }
    static unsafe void Test_DeleteShader_4112() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteShader(_shader);
    }
    static unsafe void Test_DeleteTextures_4113() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4114() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_4115() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4116() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4117() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_4118() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DepthFunc_4119() {
        OpenTK.Graphics.ES20.All _func = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.DepthFunc(_func);
    }
    static unsafe void Test_DepthMask_4120() {
        System.Boolean _flag = default(System.Boolean);
        OpenTK.Graphics.ES20.GL.DepthMask(_flag);
    }
    static unsafe void Test_DepthRange_4121() {
        System.Single _zNear = default(System.Single);
        System.Single _zFar = default(System.Single);
        OpenTK.Graphics.ES20.GL.DepthRange(_zNear,_zFar);
    }
    static unsafe void Test_DetachShader_4122() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DetachShader(_program,_shader);
    }
    static unsafe void Test_DetachShader_4123() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DetachShader(_program,_shader);
    }
    static unsafe void Test_Disable_4124() {
        OpenTK.Graphics.ES20.All _cap = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.Disable(_cap);
    }
    static unsafe void Test_DisableDriverControlQCOM_4125() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DisableDriverControlQCOM_4126() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DisableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_DisableVertexAttribArray_4127() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DisableVertexAttribArray(_index);
    }
    static unsafe void Test_DisableVertexAttribArray_4128() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.DisableVertexAttribArray(_index);
    }
    static unsafe void Test_DrawArrays_4129() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _first = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DrawArrays(_mode,_first,_count);
    }
    static unsafe void Test_DrawElements_4130() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.DrawElements(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4131() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES20.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4132() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES20.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4133() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES20.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4134() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int _indices = default(int);
        OpenTK.Graphics.ES20.GL.DrawElements<int>(_mode,_count,_type,ref _indices);
    }
    static unsafe void Test_Enable_4135() {
        OpenTK.Graphics.ES20.All _cap = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.Enable(_cap);
    }
    static unsafe void Test_EnableDriverControlQCOM_4136() {
        System.Int32 _driverControl = default(System.Int32);
        OpenTK.Graphics.ES20.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EnableDriverControlQCOM_4137() {
        System.UInt32 _driverControl = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.EnableDriverControlQCOM(_driverControl);
    }
    static unsafe void Test_EnableVertexAttribArray_4138() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.GL.EnableVertexAttribArray(_index);
    }
    static unsafe void Test_EnableVertexAttribArray_4139() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.EnableVertexAttribArray(_index);
    }
    static unsafe void Test_EndTilingQCOM_4140() {
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_EndTilingQCOM_4141() {
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.EndTilingQCOM(_preserveMask);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_4142() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.ExtGetBufferPointervQCOM(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_4143() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES20.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_4144() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES20.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_4145() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES20.GL.ExtGetBufferPointervQCOM<int>(_target,_params);
    }
    static unsafe void Test_ExtGetBufferPointervQCOM_4146() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        int _params = default(int);
        OpenTK.Graphics.ES20.GL.ExtGetBufferPointervQCOM<int>(_target,ref _params);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4147() {
        System.Int32[] _buffers = default(System.Int32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4148() {
        System.Int32 _buffers = default(System.Int32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4149() {
        System.Int32* _buffers = default(System.Int32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4150() {
        System.UInt32[] _buffers = default(System.UInt32[]);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32[] _numBuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4151() {
        System.UInt32 _buffers = default(System.UInt32);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32 _numBuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(ref _buffers,_maxBuffers,ref _numBuffers);
    }
    static unsafe void Test_ExtGetBuffersQCOM_4152() {
        System.UInt32* _buffers = default(System.UInt32*);
        System.Int32 _maxBuffers = default(System.Int32);
        System.Int32* _numBuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetBuffersQCOM(_buffers,_maxBuffers,_numBuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4153() {
        System.Int32[] _framebuffers = default(System.Int32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4154() {
        System.Int32 _framebuffers = default(System.Int32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4155() {
        System.Int32* _framebuffers = default(System.Int32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4156() {
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32[] _numFramebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4157() {
        System.UInt32 _framebuffers = default(System.UInt32);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32 _numFramebuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(ref _framebuffers,_maxFramebuffers,ref _numFramebuffers);
    }
    static unsafe void Test_ExtGetFramebuffersQCOM_4158() {
        System.UInt32* _framebuffers = default(System.UInt32*);
        System.Int32 _maxFramebuffers = default(System.Int32);
        System.Int32* _numFramebuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetFramebuffersQCOM(_framebuffers,_maxFramebuffers,_numFramebuffers);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4159() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4160() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4161() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4162() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4163() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,ref _length);
    }
    static unsafe void Test_ExtGetProgramBinarySourceQCOM_4164() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        System.String _source = default(System.String);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetProgramBinarySourceQCOM(_program,_shadertype,_source,_length);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4165() {
        System.Int32[] _programs = default(System.Int32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4166() {
        System.Int32 _programs = default(System.Int32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4167() {
        System.Int32* _programs = default(System.Int32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4168() {
        System.UInt32[] _programs = default(System.UInt32[]);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32[] _numPrograms = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4169() {
        System.UInt32 _programs = default(System.UInt32);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32 _numPrograms = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(ref _programs,_maxPrograms,ref _numPrograms);
    }
    static unsafe void Test_ExtGetProgramsQCOM_4170() {
        System.UInt32* _programs = default(System.UInt32*);
        System.Int32 _maxPrograms = default(System.Int32);
        System.Int32* _numPrograms = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetProgramsQCOM(_programs,_maxPrograms,_numPrograms);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4171() {
        System.Int32[] _renderbuffers = default(System.Int32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4172() {
        System.Int32 _renderbuffers = default(System.Int32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4173() {
        System.Int32* _renderbuffers = default(System.Int32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4174() {
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32[] _numRenderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4175() {
        System.UInt32 _renderbuffers = default(System.UInt32);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32 _numRenderbuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(ref _renderbuffers,_maxRenderbuffers,ref _numRenderbuffers);
    }
    static unsafe void Test_ExtGetRenderbuffersQCOM_4176() {
        System.UInt32* _renderbuffers = default(System.UInt32*);
        System.Int32 _maxRenderbuffers = default(System.Int32);
        System.Int32* _numRenderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetRenderbuffersQCOM(_renderbuffers,_maxRenderbuffers,_numRenderbuffers);
    }
    static unsafe void Test_ExtGetShadersQCOM_4177() {
        System.Int32[] _shaders = default(System.Int32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_4178() {
        System.Int32 _shaders = default(System.Int32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_4179() {
        System.Int32* _shaders = default(System.Int32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_4180() {
        System.UInt32[] _shaders = default(System.UInt32[]);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32[] _numShaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_4181() {
        System.UInt32 _shaders = default(System.UInt32);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32 _numShaders = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(ref _shaders,_maxShaders,ref _numShaders);
    }
    static unsafe void Test_ExtGetShadersQCOM_4182() {
        System.UInt32* _shaders = default(System.UInt32*);
        System.Int32 _maxShaders = default(System.Int32);
        System.Int32* _numShaders = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetShadersQCOM(_shaders,_maxShaders,_numShaders);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4183() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4184() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4185() {
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4186() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4187() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,ref _params);
    }
    static unsafe void Test_ExtGetTexLevelParameterivQCOM_4188() {
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetTexLevelParameterivQCOM(_texture,_face,_level,_pname,_params);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_4189() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _texels = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.ExtGetTexSubImageQCOM(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_4190() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[] _texels = default(int[]);
        OpenTK.Graphics.ES20.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_4191() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,] _texels = default(int[,]);
        OpenTK.Graphics.ES20.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_4192() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,,] _texels = default(int[,,]);
        OpenTK.Graphics.ES20.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_texels);
    }
    static unsafe void Test_ExtGetTexSubImageQCOM_4193() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int _texels = default(int);
        OpenTK.Graphics.ES20.GL.ExtGetTexSubImageQCOM<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,ref _texels);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4194() {
        System.Int32[] _textures = default(System.Int32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4195() {
        System.Int32 _textures = default(System.Int32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4196() {
        System.Int32* _textures = default(System.Int32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4197() {
        System.UInt32[] _textures = default(System.UInt32[]);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32[] _numTextures = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4198() {
        System.UInt32 _textures = default(System.UInt32);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32 _numTextures = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(ref _textures,_maxTextures,ref _numTextures);
    }
    static unsafe void Test_ExtGetTexturesQCOM_4199() {
        System.UInt32* _textures = default(System.UInt32*);
        System.Int32 _maxTextures = default(System.Int32);
        System.Int32* _numTextures = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ExtGetTexturesQCOM(_textures,_maxTextures,_numTextures);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_4200() {
        System.Int32 _program = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtIsProgramBinaryQCOM_4201() {
        System.UInt32 _program = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.ExtIsProgramBinaryQCOM(_program);
    }
    static unsafe void Test_ExtTexObjectStateOverrideiQCOM_4202() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ExtTexObjectStateOverrideiQCOM(_target,_pname,_param);
    }
    static unsafe void Test_Finish_4203() {
        OpenTK.Graphics.ES20.GL.Finish();
    }
    static unsafe void Test_Flush_4204() {
        OpenTK.Graphics.ES20.GL.Flush();
    }
    static unsafe void Test_FramebufferRenderbuffer_4205() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _renderbuffertarget = default(OpenTK.Graphics.ES20.All);
        System.Int32 _renderbuffer = default(System.Int32);
        OpenTK.Graphics.ES20.GL.FramebufferRenderbuffer(_target,_attachment,_renderbuffertarget,_renderbuffer);
    }
    static unsafe void Test_FramebufferRenderbuffer_4206() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _renderbuffertarget = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _renderbuffer = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.FramebufferRenderbuffer(_target,_attachment,_renderbuffertarget,_renderbuffer);
    }
    static unsafe void Test_FramebufferTexture2D_4207() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _textarget = default(OpenTK.Graphics.ES20.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.GL.FramebufferTexture2D(_target,_attachment,_textarget,_texture,_level);
    }
    static unsafe void Test_FramebufferTexture2D_4208() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _textarget = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES20.GL.FramebufferTexture2D(_target,_attachment,_textarget,_texture,_level);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_4209() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _textarget = default(OpenTK.Graphics.ES20.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES20.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FramebufferTexture2DMultisampleIMG_4210() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _textarget = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES20.GL.FramebufferTexture2DMultisampleIMG(_target,_attachment,_textarget,_texture,_level,_samples);
    }
    static unsafe void Test_FrontFace_4211() {
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.FrontFace(_mode);
    }
    static unsafe void Test_GenBuffers_4212() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4213() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_4214() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4215() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4216() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_4217() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenerateMipmap_4218() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.GenerateMipmap(_target);
    }
    static unsafe void Test_GenFramebuffers_4219() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _framebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4220() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _framebuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,out _framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4221() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _framebuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4222() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4223() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _framebuffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,out _framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4224() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _framebuffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenRenderbuffers_4225() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _renderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4226() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _renderbuffers = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,out _renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4227() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _renderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4228() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4229() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _renderbuffers = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,out _renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4230() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _renderbuffers = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenTextures_4231() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4232() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_4233() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4234() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4235() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_4236() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GetActiveAttrib_4237() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES20.All[] _type = default(OpenTK.Graphics.ES20.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4238() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4239() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES20.All* _type = default(OpenTK.Graphics.ES20.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4240() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES20.All[] _type = default(OpenTK.Graphics.ES20.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4241() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4242() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES20.All* _type = default(OpenTK.Graphics.ES20.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4243() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES20.All[] _type = default(OpenTK.Graphics.ES20.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4244() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveUniform_4245() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES20.All* _type = default(OpenTK.Graphics.ES20.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4246() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES20.All[] _type = default(OpenTK.Graphics.ES20.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4247() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveUniform_4248() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES20.All* _type = default(OpenTK.Graphics.ES20.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetAttachedShaders_4249() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32[] _count = default(System.Int32[]);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4250() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,out _count,out _shaders);
    }
    static unsafe void Test_GetAttachedShaders_4251() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32* _count = default(System.Int32*);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4252() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32[] _count = default(System.Int32[]);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4253() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,out _count,out _shaders);
    }
    static unsafe void Test_GetAttachedShaders_4254() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32* _count = default(System.Int32*);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttribLocation_4255() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES20.GL.GetAttribLocation(_program,_name);
    }
    static unsafe void Test_GetAttribLocation_4256() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES20.GL.GetAttribLocation(_program,_name);
    }
    static unsafe void Test_GetBoolean_4257() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Boolean[] _params = default(System.Boolean[]);
        OpenTK.Graphics.ES20.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBoolean_4258() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Boolean _params = default(System.Boolean);
        OpenTK.Graphics.ES20.GL.GetBoolean(_pname,out _params);
    }
    static unsafe void Test_GetBoolean_4259() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Boolean* _params = default(System.Boolean*);
        OpenTK.Graphics.ES20.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_4260() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_4261() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetBufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetBufferParameter_4262() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetDriverControlsQCOM_4263() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.Int32[] _driverControls = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_4264() {
        System.Int32[] _num = default(System.Int32[]);
        System.Int32 _size = default(System.Int32);
        System.UInt32[] _driverControls = default(System.UInt32[]);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_4265() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.Int32 _driverControls = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_4266() {
        System.Int32 _num = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        System.UInt32 _driverControls = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(out _num,_size,out _driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_4267() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.Int32* _driverControls = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlsQCOM_4268() {
        System.Int32* _num = default(System.Int32*);
        System.Int32 _size = default(System.Int32);
        System.UInt32* _driverControls = default(System.UInt32*);
        OpenTK.Graphics.ES20.GL.GetDriverControlsQCOM(_num,_size,_driverControls);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4269() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4270() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4271() {
        System.Int32 _driverControl = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4272() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4273() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,out _length,_driverControlString);
    }
    static unsafe void Test_GetDriverControlStringQCOM_4274() {
        System.UInt32 _driverControl = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _driverControlString = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetDriverControlStringQCOM(_driverControl,_bufSize,_length,_driverControlString);
    }
    static unsafe void Test_GetError_4275() {
        OpenTK.Graphics.ES20.All r = OpenTK.Graphics.ES20.GL.GetError();
    }
    static unsafe void Test_GetFloat_4276() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFloat_4277() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetFloat(_pname,out _params);
    }
    static unsafe void Test_GetFloat_4278() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4279() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,_params);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4280() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,out _params);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4281() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _attachment = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,_params);
    }
    static unsafe void Test_GetInteger_4282() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetInteger_4283() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetInteger(_pname,out _params);
    }
    static unsafe void Test_GetInteger_4284() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetProgramInfoLog_4285() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4286() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4287() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4288() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4289() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4290() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgram_4291() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4292() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,out _params);
    }
    static unsafe void Test_GetProgram_4293() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4294() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4295() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,out _params);
    }
    static unsafe void Test_GetProgram_4296() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetRenderbufferParameter_4297() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetRenderbufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetRenderbufferParameter_4298() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetRenderbufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetRenderbufferParameter_4299() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetRenderbufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetShaderInfoLog_4300() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_4301() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_4302() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_4303() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_4304() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_4305() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShader_4306() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_4307() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,out _params);
    }
    static unsafe void Test_GetShader_4308() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_4309() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_4310() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,out _params);
    }
    static unsafe void Test_GetShader_4311() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShaderPrecisionFormat_4312() {
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _precisiontype = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _range = default(System.Int32[]);
        System.Int32[] _precision = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,_range,_precision);
    }
    static unsafe void Test_GetShaderPrecisionFormat_4313() {
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _precisiontype = default(OpenTK.Graphics.ES20.All);
        System.Int32 _range = default(System.Int32);
        System.Int32 _precision = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,out _range,out _precision);
    }
    static unsafe void Test_GetShaderPrecisionFormat_4314() {
        OpenTK.Graphics.ES20.All _shadertype = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _precisiontype = default(OpenTK.Graphics.ES20.All);
        System.Int32* _range = default(System.Int32*);
        System.Int32* _precision = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,_range,_precision);
    }
    static unsafe void Test_GetShaderSource_4315() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_4316() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,out _length,_source);
    }
    static unsafe void Test_GetShaderSource_4317() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_4318() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_4319() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,out _length,_source);
    }
    static unsafe void Test_GetShaderSource_4320() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES20.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetString_4321() {
        OpenTK.Graphics.ES20.All _name = default(OpenTK.Graphics.ES20.All);
        System.String r = OpenTK.Graphics.ES20.GL.GetString(_name);
    }
    static unsafe void Test_GetTexParameter_4322() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_4323() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_4324() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_4325() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_4326() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_4327() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetUniform_4328() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4329() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_4330() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4331() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4332() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_4333() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4334() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4335() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_4336() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4337() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_4338() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_4339() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniformLocation_4340() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES20.GL.GetUniformLocation(_program,_name);
    }
    static unsafe void Test_GetUniformLocation_4341() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES20.GL.GetUniformLocation(_program,_name);
    }
    static unsafe void Test_GetVertexAttrib_4342() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4343() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_4344() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4345() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4346() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_4347() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4348() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4349() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_4350() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4351() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_4352() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_4353() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribPointer_4354() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4355() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4356() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4357() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4358() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int _pointer = default(int);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,ref _pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4359() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4360() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4361() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4362() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_4363() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        int _pointer = default(int);
        OpenTK.Graphics.ES20.GL.GetVertexAttribPointer<int>(_index,_pname,ref _pointer);
    }
    static unsafe void Test_Hint_4364() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _mode = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.Hint(_target,_mode);
    }
    static unsafe void Test_IsBuffer_4365() {
        System.Int32 _buffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsBuffer_4366() {
        System.UInt32 _buffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsEnabled_4367() {
        OpenTK.Graphics.ES20.All _cap = default(OpenTK.Graphics.ES20.All);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsEnabled(_cap);
    }
    static unsafe void Test_IsFramebuffer_4368() {
        System.Int32 _framebuffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsFramebuffer(_framebuffer);
    }
    static unsafe void Test_IsFramebuffer_4369() {
        System.UInt32 _framebuffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsFramebuffer(_framebuffer);
    }
    static unsafe void Test_IsProgram_4370() {
        System.Int32 _program = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsProgram(_program);
    }
    static unsafe void Test_IsProgram_4371() {
        System.UInt32 _program = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsProgram(_program);
    }
    static unsafe void Test_IsRenderbuffer_4372() {
        System.Int32 _renderbuffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsRenderbuffer(_renderbuffer);
    }
    static unsafe void Test_IsRenderbuffer_4373() {
        System.UInt32 _renderbuffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsRenderbuffer(_renderbuffer);
    }
    static unsafe void Test_IsShader_4374() {
        System.Int32 _shader = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsShader(_shader);
    }
    static unsafe void Test_IsShader_4375() {
        System.UInt32 _shader = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsShader(_shader);
    }
    static unsafe void Test_IsTexture_4376() {
        System.Int32 _texture = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsTexture(_texture);
    }
    static unsafe void Test_IsTexture_4377() {
        System.UInt32 _texture = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES20.GL.IsTexture(_texture);
    }
    static unsafe void Test_LineWidth_4378() {
        System.Single _width = default(System.Single);
        OpenTK.Graphics.ES20.GL.LineWidth(_width);
    }
    static unsafe void Test_LinkProgram_4379() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.GL.LinkProgram(_program);
    }
    static unsafe void Test_LinkProgram_4380() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.LinkProgram(_program);
    }
    static unsafe void Test_PixelStore_4381() {
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES20.GL.PixelStore(_pname,_param);
    }
    static unsafe void Test_PolygonOffset_4382() {
        System.Single _factor = default(System.Single);
        System.Single _units = default(System.Single);
        OpenTK.Graphics.ES20.GL.PolygonOffset(_factor,_units);
    }
    static unsafe void Test_ReadPixels_4383() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.ReadPixels(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_4384() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES20.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_4385() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES20.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_4386() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES20.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_4387() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES20.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_ReleaseShaderCompiler_4388() {
        OpenTK.Graphics.ES20.GL.ReleaseShaderCompiler();
    }
    static unsafe void Test_RenderbufferStorage_4389() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.GL.RenderbufferStorage(_target,_internalformat,_width,_height);
    }
    static unsafe void Test_RenderbufferStorageMultisampleIMG_4390() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES20.All _internalformat = default(OpenTK.Graphics.ES20.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.GL.RenderbufferStorageMultisampleIMG(_target,_samples,_internalformat,_width,_height);
    }
    static unsafe void Test_SampleCoverage_4391() {
        System.Single _value = default(System.Single);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES20.GL.SampleCoverage(_value,_invert);
    }
    static unsafe void Test_Scissor_4392() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Scissor(_x,_y,_width,_height);
    }
    static unsafe void Test_ShaderBinary_4393() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4394() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4395() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4396() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4397() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_4398() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4399() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4400() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4401() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4402() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_4403() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4404() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4405() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4406() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4407() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_4408() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4409() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4410() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4411() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4412() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_4413() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4414() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4415() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4416() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4417() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_4418() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4419() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4420() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4421() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_4422() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES20.All _binaryformat = default(OpenTK.Graphics.ES20.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderSource_4423() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_4424() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,ref _length);
    }
    static unsafe void Test_ShaderSource_4425() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_4426() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_4427() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,ref _length);
    }
    static unsafe void Test_ShaderSource_4428() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_StartTilingQCOM_4429() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _preserveMask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StartTilingQCOM_4430() {
        System.UInt32 _x = default(System.UInt32);
        System.UInt32 _y = default(System.UInt32);
        System.UInt32 _width = default(System.UInt32);
        System.UInt32 _height = default(System.UInt32);
        System.UInt32 _preserveMask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.StartTilingQCOM(_x,_y,_width,_height,_preserveMask);
    }
    static unsafe void Test_StencilFunc_4431() {
        OpenTK.Graphics.ES20.All _func = default(OpenTK.Graphics.ES20.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFunc_4432() {
        OpenTK.Graphics.ES20.All _func = default(OpenTK.Graphics.ES20.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFuncSeparate_4433() {
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _func = default(OpenTK.Graphics.ES20.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.StencilFuncSeparate(_face,_func,_ref,_mask);
    }
    static unsafe void Test_StencilFuncSeparate_4434() {
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _func = default(OpenTK.Graphics.ES20.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.StencilFuncSeparate(_face,_func,_ref,_mask);
    }
    static unsafe void Test_StencilMask_4435() {
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMask_4436() {
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMaskSeparate_4437() {
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES20.GL.StencilMaskSeparate(_face,_mask);
    }
    static unsafe void Test_StencilMaskSeparate_4438() {
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.StencilMaskSeparate(_face,_mask);
    }
    static unsafe void Test_StencilOp_4439() {
        OpenTK.Graphics.ES20.All _fail = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _zfail = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _zpass = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.StencilOp(_fail,_zfail,_zpass);
    }
    static unsafe void Test_StencilOpSeparate_4440() {
        OpenTK.Graphics.ES20.All _face = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _fail = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _zfail = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _zpass = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.GL.StencilOpSeparate(_face,_fail,_zfail,_zpass);
    }
    static unsafe void Test_TexImage2D_4441() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.TexImage2D(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_4442() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES20.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_4443() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES20.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_4444() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES20.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_4445() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES20.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexParameter_4446() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_4447() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_4448() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_4449() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_4450() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_4451() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _pname = default(OpenTK.Graphics.ES20.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexSubImage2D_4452() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.TexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_4453() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES20.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_4454() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES20.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_4455() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES20.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_4456() {
        OpenTK.Graphics.ES20.All _target = default(OpenTK.Graphics.ES20.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.All _format = default(OpenTK.Graphics.ES20.All);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES20.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_Uniform1_4457() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_x);
    }
    static unsafe void Test_Uniform1_4458() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_4459() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform1_4460() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_4461() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_x);
    }
    static unsafe void Test_Uniform1_4462() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_4463() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform1_4464() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_4465() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_x,_y);
    }
    static unsafe void Test_Uniform2_4466() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_4467() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform2_4468() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_4469() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_x,_y);
    }
    static unsafe void Test_Uniform2_4470() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_4471() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_4472() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_x,_y,_z);
    }
    static unsafe void Test_Uniform3_4473() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_4474() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform3_4475() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_4476() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_x,_y,_z);
    }
    static unsafe void Test_Uniform3_4477() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_4478() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform3_4479() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_4480() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_x,_y,_z,_w);
    }
    static unsafe void Test_Uniform4_4481() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_4482() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform4_4483() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_4484() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        System.Int32 _w = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_x,_y,_z,_w);
    }
    static unsafe void Test_Uniform4_4485() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_4486() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform4_4487() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_UniformMatrix2_4488() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.UniformMatrix2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2_4489() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES20.GL.UniformMatrix2(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix2_4490() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES20.GL.UniformMatrix2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3_4491() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.UniformMatrix3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3_4492() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES20.GL.UniformMatrix3(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix3_4493() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES20.GL.UniformMatrix3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4_4494() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.UniformMatrix4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4_4495() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES20.GL.UniformMatrix4(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix4_4496() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES20.GL.UniformMatrix4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UseProgram_4497() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.GL.UseProgram(_program);
    }
    static unsafe void Test_UseProgram_4498() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.UseProgram(_program);
    }
    static unsafe void Test_ValidateProgram_4499() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES20.GL.ValidateProgram(_program);
    }
    static unsafe void Test_ValidateProgram_4500() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES20.GL.ValidateProgram(_program);
    }
    static unsafe void Test_VertexAttrib1_4501() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_x);
    }
    static unsafe void Test_VertexAttrib1_4502() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_x);
    }
    static unsafe void Test_VertexAttrib1_4503() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_4504() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_4505() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_4506() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_4507() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_x,_y);
    }
    static unsafe void Test_VertexAttrib2_4508() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_x,_y);
    }
    static unsafe void Test_VertexAttrib2_4509() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_4510() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib2_4511() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_4512() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_4513() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib2_4514() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_4515() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_x,_y,_z);
    }
    static unsafe void Test_VertexAttrib3_4516() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_x,_y,_z);
    }
    static unsafe void Test_VertexAttrib3_4517() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_4518() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib3_4519() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_4520() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_4521() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib3_4522() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_4523() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttrib4_4524() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttrib4_4525() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_4526() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib4_4527() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_4528() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_4529() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib4_4530() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttribPointer_4531() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _ptr = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4532() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[] _ptr = default(int[]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4533() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,] _ptr = default(int[,]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4534() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,,] _ptr = default(int[,,]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4535() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int _ptr = default(int);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,ref _ptr);
    }
    static unsafe void Test_VertexAttribPointer_4536() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _ptr = default(System.IntPtr);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4537() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[] _ptr = default(int[]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4538() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,] _ptr = default(int[,]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4539() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,,] _ptr = default(int[,,]);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_4540() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int _ptr = default(int);
        OpenTK.Graphics.ES20.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,ref _ptr);
    }
    static unsafe void Test_Viewport_4541() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES20.GL.Viewport(_x,_y,_width,_height);
    }
    static unsafe void Test_ClearColor_4542() {
        System.Drawing.Color _color = default(System.Drawing.Color);
        OpenTK.Graphics.ES20.GL.ClearColor(_color);
    }
    static unsafe void Test_ClearColor_4543() {
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES20.GL.ClearColor(_color);
    }
    static unsafe void Test_BlendColor_4544() {
        System.Drawing.Color _color = default(System.Drawing.Color);
        OpenTK.Graphics.ES20.GL.BlendColor(_color);
    }
    static unsafe void Test_BlendColor_4545() {
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES20.GL.BlendColor(_color);
    }
    static unsafe void Test_Uniform2_4546() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector2 _vector = default(OpenTK.Vector2);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,ref _vector);
    }
    static unsafe void Test_Uniform3_4547() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector3 _vector = default(OpenTK.Vector3);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,ref _vector);
    }
    static unsafe void Test_Uniform4_4548() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector4 _vector = default(OpenTK.Vector4);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,ref _vector);
    }
    static unsafe void Test_Uniform2_4549() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector2 _vector = default(OpenTK.Vector2);
        OpenTK.Graphics.ES20.GL.Uniform2(_location,_vector);
    }
    static unsafe void Test_Uniform3_4550() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector3 _vector = default(OpenTK.Vector3);
        OpenTK.Graphics.ES20.GL.Uniform3(_location,_vector);
    }
    static unsafe void Test_Uniform4_4551() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector4 _vector = default(OpenTK.Vector4);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_vector);
    }
    static unsafe void Test_Uniform4_4552() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_color);
    }
    static unsafe void Test_Uniform4_4553() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Quaternion _quaternion = default(OpenTK.Quaternion);
        OpenTK.Graphics.ES20.GL.Uniform4(_location,_quaternion);
    }
    static unsafe void Test_UniformMatrix4_4554() {
        System.Int32 _location = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        OpenTK.Matrix4 _matrix = default(OpenTK.Matrix4);
        OpenTK.Graphics.ES20.GL.UniformMatrix4(_location,_transpose,ref _matrix);
    }
    static unsafe void Test_GetActiveAttrib_4555() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.ActiveAttribType _type = default(OpenTK.Graphics.ES20.ActiveAttribType);
        System.String r = OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,out _size,out _type);
    }
    static unsafe void Test_GetActiveAttrib_4556() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.String r = OpenTK.Graphics.ES20.GL.GetActiveAttrib(_program,_index,out _size,out _type);
    }
    static unsafe void Test_GetActiveUniform_4557() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformIndex = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.ActiveUniformType _type = default(OpenTK.Graphics.ES20.ActiveUniformType);
        System.String r = OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_uniformIndex,out _size,out _type);
    }
    static unsafe void Test_GetActiveUniform_4558() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformIndex = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES20.All _type = default(OpenTK.Graphics.ES20.All);
        System.String r = OpenTK.Graphics.ES20.GL.GetActiveUniform(_program,_uniformIndex,out _size,out _type);
    }
    static unsafe void Test_ShaderSource_4559() {
        System.Int32 _shader = default(System.Int32);
        System.String _string = default(System.String);
        OpenTK.Graphics.ES20.GL.ShaderSource(_shader,_string);
    }
    static unsafe void Test_GetShaderInfoLog_4560() {
        System.Int32 _shader = default(System.Int32);
        System.String r = OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader);
    }
    static unsafe void Test_GetShaderInfoLog_4561() {
        System.Int32 _shader = default(System.Int32);
        System.String _info = default(System.String);
        OpenTK.Graphics.ES20.GL.GetShaderInfoLog(_shader,out _info);
    }
    static unsafe void Test_GetProgramInfoLog_4562() {
        System.Int32 _program = default(System.Int32);
        System.String r = OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program);
    }
    static unsafe void Test_GetProgramInfoLog_4563() {
        System.Int32 _program = default(System.Int32);
        System.String _info = default(System.String);
        OpenTK.Graphics.ES20.GL.GetProgramInfoLog(_program,out _info);
    }
    static unsafe void Test_VertexAttrib2_4564() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector2 _v = default(OpenTK.Vector2);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib3_4565() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector3 _v = default(OpenTK.Vector3);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib4_4566() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector4 _v = default(OpenTK.Vector4);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib2_4567() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector2 _v = default(OpenTK.Vector2);
        OpenTK.Graphics.ES20.GL.VertexAttrib2(_index,_v);
    }
    static unsafe void Test_VertexAttrib3_4568() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector3 _v = default(OpenTK.Vector3);
        OpenTK.Graphics.ES20.GL.VertexAttrib3(_index,_v);
    }
    static unsafe void Test_VertexAttrib4_4569() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector4 _v = default(OpenTK.Vector4);
        OpenTK.Graphics.ES20.GL.VertexAttrib4(_index,_v);
    }
    static unsafe void Test_DrawElements_4570() {
        OpenTK.Graphics.ES20.BeginMode _mode = default(OpenTK.Graphics.ES20.BeginMode);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES20.DrawElementsType _type = default(OpenTK.Graphics.ES20.DrawElementsType);
        System.Int32 _offset = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DrawElements(_mode,_count,_type,_offset);
    }
    static unsafe void Test_GenTexture_4571() {
        System.Int32 r = OpenTK.Graphics.ES20.GL.GenTexture();
    }
    static unsafe void Test_DeleteTexture_4572() {
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES20.GL.DeleteTexture(_id);
    }
    static unsafe void Test_Viewport_4573() {
        System.Drawing.Size _size = default(System.Drawing.Size);
        OpenTK.Graphics.ES20.GL.Viewport(_size);
    }
    static unsafe void Test_Viewport_4574() {
        System.Drawing.Point _location = default(System.Drawing.Point);
        System.Drawing.Size _size = default(System.Drawing.Size);
        OpenTK.Graphics.ES20.GL.Viewport(_location,_size);
    }
    static unsafe void Test_Viewport_4575() {
        System.Drawing.Rectangle _rectangle = default(System.Drawing.Rectangle);
        OpenTK.Graphics.ES20.GL.Viewport(_rectangle);
    }
    static void Test_ActiveAttribType_4576() {
        var _Float = OpenTK.Graphics.ES30.ActiveAttribType.Float;
        var _FloatVec2 = OpenTK.Graphics.ES30.ActiveAttribType.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES30.ActiveAttribType.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES30.ActiveAttribType.FloatVec4;
        var _FloatMat2 = OpenTK.Graphics.ES30.ActiveAttribType.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES30.ActiveAttribType.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES30.ActiveAttribType.FloatMat4;
    }
    static void Test_ActiveUniformType_4577() {
        var _Int = OpenTK.Graphics.ES30.ActiveUniformType.Int;
        var _Float = OpenTK.Graphics.ES30.ActiveUniformType.Float;
        var _FloatVec2 = OpenTK.Graphics.ES30.ActiveUniformType.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES30.ActiveUniformType.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES30.ActiveUniformType.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES30.ActiveUniformType.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES30.ActiveUniformType.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES30.ActiveUniformType.IntVec4;
        var _Bool = OpenTK.Graphics.ES30.ActiveUniformType.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES30.ActiveUniformType.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES30.ActiveUniformType.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES30.ActiveUniformType.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES30.ActiveUniformType.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES30.ActiveUniformType.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES30.ActiveUniformType.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES30.ActiveUniformType.Sampler2D;
        var _SamplerCube = OpenTK.Graphics.ES30.ActiveUniformType.SamplerCube;
    }
    static void Test_All_4578() {
        var _False = OpenTK.Graphics.ES30.All.False;
        var _NoError = OpenTK.Graphics.ES30.All.NoError;
        var _None = OpenTK.Graphics.ES30.All.None;
        var _Zero = OpenTK.Graphics.ES30.All.Zero;
        var _Points = OpenTK.Graphics.ES30.All.Points;
        var _SyncFlushCommandsBit = OpenTK.Graphics.ES30.All.SyncFlushCommandsBit;
        var _DepthBufferBit = OpenTK.Graphics.ES30.All.DepthBufferBit;
        var _StencilBufferBit = OpenTK.Graphics.ES30.All.StencilBufferBit;
        var _ColorBufferBit = OpenTK.Graphics.ES30.All.ColorBufferBit;
        var _Lines = OpenTK.Graphics.ES30.All.Lines;
        var _MapReadBit = OpenTK.Graphics.ES30.All.MapReadBit;
        var _LineLoop = OpenTK.Graphics.ES30.All.LineLoop;
        var _MapWriteBit = OpenTK.Graphics.ES30.All.MapWriteBit;
        var _LineStrip = OpenTK.Graphics.ES30.All.LineStrip;
        var _MapInvalidateRangeBit = OpenTK.Graphics.ES30.All.MapInvalidateRangeBit;
        var _Triangles = OpenTK.Graphics.ES30.All.Triangles;
        var _TriangleStrip = OpenTK.Graphics.ES30.All.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES30.All.TriangleFan;
        var _MapInvalidateBufferBit = OpenTK.Graphics.ES30.All.MapInvalidateBufferBit;
        var _MapFlushExplicitBit = OpenTK.Graphics.ES30.All.MapFlushExplicitBit;
        var _MapUnsynchronizedBit = OpenTK.Graphics.ES30.All.MapUnsynchronizedBit;
        var _Never = OpenTK.Graphics.ES30.All.Never;
        var _Less = OpenTK.Graphics.ES30.All.Less;
        var _Equal = OpenTK.Graphics.ES30.All.Equal;
        var _Lequal = OpenTK.Graphics.ES30.All.Lequal;
        var _Greater = OpenTK.Graphics.ES30.All.Greater;
        var _Notequal = OpenTK.Graphics.ES30.All.Notequal;
        var _Gequal = OpenTK.Graphics.ES30.All.Gequal;
        var _Always = OpenTK.Graphics.ES30.All.Always;
        var _SrcColor = OpenTK.Graphics.ES30.All.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES30.All.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES30.All.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES30.All.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES30.All.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES30.All.OneMinusDstAlpha;
        var _DstColor = OpenTK.Graphics.ES30.All.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES30.All.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES30.All.SrcAlphaSaturate;
        var _Front = OpenTK.Graphics.ES30.All.Front;
        var _Back = OpenTK.Graphics.ES30.All.Back;
        var _FrontAndBack = OpenTK.Graphics.ES30.All.FrontAndBack;
        var _InvalidEnum = OpenTK.Graphics.ES30.All.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES30.All.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES30.All.InvalidOperation;
        var _OutOfMemory = OpenTK.Graphics.ES30.All.OutOfMemory;
        var _InvalidFramebufferOperation = OpenTK.Graphics.ES30.All.InvalidFramebufferOperation;
        var _Cw = OpenTK.Graphics.ES30.All.Cw;
        var _Ccw = OpenTK.Graphics.ES30.All.Ccw;
        var _LineWidth = OpenTK.Graphics.ES30.All.LineWidth;
        var _CullFace = OpenTK.Graphics.ES30.All.CullFace;
        var _CullFaceMode = OpenTK.Graphics.ES30.All.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES30.All.FrontFace;
        var _DepthRange = OpenTK.Graphics.ES30.All.DepthRange;
        var _DepthTest = OpenTK.Graphics.ES30.All.DepthTest;
        var _DepthWritemask = OpenTK.Graphics.ES30.All.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES30.All.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES30.All.DepthFunc;
        var _StencilTest = OpenTK.Graphics.ES30.All.StencilTest;
        var _StencilClearValue = OpenTK.Graphics.ES30.All.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES30.All.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES30.All.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES30.All.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES30.All.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES30.All.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES30.All.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES30.All.StencilWritemask;
        var _Viewport = OpenTK.Graphics.ES30.All.Viewport;
        var _Dither = OpenTK.Graphics.ES30.All.Dither;
        var _Blend = OpenTK.Graphics.ES30.All.Blend;
        var _ReadBuffer = OpenTK.Graphics.ES30.All.ReadBuffer;
        var _ScissorBox = OpenTK.Graphics.ES30.All.ScissorBox;
        var _ScissorTest = OpenTK.Graphics.ES30.All.ScissorTest;
        var _ColorClearValue = OpenTK.Graphics.ES30.All.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES30.All.ColorWritemask;
        var _UnpackRowLength = OpenTK.Graphics.ES30.All.UnpackRowLength;
        var _UnpackSkipRows = OpenTK.Graphics.ES30.All.UnpackSkipRows;
        var _UnpackSkipPixels = OpenTK.Graphics.ES30.All.UnpackSkipPixels;
        var _UnpackAlignment = OpenTK.Graphics.ES30.All.UnpackAlignment;
        var _PackRowLength = OpenTK.Graphics.ES30.All.PackRowLength;
        var _PackSkipRows = OpenTK.Graphics.ES30.All.PackSkipRows;
        var _PackSkipPixels = OpenTK.Graphics.ES30.All.PackSkipPixels;
        var _PackAlignment = OpenTK.Graphics.ES30.All.PackAlignment;
        var _MaxTextureSize = OpenTK.Graphics.ES30.All.MaxTextureSize;
        var _MaxViewportDims = OpenTK.Graphics.ES30.All.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES30.All.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES30.All.RedBits;
        var _GreenBits = OpenTK.Graphics.ES30.All.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES30.All.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES30.All.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES30.All.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES30.All.StencilBits;
        var _Texture2D = OpenTK.Graphics.ES30.All.Texture2D;
        var _DontCare = OpenTK.Graphics.ES30.All.DontCare;
        var _Fastest = OpenTK.Graphics.ES30.All.Fastest;
        var _Nicest = OpenTK.Graphics.ES30.All.Nicest;
        var _Byte = OpenTK.Graphics.ES30.All.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES30.All.UnsignedByte;
        var _Short = OpenTK.Graphics.ES30.All.Short;
        var _UnsignedShort = OpenTK.Graphics.ES30.All.UnsignedShort;
        var _Int = OpenTK.Graphics.ES30.All.Int;
        var _UnsignedInt = OpenTK.Graphics.ES30.All.UnsignedInt;
        var _Float = OpenTK.Graphics.ES30.All.Float;
        var _HalfFloat = OpenTK.Graphics.ES30.All.HalfFloat;
        var _Fixed = OpenTK.Graphics.ES30.All.Fixed;
        var _Invert = OpenTK.Graphics.ES30.All.Invert;
        var _Texture = OpenTK.Graphics.ES30.All.Texture;
        var _Color = OpenTK.Graphics.ES30.All.Color;
        var _Depth = OpenTK.Graphics.ES30.All.Depth;
        var _Stencil = OpenTK.Graphics.ES30.All.Stencil;
        var _DepthComponent = OpenTK.Graphics.ES30.All.DepthComponent;
        var _Red = OpenTK.Graphics.ES30.All.Red;
        var _Green = OpenTK.Graphics.ES30.All.Green;
        var _Blue = OpenTK.Graphics.ES30.All.Blue;
        var _Alpha = OpenTK.Graphics.ES30.All.Alpha;
        var _Rgb = OpenTK.Graphics.ES30.All.Rgb;
        var _Rgba = OpenTK.Graphics.ES30.All.Rgba;
        var _Luminance = OpenTK.Graphics.ES30.All.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES30.All.LuminanceAlpha;
        var _Keep = OpenTK.Graphics.ES30.All.Keep;
        var _Replace = OpenTK.Graphics.ES30.All.Replace;
        var _Incr = OpenTK.Graphics.ES30.All.Incr;
        var _Decr = OpenTK.Graphics.ES30.All.Decr;
        var _Vendor = OpenTK.Graphics.ES30.All.Vendor;
        var _Renderer = OpenTK.Graphics.ES30.All.Renderer;
        var _Version = OpenTK.Graphics.ES30.All.Version;
        var _Extensions = OpenTK.Graphics.ES30.All.Extensions;
        var _Nearest = OpenTK.Graphics.ES30.All.Nearest;
        var _Linear = OpenTK.Graphics.ES30.All.Linear;
        var _NearestMipmapNearest = OpenTK.Graphics.ES30.All.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES30.All.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES30.All.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES30.All.LinearMipmapLinear;
        var _TextureMagFilter = OpenTK.Graphics.ES30.All.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES30.All.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES30.All.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES30.All.TextureWrapT;
        var _Repeat = OpenTK.Graphics.ES30.All.Repeat;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES30.All.PolygonOffsetUnits;
        var _ConstantColor = OpenTK.Graphics.ES30.All.ConstantColor;
        var _OneMinusConstantColor = OpenTK.Graphics.ES30.All.OneMinusConstantColor;
        var _ConstantAlpha = OpenTK.Graphics.ES30.All.ConstantAlpha;
        var _OneMinusConstantAlpha = OpenTK.Graphics.ES30.All.OneMinusConstantAlpha;
        var _BlendColor = OpenTK.Graphics.ES30.All.BlendColor;
        var _FuncAdd = OpenTK.Graphics.ES30.All.FuncAdd;
        var _Min = OpenTK.Graphics.ES30.All.Min;
        var _Max = OpenTK.Graphics.ES30.All.Max;
        var _BlendEquation = OpenTK.Graphics.ES30.All.BlendEquation;
        var _FuncSubtract = OpenTK.Graphics.ES30.All.FuncSubtract;
        var _FuncReverseSubtract = OpenTK.Graphics.ES30.All.FuncReverseSubtract;
        var _UnsignedShort4444 = OpenTK.Graphics.ES30.All.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES30.All.UnsignedShort5551;
        var _PolygonOffsetFill = OpenTK.Graphics.ES30.All.PolygonOffsetFill;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES30.All.PolygonOffsetFactor;
        var _Rgb8 = OpenTK.Graphics.ES30.All.Rgb8;
        var _Rgba4 = OpenTK.Graphics.ES30.All.Rgba4;
        var _Rgb5A1 = OpenTK.Graphics.ES30.All.Rgb5A1;
        var _Rgba8 = OpenTK.Graphics.ES30.All.Rgba8;
        var _Rgb10A2 = OpenTK.Graphics.ES30.All.Rgb10A2;
        var _TextureBinding2D = OpenTK.Graphics.ES30.All.TextureBinding2D;
        var _TextureBinding3D = OpenTK.Graphics.ES30.All.TextureBinding3D;
        var _UnpackSkipImages = OpenTK.Graphics.ES30.All.UnpackSkipImages;
        var _UnpackImageHeight = OpenTK.Graphics.ES30.All.UnpackImageHeight;
        var _Texture3D = OpenTK.Graphics.ES30.All.Texture3D;
        var _TextureWrapR = OpenTK.Graphics.ES30.All.TextureWrapR;
        var _Max3DTextureSize = OpenTK.Graphics.ES30.All.Max3DTextureSize;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES30.All.SampleAlphaToCoverage;
        var _SampleCoverage = OpenTK.Graphics.ES30.All.SampleCoverage;
        var _SampleBuffers = OpenTK.Graphics.ES30.All.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES30.All.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES30.All.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES30.All.SampleCoverageInvert;
        var _BlendDstRgb = OpenTK.Graphics.ES30.All.BlendDstRgb;
        var _BlendSrcRgb = OpenTK.Graphics.ES30.All.BlendSrcRgb;
        var _BlendDstAlpha = OpenTK.Graphics.ES30.All.BlendDstAlpha;
        var _BlendSrcAlpha = OpenTK.Graphics.ES30.All.BlendSrcAlpha;
        var _MaxElementsVertices = OpenTK.Graphics.ES30.All.MaxElementsVertices;
        var _MaxElementsIndices = OpenTK.Graphics.ES30.All.MaxElementsIndices;
        var _ClampToEdge = OpenTK.Graphics.ES30.All.ClampToEdge;
        var _TextureMinLod = OpenTK.Graphics.ES30.All.TextureMinLod;
        var _TextureMaxLod = OpenTK.Graphics.ES30.All.TextureMaxLod;
        var _TextureBaseLevel = OpenTK.Graphics.ES30.All.TextureBaseLevel;
        var _TextureMaxLevel = OpenTK.Graphics.ES30.All.TextureMaxLevel;
        var _GenerateMipmapHint = OpenTK.Graphics.ES30.All.GenerateMipmapHint;
        var _DepthComponent16 = OpenTK.Graphics.ES30.All.DepthComponent16;
        var _DepthComponent24 = OpenTK.Graphics.ES30.All.DepthComponent24;
        var _FramebufferAttachmentColorEncoding = OpenTK.Graphics.ES30.All.FramebufferAttachmentColorEncoding;
        var _FramebufferAttachmentComponentType = OpenTK.Graphics.ES30.All.FramebufferAttachmentComponentType;
        var _FramebufferAttachmentRedSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentRedSize;
        var _FramebufferAttachmentGreenSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentGreenSize;
        var _FramebufferAttachmentBlueSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentBlueSize;
        var _FramebufferAttachmentAlphaSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentAlphaSize;
        var _FramebufferAttachmentDepthSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentDepthSize;
        var _FramebufferAttachmentStencilSize = OpenTK.Graphics.ES30.All.FramebufferAttachmentStencilSize;
        var _FramebufferDefault = OpenTK.Graphics.ES30.All.FramebufferDefault;
        var _FramebufferUndefined = OpenTK.Graphics.ES30.All.FramebufferUndefined;
        var _DepthStencilAttachment = OpenTK.Graphics.ES30.All.DepthStencilAttachment;
        var _MajorVersion = OpenTK.Graphics.ES30.All.MajorVersion;
        var _MinorVersion = OpenTK.Graphics.ES30.All.MinorVersion;
        var _NumExtensions = OpenTK.Graphics.ES30.All.NumExtensions;
        var _Rg = OpenTK.Graphics.ES30.All.Rg;
        var _RgInteger = OpenTK.Graphics.ES30.All.RgInteger;
        var _R8 = OpenTK.Graphics.ES30.All.R8;
        var _Rg8 = OpenTK.Graphics.ES30.All.Rg8;
        var _R16f = OpenTK.Graphics.ES30.All.R16f;
        var _R32f = OpenTK.Graphics.ES30.All.R32f;
        var _Rg16f = OpenTK.Graphics.ES30.All.Rg16f;
        var _Rg32f = OpenTK.Graphics.ES30.All.Rg32f;
        var _R8i = OpenTK.Graphics.ES30.All.R8i;
        var _R8ui = OpenTK.Graphics.ES30.All.R8ui;
        var _R16i = OpenTK.Graphics.ES30.All.R16i;
        var _R16ui = OpenTK.Graphics.ES30.All.R16ui;
        var _R32i = OpenTK.Graphics.ES30.All.R32i;
        var _R32ui = OpenTK.Graphics.ES30.All.R32ui;
        var _Rg8i = OpenTK.Graphics.ES30.All.Rg8i;
        var _Rg8ui = OpenTK.Graphics.ES30.All.Rg8ui;
        var _Rg16i = OpenTK.Graphics.ES30.All.Rg16i;
        var _Rg16ui = OpenTK.Graphics.ES30.All.Rg16ui;
        var _Rg32i = OpenTK.Graphics.ES30.All.Rg32i;
        var _Rg32ui = OpenTK.Graphics.ES30.All.Rg32ui;
        var _ProgramBinaryRetrievableHint = OpenTK.Graphics.ES30.All.ProgramBinaryRetrievableHint;
        var _TextureImmutableLevels = OpenTK.Graphics.ES30.All.TextureImmutableLevels;
        var _UnsignedShort565 = OpenTK.Graphics.ES30.All.UnsignedShort565;
        var _UnsignedInt2101010Rev = OpenTK.Graphics.ES30.All.UnsignedInt2101010Rev;
        var _MirroredRepeat = OpenTK.Graphics.ES30.All.MirroredRepeat;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES30.All.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES30.All.AliasedLineWidthRange;
        var _Texture0 = OpenTK.Graphics.ES30.All.Texture0;
        var _Texture1 = OpenTK.Graphics.ES30.All.Texture1;
        var _Texture2 = OpenTK.Graphics.ES30.All.Texture2;
        var _Texture3 = OpenTK.Graphics.ES30.All.Texture3;
        var _Texture4 = OpenTK.Graphics.ES30.All.Texture4;
        var _Texture5 = OpenTK.Graphics.ES30.All.Texture5;
        var _Texture6 = OpenTK.Graphics.ES30.All.Texture6;
        var _Texture7 = OpenTK.Graphics.ES30.All.Texture7;
        var _Texture8 = OpenTK.Graphics.ES30.All.Texture8;
        var _Texture9 = OpenTK.Graphics.ES30.All.Texture9;
        var _Texture10 = OpenTK.Graphics.ES30.All.Texture10;
        var _Texture11 = OpenTK.Graphics.ES30.All.Texture11;
        var _Texture12 = OpenTK.Graphics.ES30.All.Texture12;
        var _Texture13 = OpenTK.Graphics.ES30.All.Texture13;
        var _Texture14 = OpenTK.Graphics.ES30.All.Texture14;
        var _Texture15 = OpenTK.Graphics.ES30.All.Texture15;
        var _Texture16 = OpenTK.Graphics.ES30.All.Texture16;
        var _Texture17 = OpenTK.Graphics.ES30.All.Texture17;
        var _Texture18 = OpenTK.Graphics.ES30.All.Texture18;
        var _Texture19 = OpenTK.Graphics.ES30.All.Texture19;
        var _Texture20 = OpenTK.Graphics.ES30.All.Texture20;
        var _Texture21 = OpenTK.Graphics.ES30.All.Texture21;
        var _Texture22 = OpenTK.Graphics.ES30.All.Texture22;
        var _Texture23 = OpenTK.Graphics.ES30.All.Texture23;
        var _Texture24 = OpenTK.Graphics.ES30.All.Texture24;
        var _Texture25 = OpenTK.Graphics.ES30.All.Texture25;
        var _Texture26 = OpenTK.Graphics.ES30.All.Texture26;
        var _Texture27 = OpenTK.Graphics.ES30.All.Texture27;
        var _Texture28 = OpenTK.Graphics.ES30.All.Texture28;
        var _Texture29 = OpenTK.Graphics.ES30.All.Texture29;
        var _Texture30 = OpenTK.Graphics.ES30.All.Texture30;
        var _Texture31 = OpenTK.Graphics.ES30.All.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES30.All.ActiveTexture;
        var _MaxRenderbufferSize = OpenTK.Graphics.ES30.All.MaxRenderbufferSize;
        var _DepthStencil = OpenTK.Graphics.ES30.All.DepthStencil;
        var _UnsignedInt248 = OpenTK.Graphics.ES30.All.UnsignedInt248;
        var _MaxTextureLodBias = OpenTK.Graphics.ES30.All.MaxTextureLodBias;
        var _IncrWrap = OpenTK.Graphics.ES30.All.IncrWrap;
        var _DecrWrap = OpenTK.Graphics.ES30.All.DecrWrap;
        var _TextureCubeMap = OpenTK.Graphics.ES30.All.TextureCubeMap;
        var _TextureBindingCubeMap = OpenTK.Graphics.ES30.All.TextureBindingCubeMap;
        var _TextureCubeMapPositiveX = OpenTK.Graphics.ES30.All.TextureCubeMapPositiveX;
        var _TextureCubeMapNegativeX = OpenTK.Graphics.ES30.All.TextureCubeMapNegativeX;
        var _TextureCubeMapPositiveY = OpenTK.Graphics.ES30.All.TextureCubeMapPositiveY;
        var _TextureCubeMapNegativeY = OpenTK.Graphics.ES30.All.TextureCubeMapNegativeY;
        var _TextureCubeMapPositiveZ = OpenTK.Graphics.ES30.All.TextureCubeMapPositiveZ;
        var _TextureCubeMapNegativeZ = OpenTK.Graphics.ES30.All.TextureCubeMapNegativeZ;
        var _MaxCubeMapTextureSize = OpenTK.Graphics.ES30.All.MaxCubeMapTextureSize;
        var _VertexArrayBinding = OpenTK.Graphics.ES30.All.VertexArrayBinding;
        var _VertexAttribArrayEnabled = OpenTK.Graphics.ES30.All.VertexAttribArrayEnabled;
        var _VertexAttribArraySize = OpenTK.Graphics.ES30.All.VertexAttribArraySize;
        var _VertexAttribArrayStride = OpenTK.Graphics.ES30.All.VertexAttribArrayStride;
        var _VertexAttribArrayType = OpenTK.Graphics.ES30.All.VertexAttribArrayType;
        var _CurrentVertexAttrib = OpenTK.Graphics.ES30.All.CurrentVertexAttrib;
        var _VertexAttribArrayPointer = OpenTK.Graphics.ES30.All.VertexAttribArrayPointer;
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES30.All.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES30.All.CompressedTextureFormats;
        var _ProgramBinaryLength = OpenTK.Graphics.ES30.All.ProgramBinaryLength;
        var _BufferSize = OpenTK.Graphics.ES30.All.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES30.All.BufferUsage;
        var _NumProgramBinaryFormats = OpenTK.Graphics.ES30.All.NumProgramBinaryFormats;
        var _ProgramBinaryFormats = OpenTK.Graphics.ES30.All.ProgramBinaryFormats;
        var _StencilBackFunc = OpenTK.Graphics.ES30.All.StencilBackFunc;
        var _StencilBackFail = OpenTK.Graphics.ES30.All.StencilBackFail;
        var _StencilBackPassDepthFail = OpenTK.Graphics.ES30.All.StencilBackPassDepthFail;
        var _StencilBackPassDepthPass = OpenTK.Graphics.ES30.All.StencilBackPassDepthPass;
        var _Rgba32f = OpenTK.Graphics.ES30.All.Rgba32f;
        var _Rgb32f = OpenTK.Graphics.ES30.All.Rgb32f;
        var _Rgba16f = OpenTK.Graphics.ES30.All.Rgba16f;
        var _Rgb16f = OpenTK.Graphics.ES30.All.Rgb16f;
        var _MaxDrawBuffers = OpenTK.Graphics.ES30.All.MaxDrawBuffers;
        var _DrawBuffer0 = OpenTK.Graphics.ES30.All.DrawBuffer0;
        var _DrawBuffer1 = OpenTK.Graphics.ES30.All.DrawBuffer1;
        var _DrawBuffer2 = OpenTK.Graphics.ES30.All.DrawBuffer2;
        var _DrawBuffer3 = OpenTK.Graphics.ES30.All.DrawBuffer3;
        var _DrawBuffer4 = OpenTK.Graphics.ES30.All.DrawBuffer4;
        var _DrawBuffer5 = OpenTK.Graphics.ES30.All.DrawBuffer5;
        var _DrawBuffer6 = OpenTK.Graphics.ES30.All.DrawBuffer6;
        var _DrawBuffer7 = OpenTK.Graphics.ES30.All.DrawBuffer7;
        var _DrawBuffer8 = OpenTK.Graphics.ES30.All.DrawBuffer8;
        var _DrawBuffer9 = OpenTK.Graphics.ES30.All.DrawBuffer9;
        var _DrawBuffer10 = OpenTK.Graphics.ES30.All.DrawBuffer10;
        var _DrawBuffer11 = OpenTK.Graphics.ES30.All.DrawBuffer11;
        var _DrawBuffer12 = OpenTK.Graphics.ES30.All.DrawBuffer12;
        var _DrawBuffer13 = OpenTK.Graphics.ES30.All.DrawBuffer13;
        var _DrawBuffer14 = OpenTK.Graphics.ES30.All.DrawBuffer14;
        var _DrawBuffer15 = OpenTK.Graphics.ES30.All.DrawBuffer15;
        var _BlendEquationAlpha = OpenTK.Graphics.ES30.All.BlendEquationAlpha;
        var _TextureCompareMode = OpenTK.Graphics.ES30.All.TextureCompareMode;
        var _TextureCompareFunc = OpenTK.Graphics.ES30.All.TextureCompareFunc;
        var _CompareRefToTexture = OpenTK.Graphics.ES30.All.CompareRefToTexture;
        var _CurrentQuery = OpenTK.Graphics.ES30.All.CurrentQuery;
        var _QueryResult = OpenTK.Graphics.ES30.All.QueryResult;
        var _QueryResultAvailable = OpenTK.Graphics.ES30.All.QueryResultAvailable;
        var _MaxVertexAttribs = OpenTK.Graphics.ES30.All.MaxVertexAttribs;
        var _VertexAttribArrayNormalized = OpenTK.Graphics.ES30.All.VertexAttribArrayNormalized;
        var _MaxTextureImageUnits = OpenTK.Graphics.ES30.All.MaxTextureImageUnits;
        var _ArrayBuffer = OpenTK.Graphics.ES30.All.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES30.All.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES30.All.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES30.All.ElementArrayBufferBinding;
        var _VertexAttribArrayBufferBinding = OpenTK.Graphics.ES30.All.VertexAttribArrayBufferBinding;
        var _BufferMapped = OpenTK.Graphics.ES30.All.BufferMapped;
        var _BufferMapPointer = OpenTK.Graphics.ES30.All.BufferMapPointer;
        var _StreamDraw = OpenTK.Graphics.ES30.All.StreamDraw;
        var _StreamRead = OpenTK.Graphics.ES30.All.StreamRead;
        var _StreamCopy = OpenTK.Graphics.ES30.All.StreamCopy;
        var _StaticDraw = OpenTK.Graphics.ES30.All.StaticDraw;
        var _StaticRead = OpenTK.Graphics.ES30.All.StaticRead;
        var _StaticCopy = OpenTK.Graphics.ES30.All.StaticCopy;
        var _DynamicDraw = OpenTK.Graphics.ES30.All.DynamicDraw;
        var _DynamicRead = OpenTK.Graphics.ES30.All.DynamicRead;
        var _DynamicCopy = OpenTK.Graphics.ES30.All.DynamicCopy;
        var _PixelPackBuffer = OpenTK.Graphics.ES30.All.PixelPackBuffer;
        var _PixelUnpackBuffer = OpenTK.Graphics.ES30.All.PixelUnpackBuffer;
        var _PixelPackBufferBinding = OpenTK.Graphics.ES30.All.PixelPackBufferBinding;
        var _PixelUnpackBufferBinding = OpenTK.Graphics.ES30.All.PixelUnpackBufferBinding;
        var _Depth24Stencil8 = OpenTK.Graphics.ES30.All.Depth24Stencil8;
        var _VertexAttribArrayInteger = OpenTK.Graphics.ES30.All.VertexAttribArrayInteger;
        var _VertexAttribArrayDivisor = OpenTK.Graphics.ES30.All.VertexAttribArrayDivisor;
        var _MaxArrayTextureLayers = OpenTK.Graphics.ES30.All.MaxArrayTextureLayers;
        var _MinProgramTexelOffset = OpenTK.Graphics.ES30.All.MinProgramTexelOffset;
        var _MaxProgramTexelOffset = OpenTK.Graphics.ES30.All.MaxProgramTexelOffset;
        var _SamplerBinding = OpenTK.Graphics.ES30.All.SamplerBinding;
        var _UniformBuffer = OpenTK.Graphics.ES30.All.UniformBuffer;
        var _UniformBufferBinding = OpenTK.Graphics.ES30.All.UniformBufferBinding;
        var _UniformBufferStart = OpenTK.Graphics.ES30.All.UniformBufferStart;
        var _UniformBufferSize = OpenTK.Graphics.ES30.All.UniformBufferSize;
        var _MaxVertexUniformBlocks = OpenTK.Graphics.ES30.All.MaxVertexUniformBlocks;
        var _MaxFragmentUniformBlocks = OpenTK.Graphics.ES30.All.MaxFragmentUniformBlocks;
        var _MaxCombinedUniformBlocks = OpenTK.Graphics.ES30.All.MaxCombinedUniformBlocks;
        var _MaxUniformBufferBindings = OpenTK.Graphics.ES30.All.MaxUniformBufferBindings;
        var _MaxUniformBlockSize = OpenTK.Graphics.ES30.All.MaxUniformBlockSize;
        var _MaxCombinedVertexUniformComponents = OpenTK.Graphics.ES30.All.MaxCombinedVertexUniformComponents;
        var _MaxCombinedFragmentUniformComponents = OpenTK.Graphics.ES30.All.MaxCombinedFragmentUniformComponents;
        var _UniformBufferOffsetAlignment = OpenTK.Graphics.ES30.All.UniformBufferOffsetAlignment;
        var _ActiveUniformBlockMaxNameLength = OpenTK.Graphics.ES30.All.ActiveUniformBlockMaxNameLength;
        var _ActiveUniformBlocks = OpenTK.Graphics.ES30.All.ActiveUniformBlocks;
        var _UniformType = OpenTK.Graphics.ES30.All.UniformType;
        var _UniformSize = OpenTK.Graphics.ES30.All.UniformSize;
        var _UniformNameLength = OpenTK.Graphics.ES30.All.UniformNameLength;
        var _UniformBlockIndex = OpenTK.Graphics.ES30.All.UniformBlockIndex;
        var _UniformOffset = OpenTK.Graphics.ES30.All.UniformOffset;
        var _UniformArrayStride = OpenTK.Graphics.ES30.All.UniformArrayStride;
        var _UniformMatrixStride = OpenTK.Graphics.ES30.All.UniformMatrixStride;
        var _UniformIsRowMajor = OpenTK.Graphics.ES30.All.UniformIsRowMajor;
        var _UniformBlockBinding = OpenTK.Graphics.ES30.All.UniformBlockBinding;
        var _UniformBlockDataSize = OpenTK.Graphics.ES30.All.UniformBlockDataSize;
        var _UniformBlockNameLength = OpenTK.Graphics.ES30.All.UniformBlockNameLength;
        var _UniformBlockActiveUniforms = OpenTK.Graphics.ES30.All.UniformBlockActiveUniforms;
        var _UniformBlockActiveUniformIndices = OpenTK.Graphics.ES30.All.UniformBlockActiveUniformIndices;
        var _UniformBlockReferencedByVertexShader = OpenTK.Graphics.ES30.All.UniformBlockReferencedByVertexShader;
        var _UniformBlockReferencedByFragmentShader = OpenTK.Graphics.ES30.All.UniformBlockReferencedByFragmentShader;
        var _FragmentShader = OpenTK.Graphics.ES30.All.FragmentShader;
        var _VertexShader = OpenTK.Graphics.ES30.All.VertexShader;
        var _MaxFragmentUniformComponents = OpenTK.Graphics.ES30.All.MaxFragmentUniformComponents;
        var _MaxVertexUniformComponents = OpenTK.Graphics.ES30.All.MaxVertexUniformComponents;
        var _MaxVaryingComponents = OpenTK.Graphics.ES30.All.MaxVaryingComponents;
        var _MaxVertexTextureImageUnits = OpenTK.Graphics.ES30.All.MaxVertexTextureImageUnits;
        var _MaxCombinedTextureImageUnits = OpenTK.Graphics.ES30.All.MaxCombinedTextureImageUnits;
        var _ShaderType = OpenTK.Graphics.ES30.All.ShaderType;
        var _FloatVec2 = OpenTK.Graphics.ES30.All.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES30.All.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES30.All.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES30.All.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES30.All.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES30.All.IntVec4;
        var _Bool = OpenTK.Graphics.ES30.All.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES30.All.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES30.All.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES30.All.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES30.All.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES30.All.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES30.All.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES30.All.Sampler2D;
        var _Sampler3D = OpenTK.Graphics.ES30.All.Sampler3D;
        var _SamplerCube = OpenTK.Graphics.ES30.All.SamplerCube;
        var _Sampler2DShadow = OpenTK.Graphics.ES30.All.Sampler2DShadow;
        var _FloatMat2x3 = OpenTK.Graphics.ES30.All.FloatMat2x3;
        var _FloatMat2x4 = OpenTK.Graphics.ES30.All.FloatMat2x4;
        var _FloatMat3x2 = OpenTK.Graphics.ES30.All.FloatMat3x2;
        var _FloatMat3x4 = OpenTK.Graphics.ES30.All.FloatMat3x4;
        var _FloatMat4x2 = OpenTK.Graphics.ES30.All.FloatMat4x2;
        var _FloatMat4x3 = OpenTK.Graphics.ES30.All.FloatMat4x3;
        var _DeleteStatus = OpenTK.Graphics.ES30.All.DeleteStatus;
        var _CompileStatus = OpenTK.Graphics.ES30.All.CompileStatus;
        var _LinkStatus = OpenTK.Graphics.ES30.All.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES30.All.ValidateStatus;
        var _InfoLogLength = OpenTK.Graphics.ES30.All.InfoLogLength;
        var _AttachedShaders = OpenTK.Graphics.ES30.All.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES30.All.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES30.All.ActiveUniformMaxLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES30.All.ShaderSourceLength;
        var _ActiveAttributes = OpenTK.Graphics.ES30.All.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES30.All.ActiveAttributeMaxLength;
        var _FragmentShaderDerivativeHint = OpenTK.Graphics.ES30.All.FragmentShaderDerivativeHint;
        var _ShadingLanguageVersion = OpenTK.Graphics.ES30.All.ShadingLanguageVersion;
        var _CurrentProgram = OpenTK.Graphics.ES30.All.CurrentProgram;
        var _ImplementationColorReadType = OpenTK.Graphics.ES30.All.ImplementationColorReadType;
        var _ImplementationColorReadFormat = OpenTK.Graphics.ES30.All.ImplementationColorReadFormat;
        var _UnsignedNormalized = OpenTK.Graphics.ES30.All.UnsignedNormalized;
        var _Texture2DArray = OpenTK.Graphics.ES30.All.Texture2DArray;
        var _TextureBinding2DArray = OpenTK.Graphics.ES30.All.TextureBinding2DArray;
        var _AnySamplesPassed = OpenTK.Graphics.ES30.All.AnySamplesPassed;
        var _R11fG11fB10f = OpenTK.Graphics.ES30.All.R11fG11fB10f;
        var _UnsignedInt10F11F11FRev = OpenTK.Graphics.ES30.All.UnsignedInt10F11F11FRev;
        var _Rgb9E5 = OpenTK.Graphics.ES30.All.Rgb9E5;
        var _UnsignedInt5999Rev = OpenTK.Graphics.ES30.All.UnsignedInt5999Rev;
        var _Srgb = OpenTK.Graphics.ES30.All.Srgb;
        var _Srgb8 = OpenTK.Graphics.ES30.All.Srgb8;
        var _Srgb8Alpha8 = OpenTK.Graphics.ES30.All.Srgb8Alpha8;
        var _TransformFeedbackVaryingMaxLength = OpenTK.Graphics.ES30.All.TransformFeedbackVaryingMaxLength;
        var _TransformFeedbackBufferMode = OpenTK.Graphics.ES30.All.TransformFeedbackBufferMode;
        var _MaxTransformFeedbackSeparateComponents = OpenTK.Graphics.ES30.All.MaxTransformFeedbackSeparateComponents;
        var _TransformFeedbackVaryings = OpenTK.Graphics.ES30.All.TransformFeedbackVaryings;
        var _TransformFeedbackBufferStart = OpenTK.Graphics.ES30.All.TransformFeedbackBufferStart;
        var _TransformFeedbackBufferSize = OpenTK.Graphics.ES30.All.TransformFeedbackBufferSize;
        var _TransformFeedbackPrimitivesWritten = OpenTK.Graphics.ES30.All.TransformFeedbackPrimitivesWritten;
        var _RasterizerDiscard = OpenTK.Graphics.ES30.All.RasterizerDiscard;
        var _MaxTransformFeedbackInterleavedComponents = OpenTK.Graphics.ES30.All.MaxTransformFeedbackInterleavedComponents;
        var _MaxTransformFeedbackSeparateAttribs = OpenTK.Graphics.ES30.All.MaxTransformFeedbackSeparateAttribs;
        var _InterleavedAttribs = OpenTK.Graphics.ES30.All.InterleavedAttribs;
        var _SeparateAttribs = OpenTK.Graphics.ES30.All.SeparateAttribs;
        var _TransformFeedbackBuffer = OpenTK.Graphics.ES30.All.TransformFeedbackBuffer;
        var _TransformFeedbackBufferBinding = OpenTK.Graphics.ES30.All.TransformFeedbackBufferBinding;
        var _StencilBackRef = OpenTK.Graphics.ES30.All.StencilBackRef;
        var _StencilBackValueMask = OpenTK.Graphics.ES30.All.StencilBackValueMask;
        var _StencilBackWritemask = OpenTK.Graphics.ES30.All.StencilBackWritemask;
        var _FramebufferBinding = OpenTK.Graphics.ES30.All.FramebufferBinding;
        var _RenderbufferBinding = OpenTK.Graphics.ES30.All.RenderbufferBinding;
        var _ReadFramebuffer = OpenTK.Graphics.ES30.All.ReadFramebuffer;
        var _DrawFramebuffer = OpenTK.Graphics.ES30.All.DrawFramebuffer;
        var _ReadFramebufferBinding = OpenTK.Graphics.ES30.All.ReadFramebufferBinding;
        var _RenderbufferSamples = OpenTK.Graphics.ES30.All.RenderbufferSamples;
        var _DepthComponent32f = OpenTK.Graphics.ES30.All.DepthComponent32f;
        var _Depth32fStencil8 = OpenTK.Graphics.ES30.All.Depth32fStencil8;
        var _FramebufferAttachmentObjectType = OpenTK.Graphics.ES30.All.FramebufferAttachmentObjectType;
        var _FramebufferAttachmentObjectName = OpenTK.Graphics.ES30.All.FramebufferAttachmentObjectName;
        var _FramebufferAttachmentTextureLevel = OpenTK.Graphics.ES30.All.FramebufferAttachmentTextureLevel;
        var _FramebufferAttachmentTextureCubeMapFace = OpenTK.Graphics.ES30.All.FramebufferAttachmentTextureCubeMapFace;
        var _FramebufferAttachmentTextureLayer = OpenTK.Graphics.ES30.All.FramebufferAttachmentTextureLayer;
        var _FramebufferComplete = OpenTK.Graphics.ES30.All.FramebufferComplete;
        var _FramebufferIncompleteAttachment = OpenTK.Graphics.ES30.All.FramebufferIncompleteAttachment;
        var _FramebufferIncompleteMissingAttachment = OpenTK.Graphics.ES30.All.FramebufferIncompleteMissingAttachment;
        var _FramebufferIncompleteDimensions = OpenTK.Graphics.ES30.All.FramebufferIncompleteDimensions;
        var _FramebufferUnsupported = OpenTK.Graphics.ES30.All.FramebufferUnsupported;
        var _MaxColorAttachments = OpenTK.Graphics.ES30.All.MaxColorAttachments;
        var _ColorAttachment0 = OpenTK.Graphics.ES30.All.ColorAttachment0;
        var _ColorAttachment1 = OpenTK.Graphics.ES30.All.ColorAttachment1;
        var _ColorAttachment2 = OpenTK.Graphics.ES30.All.ColorAttachment2;
        var _ColorAttachment3 = OpenTK.Graphics.ES30.All.ColorAttachment3;
        var _ColorAttachment4 = OpenTK.Graphics.ES30.All.ColorAttachment4;
        var _ColorAttachment5 = OpenTK.Graphics.ES30.All.ColorAttachment5;
        var _ColorAttachment6 = OpenTK.Graphics.ES30.All.ColorAttachment6;
        var _ColorAttachment7 = OpenTK.Graphics.ES30.All.ColorAttachment7;
        var _ColorAttachment8 = OpenTK.Graphics.ES30.All.ColorAttachment8;
        var _ColorAttachment9 = OpenTK.Graphics.ES30.All.ColorAttachment9;
        var _ColorAttachment10 = OpenTK.Graphics.ES30.All.ColorAttachment10;
        var _ColorAttachment11 = OpenTK.Graphics.ES30.All.ColorAttachment11;
        var _ColorAttachment12 = OpenTK.Graphics.ES30.All.ColorAttachment12;
        var _ColorAttachment13 = OpenTK.Graphics.ES30.All.ColorAttachment13;
        var _ColorAttachment14 = OpenTK.Graphics.ES30.All.ColorAttachment14;
        var _ColorAttachment15 = OpenTK.Graphics.ES30.All.ColorAttachment15;
        var _DepthAttachment = OpenTK.Graphics.ES30.All.DepthAttachment;
        var _StencilAttachment = OpenTK.Graphics.ES30.All.StencilAttachment;
        var _Framebuffer = OpenTK.Graphics.ES30.All.Framebuffer;
        var _Renderbuffer = OpenTK.Graphics.ES30.All.Renderbuffer;
        var _RenderbufferWidth = OpenTK.Graphics.ES30.All.RenderbufferWidth;
        var _RenderbufferHeight = OpenTK.Graphics.ES30.All.RenderbufferHeight;
        var _RenderbufferInternalFormat = OpenTK.Graphics.ES30.All.RenderbufferInternalFormat;
        var _StencilIndex8 = OpenTK.Graphics.ES30.All.StencilIndex8;
        var _RenderbufferRedSize = OpenTK.Graphics.ES30.All.RenderbufferRedSize;
        var _RenderbufferGreenSize = OpenTK.Graphics.ES30.All.RenderbufferGreenSize;
        var _RenderbufferBlueSize = OpenTK.Graphics.ES30.All.RenderbufferBlueSize;
        var _RenderbufferAlphaSize = OpenTK.Graphics.ES30.All.RenderbufferAlphaSize;
        var _RenderbufferDepthSize = OpenTK.Graphics.ES30.All.RenderbufferDepthSize;
        var _RenderbufferStencilSize = OpenTK.Graphics.ES30.All.RenderbufferStencilSize;
        var _FramebufferIncompleteMultisample = OpenTK.Graphics.ES30.All.FramebufferIncompleteMultisample;
        var _MaxSamples = OpenTK.Graphics.ES30.All.MaxSamples;
        var _Rgb565 = OpenTK.Graphics.ES30.All.Rgb565;
        var _PrimitiveRestartFixedIndex = OpenTK.Graphics.ES30.All.PrimitiveRestartFixedIndex;
        var _AnySamplesPassedConservative = OpenTK.Graphics.ES30.All.AnySamplesPassedConservative;
        var _MaxElementIndex = OpenTK.Graphics.ES30.All.MaxElementIndex;
        var _Rgba32ui = OpenTK.Graphics.ES30.All.Rgba32ui;
        var _Rgb32ui = OpenTK.Graphics.ES30.All.Rgb32ui;
        var _Rgba16ui = OpenTK.Graphics.ES30.All.Rgba16ui;
        var _Rgb16ui = OpenTK.Graphics.ES30.All.Rgb16ui;
        var _Rgba8ui = OpenTK.Graphics.ES30.All.Rgba8ui;
        var _Rgb8ui = OpenTK.Graphics.ES30.All.Rgb8ui;
        var _Rgba32i = OpenTK.Graphics.ES30.All.Rgba32i;
        var _Rgb32i = OpenTK.Graphics.ES30.All.Rgb32i;
        var _Rgba16i = OpenTK.Graphics.ES30.All.Rgba16i;
        var _Rgb16i = OpenTK.Graphics.ES30.All.Rgb16i;
        var _Rgba8i = OpenTK.Graphics.ES30.All.Rgba8i;
        var _Rgb8i = OpenTK.Graphics.ES30.All.Rgb8i;
        var _RedInteger = OpenTK.Graphics.ES30.All.RedInteger;
        var _RgbInteger = OpenTK.Graphics.ES30.All.RgbInteger;
        var _RgbaInteger = OpenTK.Graphics.ES30.All.RgbaInteger;
        var _Int2101010Rev = OpenTK.Graphics.ES30.All.Int2101010Rev;
        var _Float32UnsignedInt248Rev = OpenTK.Graphics.ES30.All.Float32UnsignedInt248Rev;
        var _Sampler2DArray = OpenTK.Graphics.ES30.All.Sampler2DArray;
        var _Sampler2DArrayShadow = OpenTK.Graphics.ES30.All.Sampler2DArrayShadow;
        var _SamplerCubeShadow = OpenTK.Graphics.ES30.All.SamplerCubeShadow;
        var _UnsignedIntVec2 = OpenTK.Graphics.ES30.All.UnsignedIntVec2;
        var _UnsignedIntVec3 = OpenTK.Graphics.ES30.All.UnsignedIntVec3;
        var _UnsignedIntVec4 = OpenTK.Graphics.ES30.All.UnsignedIntVec4;
        var _IntSampler2D = OpenTK.Graphics.ES30.All.IntSampler2D;
        var _IntSampler3D = OpenTK.Graphics.ES30.All.IntSampler3D;
        var _IntSamplerCube = OpenTK.Graphics.ES30.All.IntSamplerCube;
        var _IntSampler2DArray = OpenTK.Graphics.ES30.All.IntSampler2DArray;
        var _UnsignedIntSampler2D = OpenTK.Graphics.ES30.All.UnsignedIntSampler2D;
        var _UnsignedIntSampler3D = OpenTK.Graphics.ES30.All.UnsignedIntSampler3D;
        var _UnsignedIntSamplerCube = OpenTK.Graphics.ES30.All.UnsignedIntSamplerCube;
        var _UnsignedIntSampler2DArray = OpenTK.Graphics.ES30.All.UnsignedIntSampler2DArray;
        var _LowFloat = OpenTK.Graphics.ES30.All.LowFloat;
        var _MediumFloat = OpenTK.Graphics.ES30.All.MediumFloat;
        var _HighFloat = OpenTK.Graphics.ES30.All.HighFloat;
        var _LowInt = OpenTK.Graphics.ES30.All.LowInt;
        var _MediumInt = OpenTK.Graphics.ES30.All.MediumInt;
        var _HighInt = OpenTK.Graphics.ES30.All.HighInt;
        var _ShaderBinaryFormats = OpenTK.Graphics.ES30.All.ShaderBinaryFormats;
        var _NumShaderBinaryFormats = OpenTK.Graphics.ES30.All.NumShaderBinaryFormats;
        var _ShaderCompiler = OpenTK.Graphics.ES30.All.ShaderCompiler;
        var _MaxVertexUniformVectors = OpenTK.Graphics.ES30.All.MaxVertexUniformVectors;
        var _MaxVaryingVectors = OpenTK.Graphics.ES30.All.MaxVaryingVectors;
        var _MaxFragmentUniformVectors = OpenTK.Graphics.ES30.All.MaxFragmentUniformVectors;
        var _TransformFeedback = OpenTK.Graphics.ES30.All.TransformFeedback;
        var _TransformFeedbackPaused = OpenTK.Graphics.ES30.All.TransformFeedbackPaused;
        var _TransformFeedbackActive = OpenTK.Graphics.ES30.All.TransformFeedbackActive;
        var _TransformFeedbackBinding = OpenTK.Graphics.ES30.All.TransformFeedbackBinding;
        var _TextureSwizzleR = OpenTK.Graphics.ES30.All.TextureSwizzleR;
        var _TextureSwizzleG = OpenTK.Graphics.ES30.All.TextureSwizzleG;
        var _TextureSwizzleB = OpenTK.Graphics.ES30.All.TextureSwizzleB;
        var _TextureSwizzleA = OpenTK.Graphics.ES30.All.TextureSwizzleA;
        var _CopyReadBuffer = OpenTK.Graphics.ES30.All.CopyReadBuffer;
        var _CopyWriteBuffer = OpenTK.Graphics.ES30.All.CopyWriteBuffer;
        var _R8Snorm = OpenTK.Graphics.ES30.All.R8Snorm;
        var _Rg8Snorm = OpenTK.Graphics.ES30.All.Rg8Snorm;
        var _Rgb8Snorm = OpenTK.Graphics.ES30.All.Rgb8Snorm;
        var _Rgba8Snorm = OpenTK.Graphics.ES30.All.Rgba8Snorm;
        var _SignedNormalized = OpenTK.Graphics.ES30.All.SignedNormalized;
        var _Rgb10A2ui = OpenTK.Graphics.ES30.All.Rgb10A2ui;
        var _MaxServerWaitTimeout = OpenTK.Graphics.ES30.All.MaxServerWaitTimeout;
        var _ObjectType = OpenTK.Graphics.ES30.All.ObjectType;
        var _SyncCondition = OpenTK.Graphics.ES30.All.SyncCondition;
        var _SyncStatus = OpenTK.Graphics.ES30.All.SyncStatus;
        var _SyncFlags = OpenTK.Graphics.ES30.All.SyncFlags;
        var _SyncFence = OpenTK.Graphics.ES30.All.SyncFence;
        var _SyncGpuCommandsComplete = OpenTK.Graphics.ES30.All.SyncGpuCommandsComplete;
        var _Unsignaled = OpenTK.Graphics.ES30.All.Unsignaled;
        var _Signaled = OpenTK.Graphics.ES30.All.Signaled;
        var _AlreadySignaled = OpenTK.Graphics.ES30.All.AlreadySignaled;
        var _TimeoutExpired = OpenTK.Graphics.ES30.All.TimeoutExpired;
        var _ConditionSatisfied = OpenTK.Graphics.ES30.All.ConditionSatisfied;
        var _WaitFailed = OpenTK.Graphics.ES30.All.WaitFailed;
        var _BufferAccessFlags = OpenTK.Graphics.ES30.All.BufferAccessFlags;
        var _BufferMapLength = OpenTK.Graphics.ES30.All.BufferMapLength;
        var _BufferMapOffset = OpenTK.Graphics.ES30.All.BufferMapOffset;
        var _MaxVertexOutputComponents = OpenTK.Graphics.ES30.All.MaxVertexOutputComponents;
        var _MaxFragmentInputComponents = OpenTK.Graphics.ES30.All.MaxFragmentInputComponents;
        var _TextureImmutableFormat = OpenTK.Graphics.ES30.All.TextureImmutableFormat;
        var _CompressedR11Eac = OpenTK.Graphics.ES30.All.CompressedR11Eac;
        var _CompressedSignedR11Eac = OpenTK.Graphics.ES30.All.CompressedSignedR11Eac;
        var _CompressedRg11Eac = OpenTK.Graphics.ES30.All.CompressedRg11Eac;
        var _CompressedSignedRg11Eac = OpenTK.Graphics.ES30.All.CompressedSignedRg11Eac;
        var _CompressedRgb8Etc2 = OpenTK.Graphics.ES30.All.CompressedRgb8Etc2;
        var _CompressedSrgb8Etc2 = OpenTK.Graphics.ES30.All.CompressedSrgb8Etc2;
        var _CompressedRgb8PunchthroughAlpha1Etc2 = OpenTK.Graphics.ES30.All.CompressedRgb8PunchthroughAlpha1Etc2;
        var _CompressedSrgb8PunchthroughAlpha1Etc2 = OpenTK.Graphics.ES30.All.CompressedSrgb8PunchthroughAlpha1Etc2;
        var _CompressedRgba8Etc2Eac = OpenTK.Graphics.ES30.All.CompressedRgba8Etc2Eac;
        var _CompressedSrgb8Alpha8Etc2Eac = OpenTK.Graphics.ES30.All.CompressedSrgb8Alpha8Etc2Eac;
        var _NumSampleCounts = OpenTK.Graphics.ES30.All.NumSampleCounts;
        var _InvalidIndex = OpenTK.Graphics.ES30.All.InvalidIndex;
        var _TimeoutIgnored = OpenTK.Graphics.ES30.All.TimeoutIgnored;
        var _EsVersion20 = OpenTK.Graphics.ES30.All.EsVersion20;
        var _EsVersion30 = OpenTK.Graphics.ES30.All.EsVersion30;
        var _One = OpenTK.Graphics.ES30.All.One;
        var _True = OpenTK.Graphics.ES30.All.True;
    }
    static void Test_BeginMode_4579() {
        var _Points = OpenTK.Graphics.ES30.BeginMode.Points;
        var _Lines = OpenTK.Graphics.ES30.BeginMode.Lines;
        var _LineLoop = OpenTK.Graphics.ES30.BeginMode.LineLoop;
        var _LineStrip = OpenTK.Graphics.ES30.BeginMode.LineStrip;
        var _Triangles = OpenTK.Graphics.ES30.BeginMode.Triangles;
        var _TriangleStrip = OpenTK.Graphics.ES30.BeginMode.TriangleStrip;
        var _TriangleFan = OpenTK.Graphics.ES30.BeginMode.TriangleFan;
    }
    static void Test_BlendEquationSeparate_4580() {
        var _FuncAdd = OpenTK.Graphics.ES30.BlendEquationSeparate.FuncAdd;
        var _BlendEquation = OpenTK.Graphics.ES30.BlendEquationSeparate.BlendEquation;
        var _BlendEquationAlpha = OpenTK.Graphics.ES30.BlendEquationSeparate.BlendEquationAlpha;
    }
    static void Test_BlendingFactorDest_4581() {
        var _Zero = OpenTK.Graphics.ES30.BlendingFactorDest.Zero;
        var _SrcColor = OpenTK.Graphics.ES30.BlendingFactorDest.SrcColor;
        var _OneMinusSrcColor = OpenTK.Graphics.ES30.BlendingFactorDest.OneMinusSrcColor;
        var _SrcAlpha = OpenTK.Graphics.ES30.BlendingFactorDest.SrcAlpha;
        var _OneMinusSrcAlpha = OpenTK.Graphics.ES30.BlendingFactorDest.OneMinusSrcAlpha;
        var _DstAlpha = OpenTK.Graphics.ES30.BlendingFactorDest.DstAlpha;
        var _OneMinusDstAlpha = OpenTK.Graphics.ES30.BlendingFactorDest.OneMinusDstAlpha;
        var _One = OpenTK.Graphics.ES30.BlendingFactorDest.One;
    }
    static void Test_BlendingFactorSrc_4582() {
        var _DstColor = OpenTK.Graphics.ES30.BlendingFactorSrc.DstColor;
        var _OneMinusDstColor = OpenTK.Graphics.ES30.BlendingFactorSrc.OneMinusDstColor;
        var _SrcAlphaSaturate = OpenTK.Graphics.ES30.BlendingFactorSrc.SrcAlphaSaturate;
    }
    static void Test_BlendSubtract_4583() {
        var _FuncSubtract = OpenTK.Graphics.ES30.BlendSubtract.FuncSubtract;
        var _FuncReverseSubtract = OpenTK.Graphics.ES30.BlendSubtract.FuncReverseSubtract;
    }
    static void Test_Boolean_4584() {
        var _False = OpenTK.Graphics.ES30.Boolean.False;
        var _True = OpenTK.Graphics.ES30.Boolean.True;
    }
    static void Test_BufferObjects_4585() {
        var _CurrentVertexAttrib = OpenTK.Graphics.ES30.BufferObjects.CurrentVertexAttrib;
        var _BufferSize = OpenTK.Graphics.ES30.BufferObjects.BufferSize;
        var _BufferUsage = OpenTK.Graphics.ES30.BufferObjects.BufferUsage;
        var _ArrayBuffer = OpenTK.Graphics.ES30.BufferObjects.ArrayBuffer;
        var _ElementArrayBuffer = OpenTK.Graphics.ES30.BufferObjects.ElementArrayBuffer;
        var _ArrayBufferBinding = OpenTK.Graphics.ES30.BufferObjects.ArrayBufferBinding;
        var _ElementArrayBufferBinding = OpenTK.Graphics.ES30.BufferObjects.ElementArrayBufferBinding;
        var _StreamDraw = OpenTK.Graphics.ES30.BufferObjects.StreamDraw;
        var _StaticDraw = OpenTK.Graphics.ES30.BufferObjects.StaticDraw;
        var _DynamicDraw = OpenTK.Graphics.ES30.BufferObjects.DynamicDraw;
    }
    static void Test_ClearBufferMask_4586() {
        var _DepthBufferBit = OpenTK.Graphics.ES30.ClearBufferMask.DepthBufferBit;
        var _StencilBufferBit = OpenTK.Graphics.ES30.ClearBufferMask.StencilBufferBit;
        var _ColorBufferBit = OpenTK.Graphics.ES30.ClearBufferMask.ColorBufferBit;
    }
    static void Test_CullFaceMode_4587() {
        var _Front = OpenTK.Graphics.ES30.CullFaceMode.Front;
        var _Back = OpenTK.Graphics.ES30.CullFaceMode.Back;
        var _FrontAndBack = OpenTK.Graphics.ES30.CullFaceMode.FrontAndBack;
    }
    static void Test_DataType_4588() {
        var _Byte = OpenTK.Graphics.ES30.DataType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES30.DataType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES30.DataType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES30.DataType.UnsignedShort;
        var _Int = OpenTK.Graphics.ES30.DataType.Int;
        var _UnsignedInt = OpenTK.Graphics.ES30.DataType.UnsignedInt;
        var _Float = OpenTK.Graphics.ES30.DataType.Float;
        var _Fixed = OpenTK.Graphics.ES30.DataType.Fixed;
    }
    static void Test_DrawElementsType_4589() {
        var _UnsignedByte = OpenTK.Graphics.ES30.DrawElementsType.UnsignedByte;
        var _UnsignedShort = OpenTK.Graphics.ES30.DrawElementsType.UnsignedShort;
    }
    static void Test_EnableCap_4590() {
        var _CullFace = OpenTK.Graphics.ES30.EnableCap.CullFace;
        var _DepthTest = OpenTK.Graphics.ES30.EnableCap.DepthTest;
        var _StencilTest = OpenTK.Graphics.ES30.EnableCap.StencilTest;
        var _Dither = OpenTK.Graphics.ES30.EnableCap.Dither;
        var _Blend = OpenTK.Graphics.ES30.EnableCap.Blend;
        var _ScissorTest = OpenTK.Graphics.ES30.EnableCap.ScissorTest;
        var _Texture2D = OpenTK.Graphics.ES30.EnableCap.Texture2D;
        var _PolygonOffsetFill = OpenTK.Graphics.ES30.EnableCap.PolygonOffsetFill;
        var _SampleAlphaToCoverage = OpenTK.Graphics.ES30.EnableCap.SampleAlphaToCoverage;
        var _SampleCoverage = OpenTK.Graphics.ES30.EnableCap.SampleCoverage;
    }
    static void Test_ErrorCode_4591() {
        var _NoError = OpenTK.Graphics.ES30.ErrorCode.NoError;
        var _InvalidEnum = OpenTK.Graphics.ES30.ErrorCode.InvalidEnum;
        var _InvalidValue = OpenTK.Graphics.ES30.ErrorCode.InvalidValue;
        var _InvalidOperation = OpenTK.Graphics.ES30.ErrorCode.InvalidOperation;
        var _OutOfMemory = OpenTK.Graphics.ES30.ErrorCode.OutOfMemory;
    }
    static void Test_FramebufferObject_4592() {
        var _None = OpenTK.Graphics.ES30.FramebufferObject.None;
        var _InvalidFramebufferOperation = OpenTK.Graphics.ES30.FramebufferObject.InvalidFramebufferOperation;
        var _Rgba4 = OpenTK.Graphics.ES30.FramebufferObject.Rgba4;
        var _Rgb5A1 = OpenTK.Graphics.ES30.FramebufferObject.Rgb5A1;
        var _DepthComponent16 = OpenTK.Graphics.ES30.FramebufferObject.DepthComponent16;
        var _MaxRenderbufferSize = OpenTK.Graphics.ES30.FramebufferObject.MaxRenderbufferSize;
        var _FramebufferBinding = OpenTK.Graphics.ES30.FramebufferObject.FramebufferBinding;
        var _RenderbufferBinding = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferBinding;
        var _FramebufferAttachmentObjectType = OpenTK.Graphics.ES30.FramebufferObject.FramebufferAttachmentObjectType;
        var _FramebufferAttachmentObjectName = OpenTK.Graphics.ES30.FramebufferObject.FramebufferAttachmentObjectName;
        var _FramebufferAttachmentTextureLevel = OpenTK.Graphics.ES30.FramebufferObject.FramebufferAttachmentTextureLevel;
        var _FramebufferAttachmentTextureCubeMapFace = OpenTK.Graphics.ES30.FramebufferObject.FramebufferAttachmentTextureCubeMapFace;
        var _FramebufferComplete = OpenTK.Graphics.ES30.FramebufferObject.FramebufferComplete;
        var _FramebufferIncompleteAttachment = OpenTK.Graphics.ES30.FramebufferObject.FramebufferIncompleteAttachment;
        var _FramebufferIncompleteMissingAttachment = OpenTK.Graphics.ES30.FramebufferObject.FramebufferIncompleteMissingAttachment;
        var _FramebufferIncompleteDimensions = OpenTK.Graphics.ES30.FramebufferObject.FramebufferIncompleteDimensions;
        var _FramebufferUnsupported = OpenTK.Graphics.ES30.FramebufferObject.FramebufferUnsupported;
        var _ColorAttachment0 = OpenTK.Graphics.ES30.FramebufferObject.ColorAttachment0;
        var _DepthAttachment = OpenTK.Graphics.ES30.FramebufferObject.DepthAttachment;
        var _StencilAttachment = OpenTK.Graphics.ES30.FramebufferObject.StencilAttachment;
        var _Framebuffer = OpenTK.Graphics.ES30.FramebufferObject.Framebuffer;
        var _Renderbuffer = OpenTK.Graphics.ES30.FramebufferObject.Renderbuffer;
        var _RenderbufferWidth = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferWidth;
        var _RenderbufferHeight = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferHeight;
        var _RenderbufferInternalFormat = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferInternalFormat;
        var _StencilIndex8 = OpenTK.Graphics.ES30.FramebufferObject.StencilIndex8;
        var _RenderbufferRedSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferRedSize;
        var _RenderbufferGreenSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferGreenSize;
        var _RenderbufferBlueSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferBlueSize;
        var _RenderbufferAlphaSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferAlphaSize;
        var _RenderbufferDepthSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferDepthSize;
        var _RenderbufferStencilSize = OpenTK.Graphics.ES30.FramebufferObject.RenderbufferStencilSize;
        var _Rgb565 = OpenTK.Graphics.ES30.FramebufferObject.Rgb565;
    }
    static void Test_FrontFaceDirection_4593() {
        var _Cw = OpenTK.Graphics.ES30.FrontFaceDirection.Cw;
        var _Ccw = OpenTK.Graphics.ES30.FrontFaceDirection.Ccw;
    }
    static void Test_GetPName_4594() {
        var _LineWidth = OpenTK.Graphics.ES30.GetPName.LineWidth;
        var _CullFaceMode = OpenTK.Graphics.ES30.GetPName.CullFaceMode;
        var _FrontFace = OpenTK.Graphics.ES30.GetPName.FrontFace;
        var _DepthRange = OpenTK.Graphics.ES30.GetPName.DepthRange;
        var _DepthWritemask = OpenTK.Graphics.ES30.GetPName.DepthWritemask;
        var _DepthClearValue = OpenTK.Graphics.ES30.GetPName.DepthClearValue;
        var _DepthFunc = OpenTK.Graphics.ES30.GetPName.DepthFunc;
        var _StencilClearValue = OpenTK.Graphics.ES30.GetPName.StencilClearValue;
        var _StencilFunc = OpenTK.Graphics.ES30.GetPName.StencilFunc;
        var _StencilValueMask = OpenTK.Graphics.ES30.GetPName.StencilValueMask;
        var _StencilFail = OpenTK.Graphics.ES30.GetPName.StencilFail;
        var _StencilPassDepthFail = OpenTK.Graphics.ES30.GetPName.StencilPassDepthFail;
        var _StencilPassDepthPass = OpenTK.Graphics.ES30.GetPName.StencilPassDepthPass;
        var _StencilRef = OpenTK.Graphics.ES30.GetPName.StencilRef;
        var _StencilWritemask = OpenTK.Graphics.ES30.GetPName.StencilWritemask;
        var _Viewport = OpenTK.Graphics.ES30.GetPName.Viewport;
        var _ScissorBox = OpenTK.Graphics.ES30.GetPName.ScissorBox;
        var _ColorClearValue = OpenTK.Graphics.ES30.GetPName.ColorClearValue;
        var _ColorWritemask = OpenTK.Graphics.ES30.GetPName.ColorWritemask;
        var _UnpackAlignment = OpenTK.Graphics.ES30.GetPName.UnpackAlignment;
        var _PackAlignment = OpenTK.Graphics.ES30.GetPName.PackAlignment;
        var _MaxTextureSize = OpenTK.Graphics.ES30.GetPName.MaxTextureSize;
        var _MaxViewportDims = OpenTK.Graphics.ES30.GetPName.MaxViewportDims;
        var _SubpixelBits = OpenTK.Graphics.ES30.GetPName.SubpixelBits;
        var _RedBits = OpenTK.Graphics.ES30.GetPName.RedBits;
        var _GreenBits = OpenTK.Graphics.ES30.GetPName.GreenBits;
        var _BlueBits = OpenTK.Graphics.ES30.GetPName.BlueBits;
        var _AlphaBits = OpenTK.Graphics.ES30.GetPName.AlphaBits;
        var _DepthBits = OpenTK.Graphics.ES30.GetPName.DepthBits;
        var _StencilBits = OpenTK.Graphics.ES30.GetPName.StencilBits;
        var _PolygonOffsetUnits = OpenTK.Graphics.ES30.GetPName.PolygonOffsetUnits;
        var _PolygonOffsetFactor = OpenTK.Graphics.ES30.GetPName.PolygonOffsetFactor;
        var _TextureBinding2D = OpenTK.Graphics.ES30.GetPName.TextureBinding2D;
        var _SampleBuffers = OpenTK.Graphics.ES30.GetPName.SampleBuffers;
        var _Samples = OpenTK.Graphics.ES30.GetPName.Samples;
        var _SampleCoverageValue = OpenTK.Graphics.ES30.GetPName.SampleCoverageValue;
        var _SampleCoverageInvert = OpenTK.Graphics.ES30.GetPName.SampleCoverageInvert;
        var _AliasedPointSizeRange = OpenTK.Graphics.ES30.GetPName.AliasedPointSizeRange;
        var _AliasedLineWidthRange = OpenTK.Graphics.ES30.GetPName.AliasedLineWidthRange;
        var _StencilBackFunc = OpenTK.Graphics.ES30.GetPName.StencilBackFunc;
        var _StencilBackFail = OpenTK.Graphics.ES30.GetPName.StencilBackFail;
        var _StencilBackPassDepthFail = OpenTK.Graphics.ES30.GetPName.StencilBackPassDepthFail;
        var _StencilBackPassDepthPass = OpenTK.Graphics.ES30.GetPName.StencilBackPassDepthPass;
        var _StencilBackRef = OpenTK.Graphics.ES30.GetPName.StencilBackRef;
        var _StencilBackValueMask = OpenTK.Graphics.ES30.GetPName.StencilBackValueMask;
        var _StencilBackWritemask = OpenTK.Graphics.ES30.GetPName.StencilBackWritemask;
    }
    static void Test_GetTextureParameter_4595() {
        var _NumCompressedTextureFormats = OpenTK.Graphics.ES30.GetTextureParameter.NumCompressedTextureFormats;
        var _CompressedTextureFormats = OpenTK.Graphics.ES30.GetTextureParameter.CompressedTextureFormats;
    }
    static void Test_HintMode_4596() {
        var _DontCare = OpenTK.Graphics.ES30.HintMode.DontCare;
        var _Fastest = OpenTK.Graphics.ES30.HintMode.Fastest;
        var _Nicest = OpenTK.Graphics.ES30.HintMode.Nicest;
    }
    static void Test_HintTarget_4597() {
        var _GenerateMipmapHint = OpenTK.Graphics.ES30.HintTarget.GenerateMipmapHint;
    }
    static void Test_OpenGlescoreVersions_4598() {
        var _EsVersion20 = OpenTK.Graphics.ES30.OpenGlescoreVersions.EsVersion20;
        var _EsVersion30 = OpenTK.Graphics.ES30.OpenGlescoreVersions.EsVersion30;
    }
    static void Test_PixelFormat_4599() {
        var _DepthComponent = OpenTK.Graphics.ES30.PixelFormat.DepthComponent;
        var _Alpha = OpenTK.Graphics.ES30.PixelFormat.Alpha;
        var _Rgb = OpenTK.Graphics.ES30.PixelFormat.Rgb;
        var _Rgba = OpenTK.Graphics.ES30.PixelFormat.Rgba;
        var _Luminance = OpenTK.Graphics.ES30.PixelFormat.Luminance;
        var _LuminanceAlpha = OpenTK.Graphics.ES30.PixelFormat.LuminanceAlpha;
    }
    static void Test_PixelType_4600() {
        var _UnsignedShort4444 = OpenTK.Graphics.ES30.PixelType.UnsignedShort4444;
        var _UnsignedShort5551 = OpenTK.Graphics.ES30.PixelType.UnsignedShort5551;
        var _UnsignedShort565 = OpenTK.Graphics.ES30.PixelType.UnsignedShort565;
    }
    static void Test_ProgramParameter_4601() {
        var _DeleteStatus = OpenTK.Graphics.ES30.ProgramParameter.DeleteStatus;
        var _LinkStatus = OpenTK.Graphics.ES30.ProgramParameter.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES30.ProgramParameter.ValidateStatus;
        var _InfoLogLength = OpenTK.Graphics.ES30.ProgramParameter.InfoLogLength;
        var _AttachedShaders = OpenTK.Graphics.ES30.ProgramParameter.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES30.ProgramParameter.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES30.ProgramParameter.ActiveUniformMaxLength;
        var _ActiveAttributes = OpenTK.Graphics.ES30.ProgramParameter.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES30.ProgramParameter.ActiveAttributeMaxLength;
    }
    static void Test_ReadFormat_4602() {
        var _ImplementationColorReadType = OpenTK.Graphics.ES30.ReadFormat.ImplementationColorReadType;
        var _ImplementationColorReadFormat = OpenTK.Graphics.ES30.ReadFormat.ImplementationColorReadFormat;
    }
    static void Test_SeparateBlendFunctions_4603() {
        var _ConstantColor = OpenTK.Graphics.ES30.SeparateBlendFunctions.ConstantColor;
        var _OneMinusConstantColor = OpenTK.Graphics.ES30.SeparateBlendFunctions.OneMinusConstantColor;
        var _ConstantAlpha = OpenTK.Graphics.ES30.SeparateBlendFunctions.ConstantAlpha;
        var _OneMinusConstantAlpha = OpenTK.Graphics.ES30.SeparateBlendFunctions.OneMinusConstantAlpha;
        var _BlendColor = OpenTK.Graphics.ES30.SeparateBlendFunctions.BlendColor;
        var _BlendDstRgb = OpenTK.Graphics.ES30.SeparateBlendFunctions.BlendDstRgb;
        var _BlendSrcRgb = OpenTK.Graphics.ES30.SeparateBlendFunctions.BlendSrcRgb;
        var _BlendDstAlpha = OpenTK.Graphics.ES30.SeparateBlendFunctions.BlendDstAlpha;
        var _BlendSrcAlpha = OpenTK.Graphics.ES30.SeparateBlendFunctions.BlendSrcAlpha;
    }
    static void Test_ShaderBinary_4604() {
        var _ShaderBinaryFormats = OpenTK.Graphics.ES30.ShaderBinary.ShaderBinaryFormats;
        var _NumShaderBinaryFormats = OpenTK.Graphics.ES30.ShaderBinary.NumShaderBinaryFormats;
    }
    static void Test_ShaderParameter_4605() {
        var _ShaderType = OpenTK.Graphics.ES30.ShaderParameter.ShaderType;
        var _DeleteStatus = OpenTK.Graphics.ES30.ShaderParameter.DeleteStatus;
        var _CompileStatus = OpenTK.Graphics.ES30.ShaderParameter.CompileStatus;
        var _InfoLogLength = OpenTK.Graphics.ES30.ShaderParameter.InfoLogLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES30.ShaderParameter.ShaderSourceLength;
    }
    static void Test_ShaderPrecisionSpecifiedTypes_4606() {
        var _LowFloat = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.LowFloat;
        var _MediumFloat = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.MediumFloat;
        var _HighFloat = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.HighFloat;
        var _LowInt = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.LowInt;
        var _MediumInt = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.MediumInt;
        var _HighInt = OpenTK.Graphics.ES30.ShaderPrecisionSpecifiedTypes.HighInt;
    }
    static void Test_Shaders_4607() {
        var _MaxVertexAttribs = OpenTK.Graphics.ES30.Shaders.MaxVertexAttribs;
        var _MaxTextureImageUnits = OpenTK.Graphics.ES30.Shaders.MaxTextureImageUnits;
        var _FragmentShader = OpenTK.Graphics.ES30.Shaders.FragmentShader;
        var _VertexShader = OpenTK.Graphics.ES30.Shaders.VertexShader;
        var _MaxVertexTextureImageUnits = OpenTK.Graphics.ES30.Shaders.MaxVertexTextureImageUnits;
        var _MaxCombinedTextureImageUnits = OpenTK.Graphics.ES30.Shaders.MaxCombinedTextureImageUnits;
        var _ShaderType = OpenTK.Graphics.ES30.Shaders.ShaderType;
        var _DeleteStatus = OpenTK.Graphics.ES30.Shaders.DeleteStatus;
        var _LinkStatus = OpenTK.Graphics.ES30.Shaders.LinkStatus;
        var _ValidateStatus = OpenTK.Graphics.ES30.Shaders.ValidateStatus;
        var _AttachedShaders = OpenTK.Graphics.ES30.Shaders.AttachedShaders;
        var _ActiveUniforms = OpenTK.Graphics.ES30.Shaders.ActiveUniforms;
        var _ActiveUniformMaxLength = OpenTK.Graphics.ES30.Shaders.ActiveUniformMaxLength;
        var _ActiveAttributes = OpenTK.Graphics.ES30.Shaders.ActiveAttributes;
        var _ActiveAttributeMaxLength = OpenTK.Graphics.ES30.Shaders.ActiveAttributeMaxLength;
        var _ShadingLanguageVersion = OpenTK.Graphics.ES30.Shaders.ShadingLanguageVersion;
        var _CurrentProgram = OpenTK.Graphics.ES30.Shaders.CurrentProgram;
        var _MaxVertexUniformVectors = OpenTK.Graphics.ES30.Shaders.MaxVertexUniformVectors;
        var _MaxVaryingVectors = OpenTK.Graphics.ES30.Shaders.MaxVaryingVectors;
        var _MaxFragmentUniformVectors = OpenTK.Graphics.ES30.Shaders.MaxFragmentUniformVectors;
    }
    static void Test_ShaderSource_4608() {
        var _CompileStatus = OpenTK.Graphics.ES30.ShaderSource.CompileStatus;
        var _InfoLogLength = OpenTK.Graphics.ES30.ShaderSource.InfoLogLength;
        var _ShaderSourceLength = OpenTK.Graphics.ES30.ShaderSource.ShaderSourceLength;
        var _ShaderCompiler = OpenTK.Graphics.ES30.ShaderSource.ShaderCompiler;
    }
    static void Test_StencilFunction_4609() {
        var _Never = OpenTK.Graphics.ES30.StencilFunction.Never;
        var _Less = OpenTK.Graphics.ES30.StencilFunction.Less;
        var _Equal = OpenTK.Graphics.ES30.StencilFunction.Equal;
        var _Lequal = OpenTK.Graphics.ES30.StencilFunction.Lequal;
        var _Greater = OpenTK.Graphics.ES30.StencilFunction.Greater;
        var _Notequal = OpenTK.Graphics.ES30.StencilFunction.Notequal;
        var _Gequal = OpenTK.Graphics.ES30.StencilFunction.Gequal;
        var _Always = OpenTK.Graphics.ES30.StencilFunction.Always;
    }
    static void Test_StencilOp_4610() {
        var _Invert = OpenTK.Graphics.ES30.StencilOp.Invert;
        var _Keep = OpenTK.Graphics.ES30.StencilOp.Keep;
        var _Replace = OpenTK.Graphics.ES30.StencilOp.Replace;
        var _Incr = OpenTK.Graphics.ES30.StencilOp.Incr;
        var _Decr = OpenTK.Graphics.ES30.StencilOp.Decr;
        var _IncrWrap = OpenTK.Graphics.ES30.StencilOp.IncrWrap;
        var _DecrWrap = OpenTK.Graphics.ES30.StencilOp.DecrWrap;
    }
    static void Test_StringName_4611() {
        var _Vendor = OpenTK.Graphics.ES30.StringName.Vendor;
        var _Renderer = OpenTK.Graphics.ES30.StringName.Renderer;
        var _Version = OpenTK.Graphics.ES30.StringName.Version;
        var _Extensions = OpenTK.Graphics.ES30.StringName.Extensions;
    }
    static void Test_TextureMagFilter_4612() {
        var _Nearest = OpenTK.Graphics.ES30.TextureMagFilter.Nearest;
        var _Linear = OpenTK.Graphics.ES30.TextureMagFilter.Linear;
    }
    static void Test_TextureMinFilter_4613() {
        var _NearestMipmapNearest = OpenTK.Graphics.ES30.TextureMinFilter.NearestMipmapNearest;
        var _LinearMipmapNearest = OpenTK.Graphics.ES30.TextureMinFilter.LinearMipmapNearest;
        var _NearestMipmapLinear = OpenTK.Graphics.ES30.TextureMinFilter.NearestMipmapLinear;
        var _LinearMipmapLinear = OpenTK.Graphics.ES30.TextureMinFilter.LinearMipmapLinear;
    }
    static void Test_TextureParameterName_4614() {
        var _TextureMagFilter = OpenTK.Graphics.ES30.TextureParameterName.TextureMagFilter;
        var _TextureMinFilter = OpenTK.Graphics.ES30.TextureParameterName.TextureMinFilter;
        var _TextureWrapS = OpenTK.Graphics.ES30.TextureParameterName.TextureWrapS;
        var _TextureWrapT = OpenTK.Graphics.ES30.TextureParameterName.TextureWrapT;
    }
    static void Test_TextureTarget_4615() {
        var _Texture = OpenTK.Graphics.ES30.TextureTarget.Texture;
        var _TextureCubeMap = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMap;
        var _TextureBindingCubeMap = OpenTK.Graphics.ES30.TextureTarget.TextureBindingCubeMap;
        var _TextureCubeMapPositiveX = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapPositiveX;
        var _TextureCubeMapNegativeX = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapNegativeX;
        var _TextureCubeMapPositiveY = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapPositiveY;
        var _TextureCubeMapNegativeY = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapNegativeY;
        var _TextureCubeMapPositiveZ = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapPositiveZ;
        var _TextureCubeMapNegativeZ = OpenTK.Graphics.ES30.TextureTarget.TextureCubeMapNegativeZ;
        var _MaxCubeMapTextureSize = OpenTK.Graphics.ES30.TextureTarget.MaxCubeMapTextureSize;
    }
    static void Test_TextureUnit_4616() {
        var _Texture0 = OpenTK.Graphics.ES30.TextureUnit.Texture0;
        var _Texture1 = OpenTK.Graphics.ES30.TextureUnit.Texture1;
        var _Texture2 = OpenTK.Graphics.ES30.TextureUnit.Texture2;
        var _Texture3 = OpenTK.Graphics.ES30.TextureUnit.Texture3;
        var _Texture4 = OpenTK.Graphics.ES30.TextureUnit.Texture4;
        var _Texture5 = OpenTK.Graphics.ES30.TextureUnit.Texture5;
        var _Texture6 = OpenTK.Graphics.ES30.TextureUnit.Texture6;
        var _Texture7 = OpenTK.Graphics.ES30.TextureUnit.Texture7;
        var _Texture8 = OpenTK.Graphics.ES30.TextureUnit.Texture8;
        var _Texture9 = OpenTK.Graphics.ES30.TextureUnit.Texture9;
        var _Texture10 = OpenTK.Graphics.ES30.TextureUnit.Texture10;
        var _Texture11 = OpenTK.Graphics.ES30.TextureUnit.Texture11;
        var _Texture12 = OpenTK.Graphics.ES30.TextureUnit.Texture12;
        var _Texture13 = OpenTK.Graphics.ES30.TextureUnit.Texture13;
        var _Texture14 = OpenTK.Graphics.ES30.TextureUnit.Texture14;
        var _Texture15 = OpenTK.Graphics.ES30.TextureUnit.Texture15;
        var _Texture16 = OpenTK.Graphics.ES30.TextureUnit.Texture16;
        var _Texture17 = OpenTK.Graphics.ES30.TextureUnit.Texture17;
        var _Texture18 = OpenTK.Graphics.ES30.TextureUnit.Texture18;
        var _Texture19 = OpenTK.Graphics.ES30.TextureUnit.Texture19;
        var _Texture20 = OpenTK.Graphics.ES30.TextureUnit.Texture20;
        var _Texture21 = OpenTK.Graphics.ES30.TextureUnit.Texture21;
        var _Texture22 = OpenTK.Graphics.ES30.TextureUnit.Texture22;
        var _Texture23 = OpenTK.Graphics.ES30.TextureUnit.Texture23;
        var _Texture24 = OpenTK.Graphics.ES30.TextureUnit.Texture24;
        var _Texture25 = OpenTK.Graphics.ES30.TextureUnit.Texture25;
        var _Texture26 = OpenTK.Graphics.ES30.TextureUnit.Texture26;
        var _Texture27 = OpenTK.Graphics.ES30.TextureUnit.Texture27;
        var _Texture28 = OpenTK.Graphics.ES30.TextureUnit.Texture28;
        var _Texture29 = OpenTK.Graphics.ES30.TextureUnit.Texture29;
        var _Texture30 = OpenTK.Graphics.ES30.TextureUnit.Texture30;
        var _Texture31 = OpenTK.Graphics.ES30.TextureUnit.Texture31;
        var _ActiveTexture = OpenTK.Graphics.ES30.TextureUnit.ActiveTexture;
    }
    static void Test_TextureWrapMode_4617() {
        var _Repeat = OpenTK.Graphics.ES30.TextureWrapMode.Repeat;
        var _ClampToEdge = OpenTK.Graphics.ES30.TextureWrapMode.ClampToEdge;
        var _MirroredRepeat = OpenTK.Graphics.ES30.TextureWrapMode.MirroredRepeat;
    }
    static void Test_Token_4618() {
        var _SyncFlushCommandsBit = OpenTK.Graphics.ES30.Token.SyncFlushCommandsBit;
        var _MapReadBit = OpenTK.Graphics.ES30.Token.MapReadBit;
        var _MapWriteBit = OpenTK.Graphics.ES30.Token.MapWriteBit;
        var _MapInvalidateRangeBit = OpenTK.Graphics.ES30.Token.MapInvalidateRangeBit;
        var _MapInvalidateBufferBit = OpenTK.Graphics.ES30.Token.MapInvalidateBufferBit;
        var _MapFlushExplicitBit = OpenTK.Graphics.ES30.Token.MapFlushExplicitBit;
        var _MapUnsynchronizedBit = OpenTK.Graphics.ES30.Token.MapUnsynchronizedBit;
        var _ReadBuffer = OpenTK.Graphics.ES30.Token.ReadBuffer;
        var _UnpackRowLength = OpenTK.Graphics.ES30.Token.UnpackRowLength;
        var _UnpackSkipRows = OpenTK.Graphics.ES30.Token.UnpackSkipRows;
        var _UnpackSkipPixels = OpenTK.Graphics.ES30.Token.UnpackSkipPixels;
        var _PackRowLength = OpenTK.Graphics.ES30.Token.PackRowLength;
        var _PackSkipRows = OpenTK.Graphics.ES30.Token.PackSkipRows;
        var _PackSkipPixels = OpenTK.Graphics.ES30.Token.PackSkipPixels;
        var _HalfFloat = OpenTK.Graphics.ES30.Token.HalfFloat;
        var _Color = OpenTK.Graphics.ES30.Token.Color;
        var _Depth = OpenTK.Graphics.ES30.Token.Depth;
        var _Stencil = OpenTK.Graphics.ES30.Token.Stencil;
        var _Red = OpenTK.Graphics.ES30.Token.Red;
        var _Green = OpenTK.Graphics.ES30.Token.Green;
        var _Blue = OpenTK.Graphics.ES30.Token.Blue;
        var _Min = OpenTK.Graphics.ES30.Token.Min;
        var _Max = OpenTK.Graphics.ES30.Token.Max;
        var _Rgb8 = OpenTK.Graphics.ES30.Token.Rgb8;
        var _Rgba8 = OpenTK.Graphics.ES30.Token.Rgba8;
        var _Rgb10A2 = OpenTK.Graphics.ES30.Token.Rgb10A2;
        var _TextureBinding3D = OpenTK.Graphics.ES30.Token.TextureBinding3D;
        var _UnpackSkipImages = OpenTK.Graphics.ES30.Token.UnpackSkipImages;
        var _UnpackImageHeight = OpenTK.Graphics.ES30.Token.UnpackImageHeight;
        var _Texture3D = OpenTK.Graphics.ES30.Token.Texture3D;
        var _TextureWrapR = OpenTK.Graphics.ES30.Token.TextureWrapR;
        var _Max3DTextureSize = OpenTK.Graphics.ES30.Token.Max3DTextureSize;
        var _MaxElementsVertices = OpenTK.Graphics.ES30.Token.MaxElementsVertices;
        var _MaxElementsIndices = OpenTK.Graphics.ES30.Token.MaxElementsIndices;
        var _TextureMinLod = OpenTK.Graphics.ES30.Token.TextureMinLod;
        var _TextureMaxLod = OpenTK.Graphics.ES30.Token.TextureMaxLod;
        var _TextureBaseLevel = OpenTK.Graphics.ES30.Token.TextureBaseLevel;
        var _TextureMaxLevel = OpenTK.Graphics.ES30.Token.TextureMaxLevel;
        var _DepthComponent24 = OpenTK.Graphics.ES30.Token.DepthComponent24;
        var _FramebufferAttachmentColorEncoding = OpenTK.Graphics.ES30.Token.FramebufferAttachmentColorEncoding;
        var _FramebufferAttachmentComponentType = OpenTK.Graphics.ES30.Token.FramebufferAttachmentComponentType;
        var _FramebufferAttachmentRedSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentRedSize;
        var _FramebufferAttachmentGreenSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentGreenSize;
        var _FramebufferAttachmentBlueSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentBlueSize;
        var _FramebufferAttachmentAlphaSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentAlphaSize;
        var _FramebufferAttachmentDepthSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentDepthSize;
        var _FramebufferAttachmentStencilSize = OpenTK.Graphics.ES30.Token.FramebufferAttachmentStencilSize;
        var _FramebufferDefault = OpenTK.Graphics.ES30.Token.FramebufferDefault;
        var _FramebufferUndefined = OpenTK.Graphics.ES30.Token.FramebufferUndefined;
        var _DepthStencilAttachment = OpenTK.Graphics.ES30.Token.DepthStencilAttachment;
        var _MajorVersion = OpenTK.Graphics.ES30.Token.MajorVersion;
        var _MinorVersion = OpenTK.Graphics.ES30.Token.MinorVersion;
        var _NumExtensions = OpenTK.Graphics.ES30.Token.NumExtensions;
        var _Rg = OpenTK.Graphics.ES30.Token.Rg;
        var _RgInteger = OpenTK.Graphics.ES30.Token.RgInteger;
        var _R8 = OpenTK.Graphics.ES30.Token.R8;
        var _Rg8 = OpenTK.Graphics.ES30.Token.Rg8;
        var _R16f = OpenTK.Graphics.ES30.Token.R16f;
        var _R32f = OpenTK.Graphics.ES30.Token.R32f;
        var _Rg16f = OpenTK.Graphics.ES30.Token.Rg16f;
        var _Rg32f = OpenTK.Graphics.ES30.Token.Rg32f;
        var _R8i = OpenTK.Graphics.ES30.Token.R8i;
        var _R8ui = OpenTK.Graphics.ES30.Token.R8ui;
        var _R16i = OpenTK.Graphics.ES30.Token.R16i;
        var _R16ui = OpenTK.Graphics.ES30.Token.R16ui;
        var _R32i = OpenTK.Graphics.ES30.Token.R32i;
        var _R32ui = OpenTK.Graphics.ES30.Token.R32ui;
        var _Rg8i = OpenTK.Graphics.ES30.Token.Rg8i;
        var _Rg8ui = OpenTK.Graphics.ES30.Token.Rg8ui;
        var _Rg16i = OpenTK.Graphics.ES30.Token.Rg16i;
        var _Rg16ui = OpenTK.Graphics.ES30.Token.Rg16ui;
        var _Rg32i = OpenTK.Graphics.ES30.Token.Rg32i;
        var _Rg32ui = OpenTK.Graphics.ES30.Token.Rg32ui;
        var _ProgramBinaryRetrievableHint = OpenTK.Graphics.ES30.Token.ProgramBinaryRetrievableHint;
        var _TextureImmutableLevels = OpenTK.Graphics.ES30.Token.TextureImmutableLevels;
        var _UnsignedInt2101010Rev = OpenTK.Graphics.ES30.Token.UnsignedInt2101010Rev;
        var _DepthStencil = OpenTK.Graphics.ES30.Token.DepthStencil;
        var _UnsignedInt248 = OpenTK.Graphics.ES30.Token.UnsignedInt248;
        var _MaxTextureLodBias = OpenTK.Graphics.ES30.Token.MaxTextureLodBias;
        var _VertexArrayBinding = OpenTK.Graphics.ES30.Token.VertexArrayBinding;
        var _ProgramBinaryLength = OpenTK.Graphics.ES30.Token.ProgramBinaryLength;
        var _NumProgramBinaryFormats = OpenTK.Graphics.ES30.Token.NumProgramBinaryFormats;
        var _ProgramBinaryFormats = OpenTK.Graphics.ES30.Token.ProgramBinaryFormats;
        var _Rgba32f = OpenTK.Graphics.ES30.Token.Rgba32f;
        var _Rgb32f = OpenTK.Graphics.ES30.Token.Rgb32f;
        var _Rgba16f = OpenTK.Graphics.ES30.Token.Rgba16f;
        var _Rgb16f = OpenTK.Graphics.ES30.Token.Rgb16f;
        var _MaxDrawBuffers = OpenTK.Graphics.ES30.Token.MaxDrawBuffers;
        var _DrawBuffer0 = OpenTK.Graphics.ES30.Token.DrawBuffer0;
        var _DrawBuffer1 = OpenTK.Graphics.ES30.Token.DrawBuffer1;
        var _DrawBuffer2 = OpenTK.Graphics.ES30.Token.DrawBuffer2;
        var _DrawBuffer3 = OpenTK.Graphics.ES30.Token.DrawBuffer3;
        var _DrawBuffer4 = OpenTK.Graphics.ES30.Token.DrawBuffer4;
        var _DrawBuffer5 = OpenTK.Graphics.ES30.Token.DrawBuffer5;
        var _DrawBuffer6 = OpenTK.Graphics.ES30.Token.DrawBuffer6;
        var _DrawBuffer7 = OpenTK.Graphics.ES30.Token.DrawBuffer7;
        var _DrawBuffer8 = OpenTK.Graphics.ES30.Token.DrawBuffer8;
        var _DrawBuffer9 = OpenTK.Graphics.ES30.Token.DrawBuffer9;
        var _DrawBuffer10 = OpenTK.Graphics.ES30.Token.DrawBuffer10;
        var _DrawBuffer11 = OpenTK.Graphics.ES30.Token.DrawBuffer11;
        var _DrawBuffer12 = OpenTK.Graphics.ES30.Token.DrawBuffer12;
        var _DrawBuffer13 = OpenTK.Graphics.ES30.Token.DrawBuffer13;
        var _DrawBuffer14 = OpenTK.Graphics.ES30.Token.DrawBuffer14;
        var _DrawBuffer15 = OpenTK.Graphics.ES30.Token.DrawBuffer15;
        var _TextureCompareMode = OpenTK.Graphics.ES30.Token.TextureCompareMode;
        var _TextureCompareFunc = OpenTK.Graphics.ES30.Token.TextureCompareFunc;
        var _CompareRefToTexture = OpenTK.Graphics.ES30.Token.CompareRefToTexture;
        var _CurrentQuery = OpenTK.Graphics.ES30.Token.CurrentQuery;
        var _QueryResult = OpenTK.Graphics.ES30.Token.QueryResult;
        var _QueryResultAvailable = OpenTK.Graphics.ES30.Token.QueryResultAvailable;
        var _BufferMapped = OpenTK.Graphics.ES30.Token.BufferMapped;
        var _BufferMapPointer = OpenTK.Graphics.ES30.Token.BufferMapPointer;
        var _StreamRead = OpenTK.Graphics.ES30.Token.StreamRead;
        var _StreamCopy = OpenTK.Graphics.ES30.Token.StreamCopy;
        var _StaticRead = OpenTK.Graphics.ES30.Token.StaticRead;
        var _StaticCopy = OpenTK.Graphics.ES30.Token.StaticCopy;
        var _DynamicRead = OpenTK.Graphics.ES30.Token.DynamicRead;
        var _DynamicCopy = OpenTK.Graphics.ES30.Token.DynamicCopy;
        var _PixelPackBuffer = OpenTK.Graphics.ES30.Token.PixelPackBuffer;
        var _PixelUnpackBuffer = OpenTK.Graphics.ES30.Token.PixelUnpackBuffer;
        var _PixelPackBufferBinding = OpenTK.Graphics.ES30.Token.PixelPackBufferBinding;
        var _PixelUnpackBufferBinding = OpenTK.Graphics.ES30.Token.PixelUnpackBufferBinding;
        var _Depth24Stencil8 = OpenTK.Graphics.ES30.Token.Depth24Stencil8;
        var _VertexAttribArrayInteger = OpenTK.Graphics.ES30.Token.VertexAttribArrayInteger;
        var _VertexAttribArrayDivisor = OpenTK.Graphics.ES30.Token.VertexAttribArrayDivisor;
        var _MaxArrayTextureLayers = OpenTK.Graphics.ES30.Token.MaxArrayTextureLayers;
        var _MinProgramTexelOffset = OpenTK.Graphics.ES30.Token.MinProgramTexelOffset;
        var _MaxProgramTexelOffset = OpenTK.Graphics.ES30.Token.MaxProgramTexelOffset;
        var _SamplerBinding = OpenTK.Graphics.ES30.Token.SamplerBinding;
        var _UniformBuffer = OpenTK.Graphics.ES30.Token.UniformBuffer;
        var _UniformBufferBinding = OpenTK.Graphics.ES30.Token.UniformBufferBinding;
        var _UniformBufferStart = OpenTK.Graphics.ES30.Token.UniformBufferStart;
        var _UniformBufferSize = OpenTK.Graphics.ES30.Token.UniformBufferSize;
        var _MaxVertexUniformBlocks = OpenTK.Graphics.ES30.Token.MaxVertexUniformBlocks;
        var _MaxFragmentUniformBlocks = OpenTK.Graphics.ES30.Token.MaxFragmentUniformBlocks;
        var _MaxCombinedUniformBlocks = OpenTK.Graphics.ES30.Token.MaxCombinedUniformBlocks;
        var _MaxUniformBufferBindings = OpenTK.Graphics.ES30.Token.MaxUniformBufferBindings;
        var _MaxUniformBlockSize = OpenTK.Graphics.ES30.Token.MaxUniformBlockSize;
        var _MaxCombinedVertexUniformComponents = OpenTK.Graphics.ES30.Token.MaxCombinedVertexUniformComponents;
        var _MaxCombinedFragmentUniformComponents = OpenTK.Graphics.ES30.Token.MaxCombinedFragmentUniformComponents;
        var _UniformBufferOffsetAlignment = OpenTK.Graphics.ES30.Token.UniformBufferOffsetAlignment;
        var _ActiveUniformBlockMaxNameLength = OpenTK.Graphics.ES30.Token.ActiveUniformBlockMaxNameLength;
        var _ActiveUniformBlocks = OpenTK.Graphics.ES30.Token.ActiveUniformBlocks;
        var _UniformType = OpenTK.Graphics.ES30.Token.UniformType;
        var _UniformSize = OpenTK.Graphics.ES30.Token.UniformSize;
        var _UniformNameLength = OpenTK.Graphics.ES30.Token.UniformNameLength;
        var _UniformBlockIndex = OpenTK.Graphics.ES30.Token.UniformBlockIndex;
        var _UniformOffset = OpenTK.Graphics.ES30.Token.UniformOffset;
        var _UniformArrayStride = OpenTK.Graphics.ES30.Token.UniformArrayStride;
        var _UniformMatrixStride = OpenTK.Graphics.ES30.Token.UniformMatrixStride;
        var _UniformIsRowMajor = OpenTK.Graphics.ES30.Token.UniformIsRowMajor;
        var _UniformBlockBinding = OpenTK.Graphics.ES30.Token.UniformBlockBinding;
        var _UniformBlockDataSize = OpenTK.Graphics.ES30.Token.UniformBlockDataSize;
        var _UniformBlockNameLength = OpenTK.Graphics.ES30.Token.UniformBlockNameLength;
        var _UniformBlockActiveUniforms = OpenTK.Graphics.ES30.Token.UniformBlockActiveUniforms;
        var _UniformBlockActiveUniformIndices = OpenTK.Graphics.ES30.Token.UniformBlockActiveUniformIndices;
        var _UniformBlockReferencedByVertexShader = OpenTK.Graphics.ES30.Token.UniformBlockReferencedByVertexShader;
        var _UniformBlockReferencedByFragmentShader = OpenTK.Graphics.ES30.Token.UniformBlockReferencedByFragmentShader;
        var _MaxFragmentUniformComponents = OpenTK.Graphics.ES30.Token.MaxFragmentUniformComponents;
        var _MaxVertexUniformComponents = OpenTK.Graphics.ES30.Token.MaxVertexUniformComponents;
        var _MaxVaryingComponents = OpenTK.Graphics.ES30.Token.MaxVaryingComponents;
        var _Sampler3D = OpenTK.Graphics.ES30.Token.Sampler3D;
        var _Sampler2DShadow = OpenTK.Graphics.ES30.Token.Sampler2DShadow;
        var _FloatMat2x3 = OpenTK.Graphics.ES30.Token.FloatMat2x3;
        var _FloatMat2x4 = OpenTK.Graphics.ES30.Token.FloatMat2x4;
        var _FloatMat3x2 = OpenTK.Graphics.ES30.Token.FloatMat3x2;
        var _FloatMat3x4 = OpenTK.Graphics.ES30.Token.FloatMat3x4;
        var _FloatMat4x2 = OpenTK.Graphics.ES30.Token.FloatMat4x2;
        var _FloatMat4x3 = OpenTK.Graphics.ES30.Token.FloatMat4x3;
        var _FragmentShaderDerivativeHint = OpenTK.Graphics.ES30.Token.FragmentShaderDerivativeHint;
        var _UnsignedNormalized = OpenTK.Graphics.ES30.Token.UnsignedNormalized;
        var _Texture2DArray = OpenTK.Graphics.ES30.Token.Texture2DArray;
        var _TextureBinding2DArray = OpenTK.Graphics.ES30.Token.TextureBinding2DArray;
        var _AnySamplesPassed = OpenTK.Graphics.ES30.Token.AnySamplesPassed;
        var _R11fG11fB10f = OpenTK.Graphics.ES30.Token.R11fG11fB10f;
        var _UnsignedInt10F11F11FRev = OpenTK.Graphics.ES30.Token.UnsignedInt10F11F11FRev;
        var _Rgb9E5 = OpenTK.Graphics.ES30.Token.Rgb9E5;
        var _UnsignedInt5999Rev = OpenTK.Graphics.ES30.Token.UnsignedInt5999Rev;
        var _Srgb = OpenTK.Graphics.ES30.Token.Srgb;
        var _Srgb8 = OpenTK.Graphics.ES30.Token.Srgb8;
        var _Srgb8Alpha8 = OpenTK.Graphics.ES30.Token.Srgb8Alpha8;
        var _TransformFeedbackVaryingMaxLength = OpenTK.Graphics.ES30.Token.TransformFeedbackVaryingMaxLength;
        var _TransformFeedbackBufferMode = OpenTK.Graphics.ES30.Token.TransformFeedbackBufferMode;
        var _MaxTransformFeedbackSeparateComponents = OpenTK.Graphics.ES30.Token.MaxTransformFeedbackSeparateComponents;
        var _TransformFeedbackVaryings = OpenTK.Graphics.ES30.Token.TransformFeedbackVaryings;
        var _TransformFeedbackBufferStart = OpenTK.Graphics.ES30.Token.TransformFeedbackBufferStart;
        var _TransformFeedbackBufferSize = OpenTK.Graphics.ES30.Token.TransformFeedbackBufferSize;
        var _TransformFeedbackPrimitivesWritten = OpenTK.Graphics.ES30.Token.TransformFeedbackPrimitivesWritten;
        var _RasterizerDiscard = OpenTK.Graphics.ES30.Token.RasterizerDiscard;
        var _MaxTransformFeedbackInterleavedComponents = OpenTK.Graphics.ES30.Token.MaxTransformFeedbackInterleavedComponents;
        var _MaxTransformFeedbackSeparateAttribs = OpenTK.Graphics.ES30.Token.MaxTransformFeedbackSeparateAttribs;
        var _InterleavedAttribs = OpenTK.Graphics.ES30.Token.InterleavedAttribs;
        var _SeparateAttribs = OpenTK.Graphics.ES30.Token.SeparateAttribs;
        var _TransformFeedbackBuffer = OpenTK.Graphics.ES30.Token.TransformFeedbackBuffer;
        var _TransformFeedbackBufferBinding = OpenTK.Graphics.ES30.Token.TransformFeedbackBufferBinding;
        var _ReadFramebuffer = OpenTK.Graphics.ES30.Token.ReadFramebuffer;
        var _DrawFramebuffer = OpenTK.Graphics.ES30.Token.DrawFramebuffer;
        var _ReadFramebufferBinding = OpenTK.Graphics.ES30.Token.ReadFramebufferBinding;
        var _RenderbufferSamples = OpenTK.Graphics.ES30.Token.RenderbufferSamples;
        var _DepthComponent32f = OpenTK.Graphics.ES30.Token.DepthComponent32f;
        var _Depth32fStencil8 = OpenTK.Graphics.ES30.Token.Depth32fStencil8;
        var _FramebufferAttachmentTextureLayer = OpenTK.Graphics.ES30.Token.FramebufferAttachmentTextureLayer;
        var _MaxColorAttachments = OpenTK.Graphics.ES30.Token.MaxColorAttachments;
        var _ColorAttachment1 = OpenTK.Graphics.ES30.Token.ColorAttachment1;
        var _ColorAttachment2 = OpenTK.Graphics.ES30.Token.ColorAttachment2;
        var _ColorAttachment3 = OpenTK.Graphics.ES30.Token.ColorAttachment3;
        var _ColorAttachment4 = OpenTK.Graphics.ES30.Token.ColorAttachment4;
        var _ColorAttachment5 = OpenTK.Graphics.ES30.Token.ColorAttachment5;
        var _ColorAttachment6 = OpenTK.Graphics.ES30.Token.ColorAttachment6;
        var _ColorAttachment7 = OpenTK.Graphics.ES30.Token.ColorAttachment7;
        var _ColorAttachment8 = OpenTK.Graphics.ES30.Token.ColorAttachment8;
        var _ColorAttachment9 = OpenTK.Graphics.ES30.Token.ColorAttachment9;
        var _ColorAttachment10 = OpenTK.Graphics.ES30.Token.ColorAttachment10;
        var _ColorAttachment11 = OpenTK.Graphics.ES30.Token.ColorAttachment11;
        var _ColorAttachment12 = OpenTK.Graphics.ES30.Token.ColorAttachment12;
        var _ColorAttachment13 = OpenTK.Graphics.ES30.Token.ColorAttachment13;
        var _ColorAttachment14 = OpenTK.Graphics.ES30.Token.ColorAttachment14;
        var _ColorAttachment15 = OpenTK.Graphics.ES30.Token.ColorAttachment15;
        var _FramebufferIncompleteMultisample = OpenTK.Graphics.ES30.Token.FramebufferIncompleteMultisample;
        var _MaxSamples = OpenTK.Graphics.ES30.Token.MaxSamples;
        var _PrimitiveRestartFixedIndex = OpenTK.Graphics.ES30.Token.PrimitiveRestartFixedIndex;
        var _AnySamplesPassedConservative = OpenTK.Graphics.ES30.Token.AnySamplesPassedConservative;
        var _MaxElementIndex = OpenTK.Graphics.ES30.Token.MaxElementIndex;
        var _Rgba32ui = OpenTK.Graphics.ES30.Token.Rgba32ui;
        var _Rgb32ui = OpenTK.Graphics.ES30.Token.Rgb32ui;
        var _Rgba16ui = OpenTK.Graphics.ES30.Token.Rgba16ui;
        var _Rgb16ui = OpenTK.Graphics.ES30.Token.Rgb16ui;
        var _Rgba8ui = OpenTK.Graphics.ES30.Token.Rgba8ui;
        var _Rgb8ui = OpenTK.Graphics.ES30.Token.Rgb8ui;
        var _Rgba32i = OpenTK.Graphics.ES30.Token.Rgba32i;
        var _Rgb32i = OpenTK.Graphics.ES30.Token.Rgb32i;
        var _Rgba16i = OpenTK.Graphics.ES30.Token.Rgba16i;
        var _Rgb16i = OpenTK.Graphics.ES30.Token.Rgb16i;
        var _Rgba8i = OpenTK.Graphics.ES30.Token.Rgba8i;
        var _Rgb8i = OpenTK.Graphics.ES30.Token.Rgb8i;
        var _RedInteger = OpenTK.Graphics.ES30.Token.RedInteger;
        var _RgbInteger = OpenTK.Graphics.ES30.Token.RgbInteger;
        var _RgbaInteger = OpenTK.Graphics.ES30.Token.RgbaInteger;
        var _Int2101010Rev = OpenTK.Graphics.ES30.Token.Int2101010Rev;
        var _Float32UnsignedInt248Rev = OpenTK.Graphics.ES30.Token.Float32UnsignedInt248Rev;
        var _Sampler2DArray = OpenTK.Graphics.ES30.Token.Sampler2DArray;
        var _Sampler2DArrayShadow = OpenTK.Graphics.ES30.Token.Sampler2DArrayShadow;
        var _SamplerCubeShadow = OpenTK.Graphics.ES30.Token.SamplerCubeShadow;
        var _UnsignedIntVec2 = OpenTK.Graphics.ES30.Token.UnsignedIntVec2;
        var _UnsignedIntVec3 = OpenTK.Graphics.ES30.Token.UnsignedIntVec3;
        var _UnsignedIntVec4 = OpenTK.Graphics.ES30.Token.UnsignedIntVec4;
        var _IntSampler2D = OpenTK.Graphics.ES30.Token.IntSampler2D;
        var _IntSampler3D = OpenTK.Graphics.ES30.Token.IntSampler3D;
        var _IntSamplerCube = OpenTK.Graphics.ES30.Token.IntSamplerCube;
        var _IntSampler2DArray = OpenTK.Graphics.ES30.Token.IntSampler2DArray;
        var _UnsignedIntSampler2D = OpenTK.Graphics.ES30.Token.UnsignedIntSampler2D;
        var _UnsignedIntSampler3D = OpenTK.Graphics.ES30.Token.UnsignedIntSampler3D;
        var _UnsignedIntSamplerCube = OpenTK.Graphics.ES30.Token.UnsignedIntSamplerCube;
        var _UnsignedIntSampler2DArray = OpenTK.Graphics.ES30.Token.UnsignedIntSampler2DArray;
        var _TransformFeedback = OpenTK.Graphics.ES30.Token.TransformFeedback;
        var _TransformFeedbackPaused = OpenTK.Graphics.ES30.Token.TransformFeedbackPaused;
        var _TransformFeedbackActive = OpenTK.Graphics.ES30.Token.TransformFeedbackActive;
        var _TransformFeedbackBinding = OpenTK.Graphics.ES30.Token.TransformFeedbackBinding;
        var _TextureSwizzleR = OpenTK.Graphics.ES30.Token.TextureSwizzleR;
        var _TextureSwizzleG = OpenTK.Graphics.ES30.Token.TextureSwizzleG;
        var _TextureSwizzleB = OpenTK.Graphics.ES30.Token.TextureSwizzleB;
        var _TextureSwizzleA = OpenTK.Graphics.ES30.Token.TextureSwizzleA;
        var _CopyReadBuffer = OpenTK.Graphics.ES30.Token.CopyReadBuffer;
        var _CopyWriteBuffer = OpenTK.Graphics.ES30.Token.CopyWriteBuffer;
        var _R8Snorm = OpenTK.Graphics.ES30.Token.R8Snorm;
        var _Rg8Snorm = OpenTK.Graphics.ES30.Token.Rg8Snorm;
        var _Rgb8Snorm = OpenTK.Graphics.ES30.Token.Rgb8Snorm;
        var _Rgba8Snorm = OpenTK.Graphics.ES30.Token.Rgba8Snorm;
        var _SignedNormalized = OpenTK.Graphics.ES30.Token.SignedNormalized;
        var _Rgb10A2ui = OpenTK.Graphics.ES30.Token.Rgb10A2ui;
        var _MaxServerWaitTimeout = OpenTK.Graphics.ES30.Token.MaxServerWaitTimeout;
        var _ObjectType = OpenTK.Graphics.ES30.Token.ObjectType;
        var _SyncCondition = OpenTK.Graphics.ES30.Token.SyncCondition;
        var _SyncStatus = OpenTK.Graphics.ES30.Token.SyncStatus;
        var _SyncFlags = OpenTK.Graphics.ES30.Token.SyncFlags;
        var _SyncFence = OpenTK.Graphics.ES30.Token.SyncFence;
        var _SyncGpuCommandsComplete = OpenTK.Graphics.ES30.Token.SyncGpuCommandsComplete;
        var _Unsignaled = OpenTK.Graphics.ES30.Token.Unsignaled;
        var _Signaled = OpenTK.Graphics.ES30.Token.Signaled;
        var _AlreadySignaled = OpenTK.Graphics.ES30.Token.AlreadySignaled;
        var _TimeoutExpired = OpenTK.Graphics.ES30.Token.TimeoutExpired;
        var _ConditionSatisfied = OpenTK.Graphics.ES30.Token.ConditionSatisfied;
        var _WaitFailed = OpenTK.Graphics.ES30.Token.WaitFailed;
        var _BufferAccessFlags = OpenTK.Graphics.ES30.Token.BufferAccessFlags;
        var _BufferMapLength = OpenTK.Graphics.ES30.Token.BufferMapLength;
        var _BufferMapOffset = OpenTK.Graphics.ES30.Token.BufferMapOffset;
        var _MaxVertexOutputComponents = OpenTK.Graphics.ES30.Token.MaxVertexOutputComponents;
        var _MaxFragmentInputComponents = OpenTK.Graphics.ES30.Token.MaxFragmentInputComponents;
        var _TextureImmutableFormat = OpenTK.Graphics.ES30.Token.TextureImmutableFormat;
        var _CompressedR11Eac = OpenTK.Graphics.ES30.Token.CompressedR11Eac;
        var _CompressedSignedR11Eac = OpenTK.Graphics.ES30.Token.CompressedSignedR11Eac;
        var _CompressedRg11Eac = OpenTK.Graphics.ES30.Token.CompressedRg11Eac;
        var _CompressedSignedRg11Eac = OpenTK.Graphics.ES30.Token.CompressedSignedRg11Eac;
        var _CompressedRgb8Etc2 = OpenTK.Graphics.ES30.Token.CompressedRgb8Etc2;
        var _CompressedSrgb8Etc2 = OpenTK.Graphics.ES30.Token.CompressedSrgb8Etc2;
        var _CompressedRgb8PunchthroughAlpha1Etc2 = OpenTK.Graphics.ES30.Token.CompressedRgb8PunchthroughAlpha1Etc2;
        var _CompressedSrgb8PunchthroughAlpha1Etc2 = OpenTK.Graphics.ES30.Token.CompressedSrgb8PunchthroughAlpha1Etc2;
        var _CompressedRgba8Etc2Eac = OpenTK.Graphics.ES30.Token.CompressedRgba8Etc2Eac;
        var _CompressedSrgb8Alpha8Etc2Eac = OpenTK.Graphics.ES30.Token.CompressedSrgb8Alpha8Etc2Eac;
        var _NumSampleCounts = OpenTK.Graphics.ES30.Token.NumSampleCounts;
        var _InvalidIndex = OpenTK.Graphics.ES30.Token.InvalidIndex;
        var _TimeoutIgnored = OpenTK.Graphics.ES30.Token.TimeoutIgnored;
    }
    static void Test_UniformTypes_4619() {
        var _FloatVec2 = OpenTK.Graphics.ES30.UniformTypes.FloatVec2;
        var _FloatVec3 = OpenTK.Graphics.ES30.UniformTypes.FloatVec3;
        var _FloatVec4 = OpenTK.Graphics.ES30.UniformTypes.FloatVec4;
        var _IntVec2 = OpenTK.Graphics.ES30.UniformTypes.IntVec2;
        var _IntVec3 = OpenTK.Graphics.ES30.UniformTypes.IntVec3;
        var _IntVec4 = OpenTK.Graphics.ES30.UniformTypes.IntVec4;
        var _Bool = OpenTK.Graphics.ES30.UniformTypes.Bool;
        var _BoolVec2 = OpenTK.Graphics.ES30.UniformTypes.BoolVec2;
        var _BoolVec3 = OpenTK.Graphics.ES30.UniformTypes.BoolVec3;
        var _BoolVec4 = OpenTK.Graphics.ES30.UniformTypes.BoolVec4;
        var _FloatMat2 = OpenTK.Graphics.ES30.UniformTypes.FloatMat2;
        var _FloatMat3 = OpenTK.Graphics.ES30.UniformTypes.FloatMat3;
        var _FloatMat4 = OpenTK.Graphics.ES30.UniformTypes.FloatMat4;
        var _Sampler2D = OpenTK.Graphics.ES30.UniformTypes.Sampler2D;
        var _SamplerCube = OpenTK.Graphics.ES30.UniformTypes.SamplerCube;
    }
    static void Test_VertexArrays_4620() {
        var _VertexAttribArrayEnabled = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayEnabled;
        var _VertexAttribArraySize = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArraySize;
        var _VertexAttribArrayStride = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayStride;
        var _VertexAttribArrayType = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayType;
        var _VertexAttribArrayPointer = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayPointer;
        var _VertexAttribArrayNormalized = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayNormalized;
        var _VertexAttribArrayBufferBinding = OpenTK.Graphics.ES30.VertexArrays.VertexAttribArrayBufferBinding;
    }
    static void Test_VertexAttribPointerType_4621() {
        var _Byte = OpenTK.Graphics.ES30.VertexAttribPointerType.Byte;
        var _UnsignedByte = OpenTK.Graphics.ES30.VertexAttribPointerType.UnsignedByte;
        var _Short = OpenTK.Graphics.ES30.VertexAttribPointerType.Short;
        var _UnsignedShort = OpenTK.Graphics.ES30.VertexAttribPointerType.UnsignedShort;
        var _Float = OpenTK.Graphics.ES30.VertexAttribPointerType.Float;
        var _Fixed = OpenTK.Graphics.ES30.VertexAttribPointerType.Fixed;
    }

    static unsafe void Test_ActiveTexture_4623() {
        OpenTK.Graphics.ES30.All _texture = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.ActiveTexture(_texture);
    }
    static unsafe void Test_AttachShader_4624() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.GL.AttachShader(_program,_shader);
    }
    static unsafe void Test_AttachShader_4625() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.AttachShader(_program,_shader);
    }
    static unsafe void Test_BeginQuery_4626() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BeginQuery(_target,_id);
    }
    static unsafe void Test_BeginQuery_4627() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _id = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BeginQuery(_target,_id);
    }
    static unsafe void Test_BeginTransformFeedback_4628() {
        OpenTK.Graphics.ES30.All _primitiveMode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BeginTransformFeedback(_primitiveMode);
    }
    static unsafe void Test_BindAttribLocation_4629() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.String _name = default(System.String);
        OpenTK.Graphics.ES30.GL.BindAttribLocation(_program,_index,_name);
    }
    static unsafe void Test_BindAttribLocation_4630() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.String _name = default(System.String);
        OpenTK.Graphics.ES30.GL.BindAttribLocation(_program,_index,_name);
    }
    static unsafe void Test_BindBuffer_4631() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindBuffer_4632() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindBuffer(_target,_buffer);
    }
    static unsafe void Test_BindBufferBase_4633() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int32 _buffer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindBufferBase(_target,_index,_buffer);
    }
    static unsafe void Test_BindBufferBase_4634() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.UInt32 _buffer = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindBufferBase(_target,_index,_buffer);
    }
    static unsafe void Test_BindBufferRange_4635() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int32 _buffer = default(System.Int32);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.BindBufferRange(_target,_index,_buffer,_offset,_size);
    }
    static unsafe void Test_BindBufferRange_4636() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.UInt32 _buffer = default(System.UInt32);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.BindBufferRange(_target,_index,_buffer,_offset,_size);
    }
    static unsafe void Test_BindFramebuffer_4637() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _framebuffer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindFramebuffer(_target,_framebuffer);
    }
    static unsafe void Test_BindFramebuffer_4638() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _framebuffer = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindFramebuffer(_target,_framebuffer);
    }
    static unsafe void Test_BindRenderbuffer_4639() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _renderbuffer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindRenderbuffer(_target,_renderbuffer);
    }
    static unsafe void Test_BindRenderbuffer_4640() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _renderbuffer = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindRenderbuffer(_target,_renderbuffer);
    }
    static unsafe void Test_BindSampler_4641() {
        System.Int32 _unit = default(System.Int32);
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindSampler(_unit,_sampler);
    }
    static unsafe void Test_BindSampler_4642() {
        System.UInt32 _unit = default(System.UInt32);
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindSampler(_unit,_sampler);
    }
    static unsafe void Test_BindTexture_4643() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _texture = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BindTexture_4644() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _texture = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindTexture(_target,_texture);
    }
    static unsafe void Test_BindTransformFeedback_4645() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindTransformFeedback(_target,_id);
    }
    static unsafe void Test_BindTransformFeedback_4646() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _id = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindTransformFeedback(_target,_id);
    }
    static unsafe void Test_BindVertexArray_4647() {
        System.Int32 _array = default(System.Int32);
        OpenTK.Graphics.ES30.GL.BindVertexArray(_array);
    }
    static unsafe void Test_BindVertexArray_4648() {
        System.UInt32 _array = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.BindVertexArray(_array);
    }
    static unsafe void Test_BlendColor_4649() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES30.GL.BlendColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_BlendEquation_4650() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlendEquation(_mode);
    }
    static unsafe void Test_BlendEquationSeparate_4651() {
        OpenTK.Graphics.ES30.All _modeRGB = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _modeAlpha = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlendEquationSeparate(_modeRGB,_modeAlpha);
    }
    static unsafe void Test_BlendFunc_4652() {
        OpenTK.Graphics.ES30.All _sfactor = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _dfactor = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlendFunc(_sfactor,_dfactor);
    }
    static unsafe void Test_BlendFuncSeparate_4653() {
        OpenTK.Graphics.ES30.All _srcRGB = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _dstRGB = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _srcAlpha = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _dstAlpha = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlendFuncSeparate(_srcRGB,_dstRGB,_srcAlpha,_dstAlpha);
    }
    static unsafe void Test_BlitFramebuffer_4654() {
        System.Int32 _srcX0 = default(System.Int32);
        System.Int32 _srcY0 = default(System.Int32);
        System.Int32 _srcX1 = default(System.Int32);
        System.Int32 _srcY1 = default(System.Int32);
        System.Int32 _dstX0 = default(System.Int32);
        System.Int32 _dstY0 = default(System.Int32);
        System.Int32 _dstX1 = default(System.Int32);
        System.Int32 _dstY1 = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES30.All _filter = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlitFramebuffer(_srcX0,_srcY0,_srcX1,_srcY1,_dstX0,_dstY0,_dstX1,_dstY1,_mask,_filter);
    }
    static unsafe void Test_BlitFramebuffer_4655() {
        System.Int32 _srcX0 = default(System.Int32);
        System.Int32 _srcY0 = default(System.Int32);
        System.Int32 _srcX1 = default(System.Int32);
        System.Int32 _srcY1 = default(System.Int32);
        System.Int32 _dstX0 = default(System.Int32);
        System.Int32 _dstY0 = default(System.Int32);
        System.Int32 _dstX1 = default(System.Int32);
        System.Int32 _dstY1 = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES30.All _filter = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BlitFramebuffer(_srcX0,_srcY0,_srcX1,_srcY1,_dstX0,_dstY0,_dstX1,_dstY1,_mask,_filter);
    }
    static unsafe void Test_BufferData_4656() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.All _usage = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BufferData(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4657() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.All _usage = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4658() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.All _usage = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4659() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.All _usage = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BufferData<int>(_target,_size,_data,_usage);
    }
    static unsafe void Test_BufferData_4660() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES30.All _usage = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.BufferData<int>(_target,_size,ref _data,_usage);
    }
    static unsafe void Test_BufferSubData_4661() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.BufferSubData(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4662() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4663() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4664() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.GL.BufferSubData<int>(_target,_offset,_size,_data);
    }
    static unsafe void Test_BufferSubData_4665() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        int _data = default(int);
        OpenTK.Graphics.ES30.GL.BufferSubData<int>(_target,_offset,_size,ref _data);
    }
    static unsafe void Test_CheckFramebufferStatus_4666() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All r = OpenTK.Graphics.ES30.GL.CheckFramebufferStatus(_target);
    }
    static unsafe void Test_Clear_4667() {
        OpenTK.Graphics.ES30.ClearBufferMask _mask = default(OpenTK.Graphics.ES30.ClearBufferMask);
        OpenTK.Graphics.ES30.GL.Clear(_mask);
    }
    static unsafe void Test_ClearBuffer_4668() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Single _depth = default(System.Single);
        System.Int32 _stencil = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_depth,_stencil);
    }
    static unsafe void Test_ClearBuffer_4669() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearBuffer_4670() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,ref _value);
    }
    static unsafe void Test_ClearBuffer_4671() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearBuffer_4672() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Int32[] _value = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearBuffer_4673() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Int32 _value = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,ref _value);
    }
    static unsafe void Test_ClearBuffer_4674() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.Int32* _value = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearBuffer_4675() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.UInt32[] _value = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearBuffer_4676() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.UInt32 _value = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,ref _value);
    }
    static unsafe void Test_ClearBuffer_4677() {
        OpenTK.Graphics.ES30.All _buffer = default(OpenTK.Graphics.ES30.All);
        System.Int32 _drawbuffer = default(System.Int32);
        System.UInt32* _value = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.ClearBuffer(_buffer,_drawbuffer,_value);
    }
    static unsafe void Test_ClearColor_4678() {
        System.Single _red = default(System.Single);
        System.Single _green = default(System.Single);
        System.Single _blue = default(System.Single);
        System.Single _alpha = default(System.Single);
        OpenTK.Graphics.ES30.GL.ClearColor(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_ClearDepth_4679() {
        System.Single _depth = default(System.Single);
        OpenTK.Graphics.ES30.GL.ClearDepth(_depth);
    }
    static unsafe void Test_ClearStencil_4680() {
        System.Int32 _s = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ClearStencil(_s);
    }
    static unsafe void Test_ClientWaitSync_4681() {
        System.IntPtr _sync = default(System.IntPtr);
        System.Int32 _flags = default(System.Int32);
        System.Int64 _timeout = default(System.Int64);
        OpenTK.Graphics.ES30.All r = OpenTK.Graphics.ES30.GL.ClientWaitSync(_sync,_flags,_timeout);
    }
    static unsafe void Test_ClientWaitSync_4682() {
        System.IntPtr _sync = default(System.IntPtr);
        System.UInt32 _flags = default(System.UInt32);
        System.UInt64 _timeout = default(System.UInt64);
        OpenTK.Graphics.ES30.All r = OpenTK.Graphics.ES30.GL.ClientWaitSync(_sync,_flags,_timeout);
    }
    static unsafe void Test_ColorMask_4683() {
        System.Boolean _red = default(System.Boolean);
        System.Boolean _green = default(System.Boolean);
        System.Boolean _blue = default(System.Boolean);
        System.Boolean _alpha = default(System.Boolean);
        OpenTK.Graphics.ES30.GL.ColorMask(_red,_green,_blue,_alpha);
    }
    static unsafe void Test_CompileShader_4684() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.GL.CompileShader(_shader);
    }
    static unsafe void Test_CompileShader_4685() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.CompileShader(_shader);
    }
    static unsafe void Test_CompressedTexImage2D_4686() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.CompressedTexImage2D(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4687() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4688() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4689() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage2D_4690() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES30.GL.CompressedTexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexImage3D_4691() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.CompressedTexImage3D(_target,_level,_internalformat,_width,_height,_depth,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage3D_4692() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage3D_4693() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage3D_4694() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.GL.CompressedTexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexImage3D_4695() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES30.GL.CompressedTexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4696() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4697() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4698() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4699() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage2D_4700() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_imageSize,ref _data);
    }
    static unsafe void Test_CompressedTexSubImage3D_4701() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        System.IntPtr _data = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage3D(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage3D_4702() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[] _data = default(int[]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage3D_4703() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,] _data = default(int[,]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage3D_4704() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int[,,] _data = default(int[,,]);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_imageSize,_data);
    }
    static unsafe void Test_CompressedTexSubImage3D_4705() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        System.Int32 _imageSize = default(System.Int32);
        int _data = default(int);
        OpenTK.Graphics.ES30.GL.CompressedTexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_imageSize,ref _data);
    }
    static unsafe void Test_CopyBufferSubData_4706() {
        OpenTK.Graphics.ES30.All _readTarget = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _writeTarget = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _readOffset = default(System.IntPtr);
        System.IntPtr _writeOffset = default(System.IntPtr);
        System.IntPtr _size = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.CopyBufferSubData(_readTarget,_writeTarget,_readOffset,_writeOffset,_size);
    }
    static unsafe void Test_CopyTexImage2D_4707() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.GL.CopyTexImage2D(_target,_level,_internalformat,_x,_y,_width,_height,_border);
    }
    static unsafe void Test_CopyTexSubImage2D_4708() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.CopyTexSubImage2D(_target,_level,_xoffset,_yoffset,_x,_y,_width,_height);
    }
    static unsafe void Test_CopyTexSubImage3D_4709() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.CopyTexSubImage3D(_target,_level,_xoffset,_yoffset,_zoffset,_x,_y,_width,_height);
    }
    static unsafe void Test_CreateProgram_4710() {
        System.Int32 r = OpenTK.Graphics.ES30.GL.CreateProgram();
    }
    static unsafe void Test_CreateShader_4711() {
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 r = OpenTK.Graphics.ES30.GL.CreateShader(_type);
    }
    static unsafe void Test_CullFace_4712() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.CullFace(_mode);
    }
    static unsafe void Test_DeleteBuffers_4713() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4714() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_4715() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4716() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteBuffers_4717() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,ref _buffers);
    }
    static unsafe void Test_DeleteBuffers_4718() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteBuffers(_n,_buffers);
    }
    static unsafe void Test_DeleteFramebuffers_4719() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _framebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4720() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _framebuffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,ref _framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4721() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _framebuffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4722() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4723() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _framebuffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,ref _framebuffers);
    }
    static unsafe void Test_DeleteFramebuffers_4724() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _framebuffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_DeleteProgram_4725() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteProgram(_program);
    }
    static unsafe void Test_DeleteProgram_4726() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteProgram(_program);
    }
    static unsafe void Test_DeleteQueries_4727() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _ids = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,_ids);
    }
    static unsafe void Test_DeleteQueries_4728() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _ids = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,ref _ids);
    }
    static unsafe void Test_DeleteQueries_4729() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _ids = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,_ids);
    }
    static unsafe void Test_DeleteQueries_4730() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _ids = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,_ids);
    }
    static unsafe void Test_DeleteQueries_4731() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _ids = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,ref _ids);
    }
    static unsafe void Test_DeleteQueries_4732() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _ids = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteQueries(_n,_ids);
    }
    static unsafe void Test_DeleteRenderbuffers_4733() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _renderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4734() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _renderbuffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,ref _renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4735() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _renderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4736() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4737() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _renderbuffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,ref _renderbuffers);
    }
    static unsafe void Test_DeleteRenderbuffers_4738() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _renderbuffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_DeleteSamplers_4739() {
        System.Int32 _count = default(System.Int32);
        System.Int32[] _samplers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,_samplers);
    }
    static unsafe void Test_DeleteSamplers_4740() {
        System.Int32 _count = default(System.Int32);
        System.Int32 _samplers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,ref _samplers);
    }
    static unsafe void Test_DeleteSamplers_4741() {
        System.Int32 _count = default(System.Int32);
        System.Int32* _samplers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,_samplers);
    }
    static unsafe void Test_DeleteSamplers_4742() {
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _samplers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,_samplers);
    }
    static unsafe void Test_DeleteSamplers_4743() {
        System.Int32 _count = default(System.Int32);
        System.UInt32 _samplers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,ref _samplers);
    }
    static unsafe void Test_DeleteSamplers_4744() {
        System.Int32 _count = default(System.Int32);
        System.UInt32* _samplers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteSamplers(_count,_samplers);
    }
    static unsafe void Test_DeleteShader_4745() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteShader(_shader);
    }
    static unsafe void Test_DeleteShader_4746() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteShader(_shader);
    }
    static unsafe void Test_DeleteSync_4747() {
        System.IntPtr _sync = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.DeleteSync(_sync);
    }
    static unsafe void Test_DeleteTextures_4748() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4749() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_4750() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4751() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTextures_4752() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,ref _textures);
    }
    static unsafe void Test_DeleteTextures_4753() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteTextures(_n,_textures);
    }
    static unsafe void Test_DeleteTransformFeedback_4754() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _ids = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,_ids);
    }
    static unsafe void Test_DeleteTransformFeedback_4755() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _ids = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,ref _ids);
    }
    static unsafe void Test_DeleteTransformFeedback_4756() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _ids = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,_ids);
    }
    static unsafe void Test_DeleteTransformFeedback_4757() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _ids = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,_ids);
    }
    static unsafe void Test_DeleteTransformFeedback_4758() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _ids = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,ref _ids);
    }
    static unsafe void Test_DeleteTransformFeedback_4759() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _ids = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteTransformFeedback(_n,_ids);
    }
    static unsafe void Test_DeleteVertexArrays_4760() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _arrays = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,_arrays);
    }
    static unsafe void Test_DeleteVertexArrays_4761() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _arrays = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,ref _arrays);
    }
    static unsafe void Test_DeleteVertexArrays_4762() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _arrays = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,_arrays);
    }
    static unsafe void Test_DeleteVertexArrays_4763() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _arrays = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,_arrays);
    }
    static unsafe void Test_DeleteVertexArrays_4764() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _arrays = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,ref _arrays);
    }
    static unsafe void Test_DeleteVertexArrays_4765() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _arrays = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.DeleteVertexArrays(_n,_arrays);
    }
    static unsafe void Test_DepthFunc_4766() {
        OpenTK.Graphics.ES30.All _func = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.DepthFunc(_func);
    }
    static unsafe void Test_DepthMask_4767() {
        System.Boolean _flag = default(System.Boolean);
        OpenTK.Graphics.ES30.GL.DepthMask(_flag);
    }
    static unsafe void Test_DepthRange_4768() {
        System.Single _n = default(System.Single);
        System.Single _f = default(System.Single);
        OpenTK.Graphics.ES30.GL.DepthRange(_n,_f);
    }
    static unsafe void Test_DetachShader_4769() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DetachShader(_program,_shader);
    }
    static unsafe void Test_DetachShader_4770() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DetachShader(_program,_shader);
    }
    static unsafe void Test_Disable_4771() {
        OpenTK.Graphics.ES30.All _cap = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.Disable(_cap);
    }
    static unsafe void Test_DisableVertexAttribArray_4772() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DisableVertexAttribArray(_index);
    }
    static unsafe void Test_DisableVertexAttribArray_4773() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.DisableVertexAttribArray(_index);
    }
    static unsafe void Test_DrawArrays_4774() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _first = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawArrays(_mode,_first,_count);
    }
    static unsafe void Test_DrawArraysInstanced_4775() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _first = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawArraysInstanced(_mode,_first,_count,_instanceCount);
    }
    static unsafe void Test_DrawBuffers_4776() {
        System.Int32 _n = default(System.Int32);
        OpenTK.Graphics.ES30.All[] _bufs = default(OpenTK.Graphics.ES30.All[]);
        OpenTK.Graphics.ES30.GL.DrawBuffers(_n,_bufs);
    }
    static unsafe void Test_DrawBuffers_4777() {
        System.Int32 _n = default(System.Int32);
        OpenTK.Graphics.ES30.All _bufs = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.DrawBuffers(_n,ref _bufs);
    }
    static unsafe void Test_DrawBuffers_4778() {
        System.Int32 _n = default(System.Int32);
        OpenTK.Graphics.ES30.All* _bufs = default(OpenTK.Graphics.ES30.All*);
        OpenTK.Graphics.ES30.GL.DrawBuffers(_n,_bufs);
    }
    static unsafe void Test_DrawElements_4779() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.DrawElements(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4780() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES30.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4781() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES30.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4782() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES30.GL.DrawElements<int>(_mode,_count,_type,_indices);
    }
    static unsafe void Test_DrawElements_4783() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _indices = default(int);
        OpenTK.Graphics.ES30.GL.DrawElements<int>(_mode,_count,_type,ref _indices);
    }
    static unsafe void Test_DrawElementsInstanced_4784() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _indices = default(System.IntPtr);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElementsInstanced(_mode,_count,_type,_indices,_instanceCount);
    }
    static unsafe void Test_DrawElementsInstanced_4785() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _indices = default(int[]);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElementsInstanced<int>(_mode,_count,_type,_indices,_instanceCount);
    }
    static unsafe void Test_DrawElementsInstanced_4786() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _indices = default(int[,]);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElementsInstanced<int>(_mode,_count,_type,_indices,_instanceCount);
    }
    static unsafe void Test_DrawElementsInstanced_4787() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _indices = default(int[,,]);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElementsInstanced<int>(_mode,_count,_type,_indices,_instanceCount);
    }
    static unsafe void Test_DrawElementsInstanced_4788() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _indices = default(int);
        System.Int32 _instanceCount = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElementsInstanced<int>(_mode,_count,_type,ref _indices,_instanceCount);
    }
    static unsafe void Test_DrawRangeElements_4789() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _start = default(System.Int32);
        System.Int32 _end = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.DrawRangeElements(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4790() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _start = default(System.Int32);
        System.Int32 _end = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4791() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _start = default(System.Int32);
        System.Int32 _end = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4792() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _start = default(System.Int32);
        System.Int32 _end = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4793() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.Int32 _start = default(System.Int32);
        System.Int32 _end = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _indices = default(int);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,ref _indices);
    }
    static unsafe void Test_DrawRangeElements_4794() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _start = default(System.UInt32);
        System.UInt32 _end = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _indices = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.DrawRangeElements(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4795() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _start = default(System.UInt32);
        System.UInt32 _end = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _indices = default(int[]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4796() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _start = default(System.UInt32);
        System.UInt32 _end = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _indices = default(int[,]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4797() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _start = default(System.UInt32);
        System.UInt32 _end = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _indices = default(int[,,]);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,_indices);
    }
    static unsafe void Test_DrawRangeElements_4798() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _start = default(System.UInt32);
        System.UInt32 _end = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _indices = default(int);
        OpenTK.Graphics.ES30.GL.DrawRangeElements<int>(_mode,_start,_end,_count,_type,ref _indices);
    }
    static unsafe void Test_Enable_4799() {
        OpenTK.Graphics.ES30.All _cap = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.Enable(_cap);
    }
    static unsafe void Test_EnableVertexAttribArray_4800() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.GL.EnableVertexAttribArray(_index);
    }
    static unsafe void Test_EnableVertexAttribArray_4801() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.EnableVertexAttribArray(_index);
    }
    static unsafe void Test_EndQuery_4802() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.EndQuery(_target);
    }
    static unsafe void Test_EndTransformFeedback_4803() {
        OpenTK.Graphics.ES30.GL.EndTransformFeedback();
    }
    static unsafe void Test_FenceSync_4804() {
        OpenTK.Graphics.ES30.All _condition = default(OpenTK.Graphics.ES30.All);
        System.Int32 _flags = default(System.Int32);
        System.IntPtr r = OpenTK.Graphics.ES30.GL.FenceSync(_condition,_flags);
    }
    static unsafe void Test_FenceSync_4805() {
        OpenTK.Graphics.ES30.All _condition = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _flags = default(System.UInt32);
        System.IntPtr r = OpenTK.Graphics.ES30.GL.FenceSync(_condition,_flags);
    }
    static unsafe void Test_Finish_4806() {
        OpenTK.Graphics.ES30.GL.Finish();
    }
    static unsafe void Test_Flush_4807() {
        OpenTK.Graphics.ES30.GL.Flush();
    }
    static unsafe void Test_FlushMappedBufferRange_4808() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _length = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.FlushMappedBufferRange(_target,_offset,_length);
    }
    static unsafe void Test_FramebufferRenderbuffer_4809() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _renderbuffertarget = default(OpenTK.Graphics.ES30.All);
        System.Int32 _renderbuffer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.FramebufferRenderbuffer(_target,_attachment,_renderbuffertarget,_renderbuffer);
    }
    static unsafe void Test_FramebufferRenderbuffer_4810() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _renderbuffertarget = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _renderbuffer = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.FramebufferRenderbuffer(_target,_attachment,_renderbuffertarget,_renderbuffer);
    }
    static unsafe void Test_FramebufferTexture2D_4811() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _textarget = default(OpenTK.Graphics.ES30.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.GL.FramebufferTexture2D(_target,_attachment,_textarget,_texture,_level);
    }
    static unsafe void Test_FramebufferTexture2D_4812() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _textarget = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        OpenTK.Graphics.ES30.GL.FramebufferTexture2D(_target,_attachment,_textarget,_texture,_level);
    }
    static unsafe void Test_FramebufferTextureLayer_4813() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        System.Int32 _texture = default(System.Int32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _layer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.FramebufferTextureLayer(_target,_attachment,_texture,_level,_layer);
    }
    static unsafe void Test_FramebufferTextureLayer_4814() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _texture = default(System.UInt32);
        System.Int32 _level = default(System.Int32);
        System.Int32 _layer = default(System.Int32);
        OpenTK.Graphics.ES30.GL.FramebufferTextureLayer(_target,_attachment,_texture,_level,_layer);
    }
    static unsafe void Test_FrontFace_4815() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.FrontFace(_mode);
    }
    static unsafe void Test_GenBuffers_4816() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _buffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4817() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _buffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_4818() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _buffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4819() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _buffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenBuffers_4820() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _buffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,out _buffers);
    }
    static unsafe void Test_GenBuffers_4821() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _buffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenBuffers(_n,_buffers);
    }
    static unsafe void Test_GenerateMipmap_4822() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.GenerateMipmap(_target);
    }
    static unsafe void Test_GenFramebuffers_4823() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _framebuffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4824() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _framebuffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,out _framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4825() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _framebuffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4826() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _framebuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4827() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _framebuffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,out _framebuffers);
    }
    static unsafe void Test_GenFramebuffers_4828() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _framebuffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenFramebuffers(_n,_framebuffers);
    }
    static unsafe void Test_GenQueries_4829() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _ids = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,_ids);
    }
    static unsafe void Test_GenQueries_4830() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _ids = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,out _ids);
    }
    static unsafe void Test_GenQueries_4831() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _ids = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,_ids);
    }
    static unsafe void Test_GenQueries_4832() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _ids = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,_ids);
    }
    static unsafe void Test_GenQueries_4833() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _ids = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,out _ids);
    }
    static unsafe void Test_GenQueries_4834() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _ids = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenQueries(_n,_ids);
    }
    static unsafe void Test_GenRenderbuffers_4835() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _renderbuffers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4836() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _renderbuffers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,out _renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4837() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _renderbuffers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4838() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _renderbuffers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4839() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _renderbuffers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,out _renderbuffers);
    }
    static unsafe void Test_GenRenderbuffers_4840() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _renderbuffers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenRenderbuffers(_n,_renderbuffers);
    }
    static unsafe void Test_GenSamplers_4841() {
        System.Int32 _count = default(System.Int32);
        System.Int32[] _samplers = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,_samplers);
    }
    static unsafe void Test_GenSamplers_4842() {
        System.Int32 _count = default(System.Int32);
        System.Int32 _samplers = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,out _samplers);
    }
    static unsafe void Test_GenSamplers_4843() {
        System.Int32 _count = default(System.Int32);
        System.Int32* _samplers = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,_samplers);
    }
    static unsafe void Test_GenSamplers_4844() {
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _samplers = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,_samplers);
    }
    static unsafe void Test_GenSamplers_4845() {
        System.Int32 _count = default(System.Int32);
        System.UInt32 _samplers = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,out _samplers);
    }
    static unsafe void Test_GenSamplers_4846() {
        System.Int32 _count = default(System.Int32);
        System.UInt32* _samplers = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenSamplers(_count,_samplers);
    }
    static unsafe void Test_GenTextures_4847() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _textures = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4848() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _textures = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_4849() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _textures = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4850() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _textures = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTextures_4851() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _textures = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,out _textures);
    }
    static unsafe void Test_GenTextures_4852() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _textures = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenTextures(_n,_textures);
    }
    static unsafe void Test_GenTransformFeedback_4853() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _ids = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,_ids);
    }
    static unsafe void Test_GenTransformFeedback_4854() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _ids = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,out _ids);
    }
    static unsafe void Test_GenTransformFeedback_4855() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _ids = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,_ids);
    }
    static unsafe void Test_GenTransformFeedback_4856() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _ids = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,_ids);
    }
    static unsafe void Test_GenTransformFeedback_4857() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _ids = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,out _ids);
    }
    static unsafe void Test_GenTransformFeedback_4858() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _ids = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenTransformFeedback(_n,_ids);
    }
    static unsafe void Test_GenVertexArrays_4859() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _arrays = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,_arrays);
    }
    static unsafe void Test_GenVertexArrays_4860() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _arrays = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,out _arrays);
    }
    static unsafe void Test_GenVertexArrays_4861() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _arrays = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,_arrays);
    }
    static unsafe void Test_GenVertexArrays_4862() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _arrays = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,_arrays);
    }
    static unsafe void Test_GenVertexArrays_4863() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _arrays = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,out _arrays);
    }
    static unsafe void Test_GenVertexArrays_4864() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _arrays = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GenVertexArrays(_n,_arrays);
    }
    static unsafe void Test_GetActiveAttrib_4865() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4866() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4867() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4868() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4869() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveAttrib_4870() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4871() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4872() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveUniform_4873() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4874() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniform_4875() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetActiveUniform_4876() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_index,_bufsize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetActiveUniformBlock_4877() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,_params);
    }
    static unsafe void Test_GetActiveUniformBlock_4878() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,out _params);
    }
    static unsafe void Test_GetActiveUniformBlock_4879() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,_params);
    }
    static unsafe void Test_GetActiveUniformBlock_4880() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,_params);
    }
    static unsafe void Test_GetActiveUniformBlock_4881() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,out _params);
    }
    static unsafe void Test_GetActiveUniformBlock_4882() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlock(_program,_uniformBlockIndex,_pname,_params);
    }
    static unsafe void Test_GetActiveUniformBlockName_4883() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,_length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniformBlockName_4884() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,out _length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniformBlockName_4885() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,_length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniformBlockName_4886() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,_length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniformBlockName_4887() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,out _length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniformBlockName_4888() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetActiveUniformBlockName(_program,_uniformBlockIndex,_bufSize,_length,_uniformBlockName);
    }
    static unsafe void Test_GetActiveUniforms_4889() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Int32[] _uniformIndices = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,_uniformIndices,_pname,_params);
    }
    static unsafe void Test_GetActiveUniforms_4890() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Int32 _uniformIndices = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,out _uniformIndices,_pname,out _params);
    }
    static unsafe void Test_GetActiveUniforms_4891() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Int32* _uniformIndices = default(System.Int32*);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,_uniformIndices,_pname,_params);
    }
    static unsafe void Test_GetActiveUniforms_4892() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.UInt32[] _uniformIndices = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,_uniformIndices,_pname,_params);
    }
    static unsafe void Test_GetActiveUniforms_4893() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.UInt32 _uniformIndices = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,out _uniformIndices,_pname,out _params);
    }
    static unsafe void Test_GetActiveUniforms_4894() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.UInt32* _uniformIndices = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetActiveUniforms(_program,_uniformCount,_uniformIndices,_pname,_params);
    }
    static unsafe void Test_GetAttachedShaders_4895() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32[] _count = default(System.Int32[]);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4896() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,out _count,out _shaders);
    }
    static unsafe void Test_GetAttachedShaders_4897() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32* _count = default(System.Int32*);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4898() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32[] _count = default(System.Int32[]);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttachedShaders_4899() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,out _count,out _shaders);
    }
    static unsafe void Test_GetAttachedShaders_4900() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _maxcount = default(System.Int32);
        System.Int32* _count = default(System.Int32*);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GetAttachedShaders(_program,_maxcount,_count,_shaders);
    }
    static unsafe void Test_GetAttribLocation_4901() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetAttribLocation(_program,_name);
    }
    static unsafe void Test_GetAttribLocation_4902() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetAttribLocation(_program,_name);
    }
    static unsafe void Test_GetBoolean_4903() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Boolean[] _params = default(System.Boolean[]);
        OpenTK.Graphics.ES30.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBoolean_4904() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Boolean _params = default(System.Boolean);
        OpenTK.Graphics.ES30.GL.GetBoolean(_pname,out _params);
    }
    static unsafe void Test_GetBoolean_4905() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Boolean* _params = default(System.Boolean*);
        OpenTK.Graphics.ES30.GL.GetBoolean(_pname,_params);
    }
    static unsafe void Test_GetBufferParameteri64_4906() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64[] _params = default(System.Int64[]);
        OpenTK.Graphics.ES30.GL.GetBufferParameteri64(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameteri64_4907() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64 _params = default(System.Int64);
        OpenTK.Graphics.ES30.GL.GetBufferParameteri64(_target,_pname,out _params);
    }
    static unsafe void Test_GetBufferParameteri64_4908() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64* _params = default(System.Int64*);
        OpenTK.Graphics.ES30.GL.GetBufferParameteri64(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_4909() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferParameter_4910() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetBufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetBufferParameter_4911() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetBufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferPointer_4912() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _params = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetBufferPointer(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferPointer_4913() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[] _params = default(int[]);
        OpenTK.Graphics.ES30.GL.GetBufferPointer<int>(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferPointer_4914() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,] _params = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetBufferPointer<int>(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferPointer_4915() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,,] _params = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetBufferPointer<int>(_target,_pname,_params);
    }
    static unsafe void Test_GetBufferPointer_4916() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int _params = default(int);
        OpenTK.Graphics.ES30.GL.GetBufferPointer<int>(_target,_pname,ref _params);
    }
    static unsafe void Test_GetError_4917() {
        OpenTK.Graphics.ES30.All r = OpenTK.Graphics.ES30.GL.GetError();
    }
    static unsafe void Test_GetFloat_4918() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFloat_4919() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetFloat(_pname,out _params);
    }
    static unsafe void Test_GetFloat_4920() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetFloat(_pname,_params);
    }
    static unsafe void Test_GetFragDataLocation_4921() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetFragDataLocation(_program,_name);
    }
    static unsafe void Test_GetFragDataLocation_4922() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetFragDataLocation(_program,_name);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4923() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,_params);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4924() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,out _params);
    }
    static unsafe void Test_GetFramebufferAttachmentParameter_4925() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _attachment = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetFramebufferAttachmentParameter(_target,_attachment,_pname,_params);
    }
    static unsafe void Test_GetInteger64_4926() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int64[] _data = default(System.Int64[]);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,_data);
    }
    static unsafe void Test_GetInteger64_4927() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int64 _data = default(System.Int64);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,out _data);
    }
    static unsafe void Test_GetInteger64_4928() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int64* _data = default(System.Int64*);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,_data);
    }
    static unsafe void Test_GetInteger64_4929() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int64[] _data = default(System.Int64[]);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,_data);
    }
    static unsafe void Test_GetInteger64_4930() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int64 _data = default(System.Int64);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,out _data);
    }
    static unsafe void Test_GetInteger64_4931() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int64* _data = default(System.Int64*);
        OpenTK.Graphics.ES30.GL.GetInteger64(_target,_index,_data);
    }
    static unsafe void Test_GetInteger64_4932() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64[] _params = default(System.Int64[]);
        OpenTK.Graphics.ES30.GL.GetInteger64(_pname,_params);
    }
    static unsafe void Test_GetInteger64_4933() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64 _params = default(System.Int64);
        OpenTK.Graphics.ES30.GL.GetInteger64(_pname,out _params);
    }
    static unsafe void Test_GetInteger64_4934() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int64* _params = default(System.Int64*);
        OpenTK.Graphics.ES30.GL.GetInteger64(_pname,_params);
    }
    static unsafe void Test_GetInteger_4935() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int32[] _data = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,_data);
    }
    static unsafe void Test_GetInteger_4936() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int32 _data = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,out _data);
    }
    static unsafe void Test_GetInteger_4937() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.Int32* _data = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,_data);
    }
    static unsafe void Test_GetInteger_4938() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int32[] _data = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,_data);
    }
    static unsafe void Test_GetInteger_4939() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _data = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,out _data);
    }
    static unsafe void Test_GetInteger_4940() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.Int32* _data = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetInteger(_target,_index,_data);
    }
    static unsafe void Test_GetInteger_4941() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetInteger_4942() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetInteger(_pname,out _params);
    }
    static unsafe void Test_GetInteger_4943() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetInteger(_pname,_params);
    }
    static unsafe void Test_GetInternalformat_4944() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetInternalformat(_target,_internalformat,_pname,_bufSize,_params);
    }
    static unsafe void Test_GetInternalformat_4945() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetInternalformat(_target,_internalformat,_pname,_bufSize,out _params);
    }
    static unsafe void Test_GetInternalformat_4946() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetInternalformat(_target,_internalformat,_pname,_bufSize,_params);
    }
    static unsafe void Test_GetProgramBinary_4947() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4948() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4949() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4950() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4951() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramBinary_4952() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4953() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4954() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4955() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4956() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramBinary_4957() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4958() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4959() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4960() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4961() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramBinary_4962() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4963() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4964() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4965() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4966() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _binaryFormat = default(OpenTK.Graphics.ES30.All[]);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramBinary_4967() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4968() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4969() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4970() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4971() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,out _length,out _binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramBinary_4972() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        System.IntPtr _binary = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetProgramBinary(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4973() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[] _binary = default(int[]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4974() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[,] _binary = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4975() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int[,,] _binary = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,_binary);
    }
    static unsafe void Test_GetProgramBinary_4976() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _binaryFormat = default(OpenTK.Graphics.ES30.All*);
        int _binary = default(int);
        OpenTK.Graphics.ES30.GL.GetProgramBinary<int>(_program,_bufSize,_length,_binaryFormat,ref _binary);
    }
    static unsafe void Test_GetProgramInfoLog_4977() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4978() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4979() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4980() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4981() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetProgramInfoLog_4982() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetProgram_4983() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4984() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,out _params);
    }
    static unsafe void Test_GetProgram_4985() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4986() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetProgram_4987() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,out _params);
    }
    static unsafe void Test_GetProgram_4988() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetProgram(_program,_pname,_params);
    }
    static unsafe void Test_GetQuery_4989() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetQuery(_target,_pname,_params);
    }
    static unsafe void Test_GetQuery_4990() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetQuery(_target,_pname,out _params);
    }
    static unsafe void Test_GetQuery_4991() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetQuery(_target,_pname,_params);
    }
    static unsafe void Test_GetQueryObject_4992() {
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,_params);
    }
    static unsafe void Test_GetQueryObject_4993() {
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,out _params);
    }
    static unsafe void Test_GetQueryObject_4994() {
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,_params);
    }
    static unsafe void Test_GetQueryObject_4995() {
        System.UInt32 _id = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32[] _params = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,_params);
    }
    static unsafe void Test_GetQueryObject_4996() {
        System.UInt32 _id = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _params = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,out _params);
    }
    static unsafe void Test_GetQueryObject_4997() {
        System.UInt32 _id = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32* _params = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GetQueryObject(_id,_pname,_params);
    }
    static unsafe void Test_GetRenderbufferParameter_4998() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetRenderbufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetRenderbufferParameter_4999() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetRenderbufferParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetRenderbufferParameter_5000() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetRenderbufferParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5001() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5002() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,out _params);
    }
    static unsafe void Test_GetSamplerParameter_5003() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5004() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5005() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,out _params);
    }
    static unsafe void Test_GetSamplerParameter_5006() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5007() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5008() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,out _params);
    }
    static unsafe void Test_GetSamplerParameter_5009() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5010() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetSamplerParameter_5011() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,out _params);
    }
    static unsafe void Test_GetSamplerParameter_5012() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetSamplerParameter(_sampler,_pname,_params);
    }
    static unsafe void Test_GetShaderInfoLog_5013() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_5014() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_5015() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_5016() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_5017() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,out _length,_infolog);
    }
    static unsafe void Test_GetShaderInfoLog_5018() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _infolog = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,_bufsize,_length,_infolog);
    }
    static unsafe void Test_GetShader_5019() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_5020() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,out _params);
    }
    static unsafe void Test_GetShader_5021() {
        System.Int32 _shader = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_5022() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShader_5023() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,out _params);
    }
    static unsafe void Test_GetShader_5024() {
        System.UInt32 _shader = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetShader(_shader,_pname,_params);
    }
    static unsafe void Test_GetShaderPrecisionFormat_5025() {
        OpenTK.Graphics.ES30.All _shadertype = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _precisiontype = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _range = default(System.Int32[]);
        System.Int32[] _precision = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,_range,_precision);
    }
    static unsafe void Test_GetShaderPrecisionFormat_5026() {
        OpenTK.Graphics.ES30.All _shadertype = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _precisiontype = default(OpenTK.Graphics.ES30.All);
        System.Int32 _range = default(System.Int32);
        System.Int32 _precision = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,out _range,out _precision);
    }
    static unsafe void Test_GetShaderPrecisionFormat_5027() {
        OpenTK.Graphics.ES30.All _shadertype = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _precisiontype = default(OpenTK.Graphics.ES30.All);
        System.Int32* _range = default(System.Int32*);
        System.Int32* _precision = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetShaderPrecisionFormat(_shadertype,_precisiontype,_range,_precision);
    }
    static unsafe void Test_GetShaderSource_5028() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_5029() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,out _length,_source);
    }
    static unsafe void Test_GetShaderSource_5030() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_5031() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetShaderSource_5032() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,out _length,_source);
    }
    static unsafe void Test_GetShaderSource_5033() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _bufsize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Text.StringBuilder _source = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetShaderSource(_shader,_bufsize,_length,_source);
    }
    static unsafe void Test_GetString_5034() {
        OpenTK.Graphics.ES30.All _name = default(OpenTK.Graphics.ES30.All);
        System.String r = OpenTK.Graphics.ES30.GL.GetString(_name);
    }
    static unsafe void Test_GetString_5035() {
        OpenTK.Graphics.ES30.All _name = default(OpenTK.Graphics.ES30.All);
        System.Int32 _index = default(System.Int32);
        System.String r = OpenTK.Graphics.ES30.GL.GetString(_name,_index);
    }
    static unsafe void Test_GetString_5036() {
        OpenTK.Graphics.ES30.All _name = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _index = default(System.UInt32);
        System.String r = OpenTK.Graphics.ES30.GL.GetString(_name,_index);
    }
    static unsafe void Test_GetSync_5037() {
        System.IntPtr _sync = default(System.IntPtr);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _values = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetSync(_sync,_pname,_bufSize,_length,_values);
    }
    static unsafe void Test_GetSync_5038() {
        System.IntPtr _sync = default(System.IntPtr);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _values = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetSync(_sync,_pname,_bufSize,out _length,out _values);
    }
    static unsafe void Test_GetSync_5039() {
        System.IntPtr _sync = default(System.IntPtr);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _values = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetSync(_sync,_pname,_bufSize,_length,_values);
    }
    static unsafe void Test_GetTexParameter_5040() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_5041() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_5042() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_5043() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTexParameter_5044() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,out _params);
    }
    static unsafe void Test_GetTexParameter_5045() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetTexParameter(_target,_pname,_params);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5046() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5047() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5048() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5049() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32[] _length = default(System.Int32[]);
        System.Int32[] _size = default(System.Int32[]);
        OpenTK.Graphics.ES30.All[] _type = default(OpenTK.Graphics.ES30.All[]);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5050() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32 _length = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,out _length,out _size,out _type,_name);
    }
    static unsafe void Test_GetTransformFeedbackVarying_5051() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _bufSize = default(System.Int32);
        System.Int32* _length = default(System.Int32*);
        System.Int32* _size = default(System.Int32*);
        OpenTK.Graphics.ES30.All* _type = default(OpenTK.Graphics.ES30.All*);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        OpenTK.Graphics.ES30.GL.GetTransformFeedbackVarying(_program,_index,_bufSize,_length,_size,_type,_name);
    }
    static unsafe void Test_GetUniformBlockIndex_5052() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetUniformBlockIndex(_program,_uniformBlockName);
    }
    static unsafe void Test_GetUniformBlockIndex_5053() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _uniformBlockName = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetUniformBlockIndex(_program,_uniformBlockName);
    }
    static unsafe void Test_GetUniform_5054() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5055() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_5056() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5057() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5058() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_5059() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniformIndices_5060() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.Int32[] _uniformIndices = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,_uniformIndices);
    }
    static unsafe void Test_GetUniformIndices_5061() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.Int32 _uniformIndices = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,out _uniformIndices);
    }
    static unsafe void Test_GetUniformIndices_5062() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.Int32* _uniformIndices = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,_uniformIndices);
    }
    static unsafe void Test_GetUniformIndices_5063() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.UInt32[] _uniformIndices = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,_uniformIndices);
    }
    static unsafe void Test_GetUniformIndices_5064() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.UInt32 _uniformIndices = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,out _uniformIndices);
    }
    static unsafe void Test_GetUniformIndices_5065() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _uniformCount = default(System.Int32);
        System.Text.StringBuilder _uniformNames = default(System.Text.StringBuilder);
        System.UInt32* _uniformIndices = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GetUniformIndices(_program,_uniformCount,_uniformNames,_uniformIndices);
    }
    static unsafe void Test_GetUniform_5066() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5067() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_5068() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _location = default(System.Int32);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5069() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5070() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_5071() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniformLocation_5072() {
        System.Int32 _program = default(System.Int32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetUniformLocation(_program,_name);
    }
    static unsafe void Test_GetUniformLocation_5073() {
        System.UInt32 _program = default(System.UInt32);
        System.Text.StringBuilder _name = default(System.Text.StringBuilder);
        System.Int32 r = OpenTK.Graphics.ES30.GL.GetUniformLocation(_program,_name);
    }
    static unsafe void Test_GetUniform_5074() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.UInt32[] _params = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetUniform_5075() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.UInt32 _params = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,out _params);
    }
    static unsafe void Test_GetUniform_5076() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _location = default(System.Int32);
        System.UInt32* _params = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GetUniform(_program,_location,_params);
    }
    static unsafe void Test_GetVertexAttrib_5077() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5078() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_5079() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5080() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5081() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _params = default(System.Single);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_5082() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5083() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5084() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttribI_5085() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5086() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5087() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttribI_5088() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5089() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32[] _params = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribI_5090() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _params = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttribI_5091() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.UInt32* _params = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.GetVertexAttribI(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5092() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5093() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_5094() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5095() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttrib_5096() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _params = default(System.Int32);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,out _params);
    }
    static unsafe void Test_GetVertexAttrib_5097() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.GetVertexAttrib(_index,_pname,_params);
    }
    static unsafe void Test_GetVertexAttribPointer_5098() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5099() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5100() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5101() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5102() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int _pointer = default(int);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,ref _pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5103() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5104() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5105() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5106() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,_pointer);
    }
    static unsafe void Test_GetVertexAttribPointer_5107() {
        System.UInt32 _index = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        int _pointer = default(int);
        OpenTK.Graphics.ES30.GL.GetVertexAttribPointer<int>(_index,_pname,ref _pointer);
    }
    static unsafe void Test_Hint_5108() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.Hint(_target,_mode);
    }
    static unsafe void Test_InvalidateFramebuffer_5109() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All[] _attachments = default(OpenTK.Graphics.ES30.All[]);
        OpenTK.Graphics.ES30.GL.InvalidateFramebuffer(_target,_numAttachments,_attachments);
    }
    static unsafe void Test_InvalidateFramebuffer_5110() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All _attachments = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.InvalidateFramebuffer(_target,_numAttachments,ref _attachments);
    }
    static unsafe void Test_InvalidateFramebuffer_5111() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All* _attachments = default(OpenTK.Graphics.ES30.All*);
        OpenTK.Graphics.ES30.GL.InvalidateFramebuffer(_target,_numAttachments,_attachments);
    }
    static unsafe void Test_InvalidateSubFramebuffer_5112() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All[] _attachments = default(OpenTK.Graphics.ES30.All[]);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.InvalidateSubFramebuffer(_target,_numAttachments,_attachments,_x,_y,_width,_height);
    }
    static unsafe void Test_InvalidateSubFramebuffer_5113() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All _attachments = default(OpenTK.Graphics.ES30.All);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.InvalidateSubFramebuffer(_target,_numAttachments,ref _attachments,_x,_y,_width,_height);
    }
    static unsafe void Test_InvalidateSubFramebuffer_5114() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _numAttachments = default(System.Int32);
        OpenTK.Graphics.ES30.All* _attachments = default(OpenTK.Graphics.ES30.All*);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.InvalidateSubFramebuffer(_target,_numAttachments,_attachments,_x,_y,_width,_height);
    }
    static unsafe void Test_IsBuffer_5115() {
        System.Int32 _buffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsBuffer_5116() {
        System.UInt32 _buffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsBuffer(_buffer);
    }
    static unsafe void Test_IsEnabled_5117() {
        OpenTK.Graphics.ES30.All _cap = default(OpenTK.Graphics.ES30.All);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsEnabled(_cap);
    }
    static unsafe void Test_IsFramebuffer_5118() {
        System.Int32 _framebuffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsFramebuffer(_framebuffer);
    }
    static unsafe void Test_IsFramebuffer_5119() {
        System.UInt32 _framebuffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsFramebuffer(_framebuffer);
    }
    static unsafe void Test_IsProgram_5120() {
        System.Int32 _program = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsProgram(_program);
    }
    static unsafe void Test_IsProgram_5121() {
        System.UInt32 _program = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsProgram(_program);
    }
    static unsafe void Test_IsQuery_5122() {
        System.Int32 _id = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsQuery(_id);
    }
    static unsafe void Test_IsQuery_5123() {
        System.UInt32 _id = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsQuery(_id);
    }
    static unsafe void Test_IsRenderbuffer_5124() {
        System.Int32 _renderbuffer = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsRenderbuffer(_renderbuffer);
    }
    static unsafe void Test_IsRenderbuffer_5125() {
        System.UInt32 _renderbuffer = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsRenderbuffer(_renderbuffer);
    }
    static unsafe void Test_IsSampler_5126() {
        System.Int32 _sampler = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsSampler(_sampler);
    }
    static unsafe void Test_IsSampler_5127() {
        System.UInt32 _sampler = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsSampler(_sampler);
    }
    static unsafe void Test_IsShader_5128() {
        System.Int32 _shader = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsShader(_shader);
    }
    static unsafe void Test_IsShader_5129() {
        System.UInt32 _shader = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsShader(_shader);
    }
    static unsafe void Test_IsSync_5130() {
        System.IntPtr _sync = default(System.IntPtr);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsSync(_sync);
    }
    static unsafe void Test_IsTexture_5131() {
        System.Int32 _texture = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsTexture(_texture);
    }
    static unsafe void Test_IsTexture_5132() {
        System.UInt32 _texture = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsTexture(_texture);
    }
    static unsafe void Test_IsTransformFeedback_5133() {
        System.Int32 _id = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsTransformFeedback(_id);
    }
    static unsafe void Test_IsTransformFeedback_5134() {
        System.UInt32 _id = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsTransformFeedback(_id);
    }
    static unsafe void Test_IsVertexArray_5135() {
        System.Int32 _array = default(System.Int32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsVertexArray(_array);
    }
    static unsafe void Test_IsVertexArray_5136() {
        System.UInt32 _array = default(System.UInt32);
        System.Boolean r = OpenTK.Graphics.ES30.GL.IsVertexArray(_array);
    }
    static unsafe void Test_LineWidth_5137() {
        System.Single _width = default(System.Single);
        OpenTK.Graphics.ES30.GL.LineWidth(_width);
    }
    static unsafe void Test_LinkProgram_5138() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.GL.LinkProgram(_program);
    }
    static unsafe void Test_LinkProgram_5139() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.LinkProgram(_program);
    }
    static unsafe void Test_MapBufferRange_5140() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _length = default(System.IntPtr);
        System.Int32 _access = default(System.Int32);
        System.IntPtr r = OpenTK.Graphics.ES30.GL.MapBufferRange(_target,_offset,_length,_access);
    }
    static unsafe void Test_MapBufferRange_5141() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _offset = default(System.IntPtr);
        System.IntPtr _length = default(System.IntPtr);
        System.UInt32 _access = default(System.UInt32);
        System.IntPtr r = OpenTK.Graphics.ES30.GL.MapBufferRange(_target,_offset,_length,_access);
    }
    static unsafe void Test_PauseTransformFeedback_5142() {
        OpenTK.Graphics.ES30.GL.PauseTransformFeedback();
    }
    static unsafe void Test_PixelStore_5143() {
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES30.GL.PixelStore(_pname,_param);
    }
    static unsafe void Test_PolygonOffset_5144() {
        System.Single _factor = default(System.Single);
        System.Single _units = default(System.Single);
        OpenTK.Graphics.ES30.GL.PolygonOffset(_factor,_units);
    }
    static unsafe void Test_ProgramBinary_5145() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5146() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5147() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5148() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5149() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,ref _binary,_length);
    }
    static unsafe void Test_ProgramBinary_5150() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5151() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5152() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5153() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,_binary,_length);
    }
    static unsafe void Test_ProgramBinary_5154() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryFormat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramBinary<int>(_program,_binaryFormat,ref _binary,_length);
    }
    static unsafe void Test_ProgramParameter_5155() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _value = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramParameter(_program,_pname,_value);
    }
    static unsafe void Test_ProgramParameter_5156() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _value = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ProgramParameter(_program,_pname,_value);
    }
    static unsafe void Test_ReadBuffer_5157() {
        OpenTK.Graphics.ES30.All _mode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.ReadBuffer(_mode);
    }
    static unsafe void Test_ReadPixels_5158() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.ReadPixels(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_5159() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES30.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_5160() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES30.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_5161() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES30.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_ReadPixels_5162() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES30.GL.ReadPixels<int>(_x,_y,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_ReleaseShaderCompiler_5163() {
        OpenTK.Graphics.ES30.GL.ReleaseShaderCompiler();
    }
    static unsafe void Test_RenderbufferStorage_5164() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.RenderbufferStorage(_target,_internalformat,_width,_height);
    }
    static unsafe void Test_RenderbufferStorageMultisample_5165() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _samples = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.RenderbufferStorageMultisample(_target,_samples,_internalformat,_width,_height);
    }
    static unsafe void Test_ResumeTransformFeedback_5166() {
        OpenTK.Graphics.ES30.GL.ResumeTransformFeedback();
    }
    static unsafe void Test_SampleCoverage_5167() {
        System.Single _value = default(System.Single);
        System.Boolean _invert = default(System.Boolean);
        OpenTK.Graphics.ES30.GL.SampleCoverage(_value,_invert);
    }
    static unsafe void Test_SamplerParameter_5168() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5169() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5170() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _param = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5171() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _param = default(System.Single*);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5172() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _param = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5173() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _param = default(System.Single*);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5174() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5175() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5176() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _param = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5177() {
        System.Int32 _sampler = default(System.Int32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _param = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5178() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _param = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_SamplerParameter_5179() {
        System.UInt32 _sampler = default(System.UInt32);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _param = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.SamplerParameter(_sampler,_pname,_param);
    }
    static unsafe void Test_Scissor_5180() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Scissor(_x,_y,_width,_height);
    }
    static unsafe void Test_ShaderBinary_5181() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5182() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5183() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5184() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5185() {
        System.Int32 _n = default(System.Int32);
        System.Int32[] _shaders = default(System.Int32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_5186() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5187() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5188() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5189() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5190() {
        System.Int32 _n = default(System.Int32);
        System.Int32 _shaders = default(System.Int32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_5191() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5192() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5193() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5194() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5195() {
        System.Int32 _n = default(System.Int32);
        System.Int32* _shaders = default(System.Int32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_5196() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5197() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5198() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5199() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5200() {
        System.Int32 _n = default(System.Int32);
        System.UInt32[] _shaders = default(System.UInt32[]);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_5201() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5202() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5203() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5204() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5205() {
        System.Int32 _n = default(System.Int32);
        System.UInt32 _shaders = default(System.UInt32);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,ref _shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderBinary_5206() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _binary = default(System.IntPtr);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5207() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[] _binary = default(int[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5208() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,] _binary = default(int[,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5209() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int[,,] _binary = default(int[,,]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,_binary,_length);
    }
    static unsafe void Test_ShaderBinary_5210() {
        System.Int32 _n = default(System.Int32);
        System.UInt32* _shaders = default(System.UInt32*);
        OpenTK.Graphics.ES30.All _binaryformat = default(OpenTK.Graphics.ES30.All);
        int _binary = default(int);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderBinary<int>(_n,_shaders,_binaryformat,ref _binary,_length);
    }
    static unsafe void Test_ShaderSource_5211() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_5212() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,ref _length);
    }
    static unsafe void Test_ShaderSource_5213() {
        System.Int32 _shader = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_5214() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32[] _length = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_ShaderSource_5215() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32 _length = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,ref _length);
    }
    static unsafe void Test_ShaderSource_5216() {
        System.UInt32 _shader = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String[] _string = default(System.String[]);
        System.Int32* _length = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_count,_string,_length);
    }
    static unsafe void Test_StencilFunc_5217() {
        OpenTK.Graphics.ES30.All _func = default(OpenTK.Graphics.ES30.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES30.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFunc_5218() {
        OpenTK.Graphics.ES30.All _func = default(OpenTK.Graphics.ES30.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.StencilFunc(_func,_ref,_mask);
    }
    static unsafe void Test_StencilFuncSeparate_5219() {
        OpenTK.Graphics.ES30.All _face = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _func = default(OpenTK.Graphics.ES30.All);
        System.Int32 _ref = default(System.Int32);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES30.GL.StencilFuncSeparate(_face,_func,_ref,_mask);
    }
    static unsafe void Test_StencilFuncSeparate_5220() {
        OpenTK.Graphics.ES30.All _face = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _func = default(OpenTK.Graphics.ES30.All);
        System.Int32 _ref = default(System.Int32);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.StencilFuncSeparate(_face,_func,_ref,_mask);
    }
    static unsafe void Test_StencilMask_5221() {
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES30.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMask_5222() {
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.StencilMask(_mask);
    }
    static unsafe void Test_StencilMaskSeparate_5223() {
        OpenTK.Graphics.ES30.All _face = default(OpenTK.Graphics.ES30.All);
        System.Int32 _mask = default(System.Int32);
        OpenTK.Graphics.ES30.GL.StencilMaskSeparate(_face,_mask);
    }
    static unsafe void Test_StencilMaskSeparate_5224() {
        OpenTK.Graphics.ES30.All _face = default(OpenTK.Graphics.ES30.All);
        System.UInt32 _mask = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.StencilMaskSeparate(_face,_mask);
    }
    static unsafe void Test_StencilOp_5225() {
        OpenTK.Graphics.ES30.All _fail = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _zfail = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _zpass = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.StencilOp(_fail,_zfail,_zpass);
    }
    static unsafe void Test_StencilOpSeparate_5226() {
        OpenTK.Graphics.ES30.All _face = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _fail = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _zfail = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _zpass = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.StencilOpSeparate(_face,_fail,_zfail,_zpass);
    }
    static unsafe void Test_TexImage2D_5227() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.TexImage2D(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_5228() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES30.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_5229() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES30.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_5230() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES30.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage2D_5231() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES30.GL.TexImage2D<int>(_target,_level,_internalformat,_width,_height,_border,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexImage3D_5232() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.TexImage3D(_target,_level,_internalformat,_width,_height,_depth,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage3D_5233() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES30.GL.TexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage3D_5234() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES30.GL.TexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage3D_5235() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES30.GL.TexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_format,_type,_pixels);
    }
    static unsafe void Test_TexImage3D_5236() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _internalformat = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        System.Int32 _border = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES30.GL.TexImage3D<int>(_target,_level,_internalformat,_width,_height,_depth,_border,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexParameter_5237() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single _param = default(System.Single);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_5238() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single[] _params = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_5239() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Single* _params = default(System.Single*);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_5240() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32 _param = default(System.Int32);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_param);
    }
    static unsafe void Test_TexParameter_5241() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32[] _params = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexParameter_5242() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _pname = default(OpenTK.Graphics.ES30.All);
        System.Int32* _params = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.TexParameter(_target,_pname,_params);
    }
    static unsafe void Test_TexStorage2D_5243() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _levels = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.TexStorage2D(_target,_levels,_internalformat,_width,_height);
    }
    static unsafe void Test_TexStorage3D_5244() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _levels = default(System.Int32);
        OpenTK.Graphics.ES30.All _internalformat = default(OpenTK.Graphics.ES30.All);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.GL.TexStorage3D(_target,_levels,_internalformat,_width,_height,_depth);
    }
    static unsafe void Test_TexSubImage2D_5245() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.TexSubImage2D(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_5246() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES30.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_5247() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES30.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_5248() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES30.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage2D_5249() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES30.GL.TexSubImage2D<int>(_target,_level,_xoffset,_yoffset,_width,_height,_format,_type,ref _pixels);
    }
    static unsafe void Test_TexSubImage3D_5250() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.IntPtr _pixels = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.TexSubImage3D(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage3D_5251() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[] _pixels = default(int[]);
        OpenTK.Graphics.ES30.GL.TexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage3D_5252() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,] _pixels = default(int[,]);
        OpenTK.Graphics.ES30.GL.TexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage3D_5253() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int[,,] _pixels = default(int[,,]);
        OpenTK.Graphics.ES30.GL.TexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,_pixels);
    }
    static unsafe void Test_TexSubImage3D_5254() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Int32 _level = default(System.Int32);
        System.Int32 _xoffset = default(System.Int32);
        System.Int32 _yoffset = default(System.Int32);
        System.Int32 _zoffset = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        System.Int32 _depth = default(System.Int32);
        OpenTK.Graphics.ES30.All _format = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        int _pixels = default(int);
        OpenTK.Graphics.ES30.GL.TexSubImage3D<int>(_target,_level,_xoffset,_yoffset,_zoffset,_width,_height,_depth,_format,_type,ref _pixels);
    }
    static unsafe void Test_TransformFeedbackVaryings_5255() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.String _varyings = default(System.String);
        OpenTK.Graphics.ES30.All _bufferMode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.TransformFeedbackVaryings(_program,_count,_varyings,_bufferMode);
    }
    static unsafe void Test_TransformFeedbackVaryings_5256() {
        System.UInt32 _program = default(System.UInt32);
        System.Int32 _count = default(System.Int32);
        System.String _varyings = default(System.String);
        OpenTK.Graphics.ES30.All _bufferMode = default(OpenTK.Graphics.ES30.All);
        OpenTK.Graphics.ES30.GL.TransformFeedbackVaryings(_program,_count,_varyings,_bufferMode);
    }
    static unsafe void Test_Uniform1_5257() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_x);
    }
    static unsafe void Test_Uniform1_5258() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_5259() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform1_5260() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_5261() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_x);
    }
    static unsafe void Test_Uniform1_5262() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_5263() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform1_5264() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_v);
    }
    static unsafe void Test_Uniform1_5265() {
        System.Int32 _location = default(System.Int32);
        System.UInt32 _v0 = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_v0);
    }
    static unsafe void Test_Uniform1_5266() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _value = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_value);
    }
    static unsafe void Test_Uniform1_5267() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _value = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,ref _value);
    }
    static unsafe void Test_Uniform1_5268() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32* _value = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.Uniform1(_location,_count,_value);
    }
    static unsafe void Test_Uniform2_5269() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_x,_y);
    }
    static unsafe void Test_Uniform2_5270() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_5271() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform2_5272() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_5273() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_x,_y);
    }
    static unsafe void Test_Uniform2_5274() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_5275() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_v);
    }
    static unsafe void Test_Uniform2_5276() {
        System.Int32 _location = default(System.Int32);
        System.UInt32 _v0 = default(System.UInt32);
        System.UInt32 _v1 = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_v0,_v1);
    }
    static unsafe void Test_Uniform2_5277() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _value = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_value);
    }
    static unsafe void Test_Uniform2_5278() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _value = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,ref _value);
    }
    static unsafe void Test_Uniform2_5279() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32* _value = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_count,_value);
    }
    static unsafe void Test_Uniform3_5280() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_x,_y,_z);
    }
    static unsafe void Test_Uniform3_5281() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_5282() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform3_5283() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_5284() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_x,_y,_z);
    }
    static unsafe void Test_Uniform3_5285() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_5286() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform3_5287() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_v);
    }
    static unsafe void Test_Uniform3_5288() {
        System.Int32 _location = default(System.Int32);
        System.UInt32 _v0 = default(System.UInt32);
        System.UInt32 _v1 = default(System.UInt32);
        System.UInt32 _v2 = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_v0,_v1,_v2);
    }
    static unsafe void Test_Uniform3_5289() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _value = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_value);
    }
    static unsafe void Test_Uniform3_5290() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _value = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,ref _value);
    }
    static unsafe void Test_Uniform3_5291() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32* _value = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_count,_value);
    }
    static unsafe void Test_Uniform4_5292() {
        System.Int32 _location = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_x,_y,_z,_w);
    }
    static unsafe void Test_Uniform4_5293() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single[] _v = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_5294() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single _v = default(System.Single);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform4_5295() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Single* _v = default(System.Single*);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_5296() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        System.Int32 _w = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_x,_y,_z,_w);
    }
    static unsafe void Test_Uniform4_5297() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_5298() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,ref _v);
    }
    static unsafe void Test_Uniform4_5299() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_v);
    }
    static unsafe void Test_Uniform4_5300() {
        System.Int32 _location = default(System.Int32);
        System.UInt32 _v0 = default(System.UInt32);
        System.UInt32 _v1 = default(System.UInt32);
        System.UInt32 _v2 = default(System.UInt32);
        System.UInt32 _v3 = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_v0,_v1,_v2,_v3);
    }
    static unsafe void Test_Uniform4_5301() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32[] _value = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_value);
    }
    static unsafe void Test_Uniform4_5302() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32 _value = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,ref _value);
    }
    static unsafe void Test_Uniform4_5303() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.UInt32* _value = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_count,_value);
    }
    static unsafe void Test_UniformBlockBinding_5304() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformBlockIndex = default(System.Int32);
        System.Int32 _uniformBlockBinding = default(System.Int32);
        OpenTK.Graphics.ES30.GL.UniformBlockBinding(_program,_uniformBlockIndex,_uniformBlockBinding);
    }
    static unsafe void Test_UniformBlockBinding_5305() {
        System.UInt32 _program = default(System.UInt32);
        System.UInt32 _uniformBlockIndex = default(System.UInt32);
        System.UInt32 _uniformBlockBinding = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.UniformBlockBinding(_program,_uniformBlockIndex,_uniformBlockBinding);
    }
    static unsafe void Test_UniformMatrix2_5306() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2_5307() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix2(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix2_5308() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2x3_5309() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2x3_5310() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x3(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix2x3_5311() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2x4_5312() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix2x4_5313() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x4(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix2x4_5314() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix2x4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3_5315() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3_5316() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix3(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix3_5317() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3x2_5318() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3x2_5319() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x2(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix3x2_5320() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3x4_5321() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix3x4_5322() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x4(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix3x4_5323() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix3x4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4_5324() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4_5325() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix4(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix4_5326() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix4(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4x2_5327() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4x2_5328() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x2(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix4x2_5329() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x2(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4x3_5330() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single[] _value = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UniformMatrix4x3_5331() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single _value = default(System.Single);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x3(_location,_count,_transpose,ref _value);
    }
    static unsafe void Test_UniformMatrix4x3_5332() {
        System.Int32 _location = default(System.Int32);
        System.Int32 _count = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        System.Single* _value = default(System.Single*);
        OpenTK.Graphics.ES30.GL.UniformMatrix4x3(_location,_count,_transpose,_value);
    }
    static unsafe void Test_UnmapBuffer_5333() {
        OpenTK.Graphics.ES30.All _target = default(OpenTK.Graphics.ES30.All);
        System.Boolean r = OpenTK.Graphics.ES30.GL.UnmapBuffer(_target);
    }
    static unsafe void Test_UseProgram_5334() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.GL.UseProgram(_program);
    }
    static unsafe void Test_UseProgram_5335() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.UseProgram(_program);
    }
    static unsafe void Test_ValidateProgram_5336() {
        System.Int32 _program = default(System.Int32);
        OpenTK.Graphics.ES30.GL.ValidateProgram(_program);
    }
    static unsafe void Test_ValidateProgram_5337() {
        System.UInt32 _program = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.ValidateProgram(_program);
    }
    static unsafe void Test_VertexAttrib1_5338() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_x);
    }
    static unsafe void Test_VertexAttrib1_5339() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_x);
    }
    static unsafe void Test_VertexAttrib1_5340() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_5341() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_5342() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib1_5343() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib1(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_5344() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_x,_y);
    }
    static unsafe void Test_VertexAttrib2_5345() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_x,_y);
    }
    static unsafe void Test_VertexAttrib2_5346() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_5347() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib2_5348() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_5349() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib2_5350() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib2_5351() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_5352() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_x,_y,_z);
    }
    static unsafe void Test_VertexAttrib3_5353() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_x,_y,_z);
    }
    static unsafe void Test_VertexAttrib3_5354() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_5355() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib3_5356() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_5357() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib3_5358() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib3_5359() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_5360() {
        System.Int32 _indx = default(System.Int32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttrib4_5361() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _x = default(System.Single);
        System.Single _y = default(System.Single);
        System.Single _z = default(System.Single);
        System.Single _w = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttrib4_5362() {
        System.Int32 _indx = default(System.Int32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_5363() {
        System.Int32 _indx = default(System.Int32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib4_5364() {
        System.Int32 _indx = default(System.Int32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_5365() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single[] _values = default(System.Single[]);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttrib4_5366() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single _values = default(System.Single);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,ref _values);
    }
    static unsafe void Test_VertexAttrib4_5367() {
        System.UInt32 _indx = default(System.UInt32);
        System.Single* _values = default(System.Single*);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_indx,_values);
    }
    static unsafe void Test_VertexAttribDivisor_5368() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _divisor = default(System.Int32);
        OpenTK.Graphics.ES30.GL.VertexAttribDivisor(_index,_divisor);
    }
    static unsafe void Test_VertexAttribDivisor_5369() {
        System.UInt32 _index = default(System.UInt32);
        System.UInt32 _divisor = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.VertexAttribDivisor(_index,_divisor);
    }
    static unsafe void Test_VertexAttribI4_5370() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        System.Int32 _w = default(System.Int32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttribI4_5371() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _z = default(System.Int32);
        System.Int32 _w = default(System.Int32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttribI4_5372() {
        System.Int32 _index = default(System.Int32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribI4_5373() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,ref _v);
    }
    static unsafe void Test_VertexAttribI4_5374() {
        System.Int32 _index = default(System.Int32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribI4_5375() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32[] _v = default(System.Int32[]);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribI4_5376() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _v = default(System.Int32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,ref _v);
    }
    static unsafe void Test_VertexAttribI4_5377() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32* _v = default(System.Int32*);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribI4_5378() {
        System.UInt32 _index = default(System.UInt32);
        System.UInt32 _x = default(System.UInt32);
        System.UInt32 _y = default(System.UInt32);
        System.UInt32 _z = default(System.UInt32);
        System.UInt32 _w = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_x,_y,_z,_w);
    }
    static unsafe void Test_VertexAttribI4_5379() {
        System.UInt32 _index = default(System.UInt32);
        System.UInt32[] _v = default(System.UInt32[]);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribI4_5380() {
        System.UInt32 _index = default(System.UInt32);
        System.UInt32 _v = default(System.UInt32);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,ref _v);
    }
    static unsafe void Test_VertexAttribI4_5381() {
        System.UInt32 _index = default(System.UInt32);
        System.UInt32* _v = default(System.UInt32*);
        OpenTK.Graphics.ES30.GL.VertexAttribI4(_index,_v);
    }
    static unsafe void Test_VertexAttribIPointer_5382() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5383() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5384() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5385() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5386() {
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5387() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _pointer = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5388() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[] _pointer = default(int[]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5389() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[,] _pointer = default(int[,]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5390() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int[,,] _pointer = default(int[,,]);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,_pointer);
    }
    static unsafe void Test_VertexAttribIPointer_5391() {
        System.UInt32 _index = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Int32 _stride = default(System.Int32);
        int _pointer = default(int);
        OpenTK.Graphics.ES30.GL.VertexAttribIPointer<int>(_index,_size,_type,_stride,ref _pointer);
    }
    static unsafe void Test_VertexAttribPointer_5392() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _ptr = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5393() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[] _ptr = default(int[]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5394() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,] _ptr = default(int[,]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5395() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,,] _ptr = default(int[,,]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5396() {
        System.Int32 _indx = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int _ptr = default(int);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,ref _ptr);
    }
    static unsafe void Test_VertexAttribPointer_5397() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        System.IntPtr _ptr = default(System.IntPtr);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5398() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[] _ptr = default(int[]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5399() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,] _ptr = default(int[,]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5400() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int[,,] _ptr = default(int[,,]);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,_ptr);
    }
    static unsafe void Test_VertexAttribPointer_5401() {
        System.UInt32 _indx = default(System.UInt32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.Boolean _normalized = default(System.Boolean);
        System.Int32 _stride = default(System.Int32);
        int _ptr = default(int);
        OpenTK.Graphics.ES30.GL.VertexAttribPointer<int>(_indx,_size,_type,_normalized,_stride,ref _ptr);
    }
    static unsafe void Test_Viewport_5402() {
        System.Int32 _x = default(System.Int32);
        System.Int32 _y = default(System.Int32);
        System.Int32 _width = default(System.Int32);
        System.Int32 _height = default(System.Int32);
        OpenTK.Graphics.ES30.GL.Viewport(_x,_y,_width,_height);
    }
    static unsafe void Test_WaitSync_5403() {
        System.IntPtr _sync = default(System.IntPtr);
        System.Int32 _flags = default(System.Int32);
        System.Int64 _timeout = default(System.Int64);
        OpenTK.Graphics.ES30.GL.WaitSync(_sync,_flags,_timeout);
    }
    static unsafe void Test_WaitSync_5404() {
        System.IntPtr _sync = default(System.IntPtr);
        System.UInt32 _flags = default(System.UInt32);
        System.UInt64 _timeout = default(System.UInt64);
        OpenTK.Graphics.ES30.GL.WaitSync(_sync,_flags,_timeout);
    }
    static unsafe void Test_ClearColor_5405() {
        System.Drawing.Color _color = default(System.Drawing.Color);
        OpenTK.Graphics.ES30.GL.ClearColor(_color);
    }
    static unsafe void Test_ClearColor_5406() {
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES30.GL.ClearColor(_color);
    }
    static unsafe void Test_BlendColor_5407() {
        System.Drawing.Color _color = default(System.Drawing.Color);
        OpenTK.Graphics.ES30.GL.BlendColor(_color);
    }
    static unsafe void Test_BlendColor_5408() {
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES30.GL.BlendColor(_color);
    }
    static unsafe void Test_Uniform2_5409() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector2 _vector = default(OpenTK.Vector2);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,ref _vector);
    }
    static unsafe void Test_Uniform3_5410() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector3 _vector = default(OpenTK.Vector3);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,ref _vector);
    }
    static unsafe void Test_Uniform4_5411() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector4 _vector = default(OpenTK.Vector4);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,ref _vector);
    }
    static unsafe void Test_Uniform2_5412() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector2 _vector = default(OpenTK.Vector2);
        OpenTK.Graphics.ES30.GL.Uniform2(_location,_vector);
    }
    static unsafe void Test_Uniform3_5413() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector3 _vector = default(OpenTK.Vector3);
        OpenTK.Graphics.ES30.GL.Uniform3(_location,_vector);
    }
    static unsafe void Test_Uniform4_5414() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Vector4 _vector = default(OpenTK.Vector4);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_vector);
    }
    static unsafe void Test_Uniform4_5415() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Graphics.Color4 _color = default(OpenTK.Graphics.Color4);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_color);
    }
    static unsafe void Test_Uniform4_5416() {
        System.Int32 _location = default(System.Int32);
        OpenTK.Quaternion _quaternion = default(OpenTK.Quaternion);
        OpenTK.Graphics.ES30.GL.Uniform4(_location,_quaternion);
    }
    static unsafe void Test_UniformMatrix4_5417() {
        System.Int32 _location = default(System.Int32);
        System.Boolean _transpose = default(System.Boolean);
        OpenTK.Matrix4 _matrix = default(OpenTK.Matrix4);
        OpenTK.Graphics.ES30.GL.UniformMatrix4(_location,_transpose,ref _matrix);
    }
    static unsafe void Test_GetActiveAttrib_5418() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.ActiveAttribType _type = default(OpenTK.Graphics.ES30.ActiveAttribType);
        System.String r = OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,out _size,out _type);
    }
    static unsafe void Test_GetActiveAttrib_5419() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _index = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.String r = OpenTK.Graphics.ES30.GL.GetActiveAttrib(_program,_index,out _size,out _type);
    }
    static unsafe void Test_GetActiveUniform_5420() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformIndex = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.ActiveUniformType _type = default(OpenTK.Graphics.ES30.ActiveUniformType);
        System.String r = OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_uniformIndex,out _size,out _type);
    }
    static unsafe void Test_GetActiveUniform_5421() {
        System.Int32 _program = default(System.Int32);
        System.Int32 _uniformIndex = default(System.Int32);
        System.Int32 _size = default(System.Int32);
        OpenTK.Graphics.ES30.All _type = default(OpenTK.Graphics.ES30.All);
        System.String r = OpenTK.Graphics.ES30.GL.GetActiveUniform(_program,_uniformIndex,out _size,out _type);
    }
    static unsafe void Test_ShaderSource_5422() {
        System.Int32 _shader = default(System.Int32);
        System.String _string = default(System.String);
        OpenTK.Graphics.ES30.GL.ShaderSource(_shader,_string);
    }
    static unsafe void Test_GetShaderInfoLog_5423() {
        System.Int32 _shader = default(System.Int32);
        System.String r = OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader);
    }
    static unsafe void Test_GetShaderInfoLog_5424() {
        System.Int32 _shader = default(System.Int32);
        System.String _info = default(System.String);
        OpenTK.Graphics.ES30.GL.GetShaderInfoLog(_shader,out _info);
    }
    static unsafe void Test_GetProgramInfoLog_5425() {
        System.Int32 _program = default(System.Int32);
        System.String r = OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program);
    }
    static unsafe void Test_GetProgramInfoLog_5426() {
        System.Int32 _program = default(System.Int32);
        System.String _info = default(System.String);
        OpenTK.Graphics.ES30.GL.GetProgramInfoLog(_program,out _info);
    }
    static unsafe void Test_VertexAttrib2_5427() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector2 _v = default(OpenTK.Vector2);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib3_5428() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector3 _v = default(OpenTK.Vector3);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib4_5429() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector4 _v = default(OpenTK.Vector4);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_index,ref _v);
    }
    static unsafe void Test_VertexAttrib2_5430() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector2 _v = default(OpenTK.Vector2);
        OpenTK.Graphics.ES30.GL.VertexAttrib2(_index,_v);
    }
    static unsafe void Test_VertexAttrib3_5431() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector3 _v = default(OpenTK.Vector3);
        OpenTK.Graphics.ES30.GL.VertexAttrib3(_index,_v);
    }
    static unsafe void Test_VertexAttrib4_5432() {
        System.Int32 _index = default(System.Int32);
        OpenTK.Vector4 _v = default(OpenTK.Vector4);
        OpenTK.Graphics.ES30.GL.VertexAttrib4(_index,_v);
    }
    static unsafe void Test_DrawElements_5433() {
        OpenTK.Graphics.ES30.BeginMode _mode = default(OpenTK.Graphics.ES30.BeginMode);
        System.Int32 _count = default(System.Int32);
        OpenTK.Graphics.ES30.DrawElementsType _type = default(OpenTK.Graphics.ES30.DrawElementsType);
        System.Int32 _offset = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DrawElements(_mode,_count,_type,_offset);
    }
    static unsafe void Test_GenTexture_5434() {
        System.Int32 r = OpenTK.Graphics.ES30.GL.GenTexture();
    }
    static unsafe void Test_DeleteTexture_5435() {
        System.Int32 _id = default(System.Int32);
        OpenTK.Graphics.ES30.GL.DeleteTexture(_id);
    }
    static unsafe void Test_Viewport_5436() {
        System.Drawing.Size _size = default(System.Drawing.Size);
        OpenTK.Graphics.ES30.GL.Viewport(_size);
    }
    static unsafe void Test_Viewport_5437() {
        System.Drawing.Point _location = default(System.Drawing.Point);
        System.Drawing.Size _size = default(System.Drawing.Size);
        OpenTK.Graphics.ES30.GL.Viewport(_location,_size);
    }
    static unsafe void Test_Viewport_5438() {
        System.Drawing.Rectangle _rectangle = default(System.Drawing.Rectangle);
        OpenTK.Graphics.ES30.GL.Viewport(_rectangle);
    }
}
